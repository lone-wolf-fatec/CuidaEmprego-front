{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginRegisterPage from './components/LoginRegisterPage';\nimport DashboardPage from './components/DashboardPage';\nimport AdminPage from './components/AdminPage';\n\n// Componente para proteger rotas com base no papel do usuário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  var _user$roles;\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n\n  // Verificar se o usuário está autenticado\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Verificar se o usuário tem o papel necessário para acessar a rota\n  if (requiredRole === 'ADMIN' && !((_user$roles = user.roles) !== null && _user$roles !== void 0 && _user$roles.includes('ADMIN'))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginRegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          requiredRole: \"FUNCIONARIO\",\n          children: /*#__PURE__*/_jsxDEV(DashboardPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          requiredRole: \"ADMIN\",\n          children: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Navigate","LoginRegisterPage","DashboardPage","AdminPage","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_user$roles","token","localStorage","getItem","user","JSON","parse","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","roles","includes","_c","App","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport LoginRegisterPage from './components/LoginRegisterPage';\r\nimport DashboardPage from './components/DashboardPage';\r\nimport AdminPage from './components/AdminPage';\r\n\r\n// Componente para proteger rotas com base no papel do usuário\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const token = localStorage.getItem('token');\r\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n  \r\n  // Verificar se o usuário está autenticado\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n  \r\n  // Verificar se o usuário tem o papel necessário para acessar a rota\r\n  if (requiredRole === 'ADMIN' && !user.roles?.includes('ADMIN')) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n  \r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/login\" element={<LoginRegisterPage />} />\r\n        \r\n        {/* Rota para funcionários */}\r\n        <Route path=\"/\" element={\r\n          <ProtectedRoute requiredRole=\"FUNCIONARIO\">\r\n            <DashboardPage />\r\n          </ProtectedRoute>\r\n        } />\r\n        \r\n        {/* Rota para administradores */}\r\n        <Route path=\"/admin\" element={\r\n          <ProtectedRoute requiredRole=\"ADMIN\">\r\n            <AdminPage />\r\n          </ProtectedRoute>\r\n        } />\r\n        \r\n        {/* Redirecionar qualquer rota desconhecida para a página principal */}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAA,IAAAC,WAAA;EACrD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;;EAE7D;EACA,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOL,OAAA,CAACL,QAAQ;MAACgB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIb,YAAY,KAAK,OAAO,IAAI,GAAAC,WAAA,GAACI,IAAI,CAACS,KAAK,cAAAb,WAAA,eAAVA,WAAA,CAAYc,QAAQ,CAAC,OAAO,CAAC,GAAE;IAC9D,oBAAOlB,OAAA,CAACL,QAAQ;MAACgB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,OAAOd,QAAQ;AACjB,CAAC;AAACiB,EAAA,GAfIlB,cAAc;AAiBpB,SAASmB,GAAGA,CAAA,EAAG;EACb,oBACEpB,OAAA,CAACR,aAAa;IAAAU,QAAA,eACZF,OAAA,CAACP,MAAM;MAAAS,QAAA,gBACLF,OAAA,CAACN,KAAK;QAAC2B,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEtB,OAAA,CAACJ,iBAAiB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGvDhB,OAAA,CAACN,KAAK;QAAC2B,IAAI,EAAC,GAAG;QAACC,OAAO,eACrBtB,OAAA,CAACC,cAAc;UAACE,YAAY,EAAC,aAAa;UAAAD,QAAA,eACxCF,OAAA,CAACH,aAAa;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGJhB,OAAA,CAACN,KAAK;QAAC2B,IAAI,EAAC,QAAQ;QAACC,OAAO,eAC1BtB,OAAA,CAACC,cAAc;UAACE,YAAY,EAAC,OAAO;UAAAD,QAAA,eAClCF,OAAA,CAACF,SAAS;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGJhB,OAAA,CAACN,KAAK;QAAC2B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEtB,OAAA,CAACL,QAAQ;UAACgB,EAAE,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACO,GAAA,GAzBQH,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}