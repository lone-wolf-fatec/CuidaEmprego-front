{"ast":null,"code":"// No início do componente, após os estados:\nuseEffect(() => {\n  // Verificar autenticação\n  const token = localStorage.getItem('token');\n  if (!token) {\n    navigate('/login');\n    return;\n  }\n\n  // Carregar dados do usuário\n  axios.get('/api/funcionario/gestao-tempo', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    const data = response.data;\n    setUserData({\n      name: data.nome,\n      saldoBancoHoras: data.saldoBancoHoras,\n      proximaFolga: data.proximaFolga ? data.proximaFolga.dataInicio : null,\n      proximasFerias: data.proximasFerias ? data.proximasFerias.dataInicio : null\n    });\n\n    // Atualizar estatísticas\n    setEstatisticas({\n      horasTrabalhadasSemana: \"32h 15min\",\n      // Isto deve ser calculado com base nos registros\n      horasExtrasMes: `${data.contadores.horasExtrasAprovadas}h`,\n      proximaFolga: data.proximaFolga ? format(parseISO(data.proximaFolga.dataInicio), 'dd/MM/yyyy') : 'Nenhuma agendada'\n    });\n\n    // Carregar registros de ponto recentes\n    setTimeEntries(data.registrosPonto.map(rp => ({\n      type: rp.tipoRegistro === 'ENTRADA_EXPEDIENTE' || rp.tipoRegistro === 'RETORNO_ALMOCO' ? 'entrada' : 'saída',\n      time: format(parseISO(rp.dataHora), 'HH:mm'),\n      date: format(parseISO(rp.dataHora), 'dd/MM/yyyy')\n    })));\n  }).catch(error => {\n    console.error('Erro ao carregar dados:', error);\n    setError('Falha ao carregar dados do usuário');\n  });\n}, []);\n\n// Função para registrar entrada/saída atualizada:\nconst registerTimeEntry = type => {\n  const tipoRegistro = type === 'entrada' ? 'ENTRADA_EXPEDIENTE' : 'SAIDA_EXPEDIENTE';\n  axios.post('/api/funcionario/ponto', {\n    tipoRegistro: tipoRegistro\n  }, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  }).then(response => {\n    const now = new Date();\n    const newEntry = {\n      type,\n      time: now.toLocaleTimeString('pt-BR', {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      date: now.toLocaleDateString('pt-BR')\n    };\n    setTimeEntries([newEntry, ...timeEntries]);\n    setLastAction(`${type.charAt(0).toUpperCase() + type.slice(1)} registrada às ${newEntry.time}`);\n  }).catch(error => {\n    var _error$response;\n    console.error('Erro ao registrar ponto:', error);\n    alert('Falha ao registrar ponto: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Erro desconhecido'));\n  });\n};","map":{"version":3,"names":["useEffect","token","localStorage","getItem","navigate","axios","get","headers","Authorization","then","response","data","setUserData","name","nome","saldoBancoHoras","proximaFolga","dataInicio","proximasFerias","setEstatisticas","horasTrabalhadasSemana","horasExtrasMes","contadores","horasExtrasAprovadas","format","parseISO","setTimeEntries","registrosPonto","map","rp","type","tipoRegistro","time","dataHora","date","catch","error","console","setError","registerTimeEntry","post","now","Date","newEntry","toLocaleTimeString","hour","minute","toLocaleDateString","timeEntries","setLastAction","charAt","toUpperCase","slice","_error$response","alert"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/DashboardPage.js"],"sourcesContent":["// No início do componente, após os estados:\r\nuseEffect(() => {\r\n  // Verificar autenticação\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    navigate('/login');\r\n    return;\r\n  }\r\n  \r\n  // Carregar dados do usuário\r\n  axios.get('/api/funcionario/gestao-tempo', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  })\r\n    .then(response => {\r\n      const data = response.data;\r\n      setUserData({\r\n        name: data.nome,\r\n        saldoBancoHoras: data.saldoBancoHoras,\r\n        proximaFolga: data.proximaFolga ? data.proximaFolga.dataInicio : null,\r\n        proximasFerias: data.proximasFerias ? data.proximasFerias.dataInicio : null\r\n      });\r\n      \r\n      // Atualizar estatísticas\r\n      setEstatisticas({\r\n        horasTrabalhadasSemana: \"32h 15min\", // Isto deve ser calculado com base nos registros\r\n        horasExtrasMes: `${data.contadores.horasExtrasAprovadas}h`,\r\n        proximaFolga: data.proximaFolga ? format(parseISO(data.proximaFolga.dataInicio), 'dd/MM/yyyy') : 'Nenhuma agendada'\r\n      });\r\n      \r\n      // Carregar registros de ponto recentes\r\n      setTimeEntries(data.registrosPonto.map(rp => ({\r\n        type: rp.tipoRegistro === 'ENTRADA_EXPEDIENTE' || rp.tipoRegistro === 'RETORNO_ALMOCO' ? 'entrada' : 'saída',\r\n        time: format(parseISO(rp.dataHora), 'HH:mm'),\r\n        date: format(parseISO(rp.dataHora), 'dd/MM/yyyy')\r\n      })));\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao carregar dados:', error);\r\n      setError('Falha ao carregar dados do usuário');\r\n    });\r\n}, []);\r\n\r\n// Função para registrar entrada/saída atualizada:\r\nconst registerTimeEntry = (type) => {\r\n  const tipoRegistro = type === 'entrada' \r\n    ? 'ENTRADA_EXPEDIENTE' \r\n    : 'SAIDA_EXPEDIENTE';\r\n  \r\n  axios.post('/api/funcionario/ponto', {\r\n    tipoRegistro: tipoRegistro\r\n  }, {\r\n    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n  })\r\n    .then(response => {\r\n      const now = new Date();\r\n      const newEntry = {\r\n        type,\r\n        time: now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }),\r\n        date: now.toLocaleDateString('pt-BR')\r\n      };\r\n      setTimeEntries([newEntry, ...timeEntries]);\r\n      setLastAction(`${type.charAt(0).toUpperCase() + type.slice(1)} registrada às ${newEntry.time}`);\r\n    })\r\n    .catch(error => {\r\n      console.error('Erro ao registrar ponto:', error);\r\n      alert('Falha ao registrar ponto: ' + (error.response?.data || 'Erro desconhecido'));\r\n    });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}