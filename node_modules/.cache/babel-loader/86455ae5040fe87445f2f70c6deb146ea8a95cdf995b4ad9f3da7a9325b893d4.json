{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\components\\\\JornadasTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport JornadaCard from './JornadaCard';\nimport ModalJornada from './ModalJornada';\nimport ModalExcluirJornada from './ModalExcluirJornada';\nimport ModalGerenciarFuncionarios from './ModalGerenciarFuncionarios';\nimport FuncionariosService from './FuncionariosService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JornadasTab = () => {\n  _s();\n  // Estado para as jornadas de trabalho\n  const [jornadas, setJornadas] = useState(() => {\n    const storedJornadas = localStorage.getItem('jornadas');\n    return storedJornadas ? JSON.parse(storedJornadas) : [{\n      id: 1,\n      nome: 'Padrão',\n      descricao: 'Jornada padrão de 8 horas diárias',\n      horaInicio: '08:00',\n      horaFim: '17:00',\n      intervaloInicio: '12:00',\n      intervaloFim: '13:00',\n      diasTrabalho: [1, 2, 3, 4, 5],\n      // Segunda a sexta\n      cargaHorariaSemanal: 40,\n      toleranciaEntrada: 10,\n      // minutos\n      toleranciaSaida: 10,\n      // minutos\n      ativo: true\n    }, {\n      id: 2,\n      nome: 'Meio período - Manhã',\n      descricao: 'Jornada de meio período matutino',\n      horaInicio: '08:00',\n      horaFim: '12:00',\n      intervaloInicio: null,\n      intervaloFim: null,\n      diasTrabalho: [1, 2, 3, 4, 5],\n      // Segunda a sexta\n      cargaHorariaSemanal: 20,\n      toleranciaEntrada: 10,\n      toleranciaSaida: 10,\n      ativo: true\n    }, {\n      id: 3,\n      nome: 'Meio período - Tarde',\n      descricao: 'Jornada de meio período vespertino',\n      horaInicio: '13:00',\n      horaFim: '17:00',\n      intervaloInicio: null,\n      intervaloFim: null,\n      diasTrabalho: [1, 2, 3, 4, 5],\n      // Segunda a sexta\n      cargaHorariaSemanal: 20,\n      toleranciaEntrada: 10,\n      toleranciaSaida: 10,\n      ativo: true\n    }, {\n      id: 4,\n      nome: 'Escala 6x1',\n      descricao: 'Trabalho de segunda a sábado',\n      horaInicio: '08:00',\n      horaFim: '16:20',\n      intervaloInicio: '12:00',\n      intervaloFim: '13:00',\n      diasTrabalho: [1, 2, 3, 4, 5, 6],\n      // Segunda a sábado\n      cargaHorariaSemanal: 44,\n      toleranciaEntrada: 10,\n      toleranciaSaida: 10,\n      ativo: true\n    }, {\n      id: 5,\n      nome: 'Escala 12x36',\n      descricao: 'Trabalho 12 horas e folga 36 horas',\n      horaInicio: '07:00',\n      horaFim: '19:00',\n      intervaloInicio: '12:00',\n      intervaloFim: '13:00',\n      diasTrabalho: [],\n      // Escala especial\n      cargaHorariaSemanal: 36,\n      toleranciaEntrada: 15,\n      toleranciaSaida: 15,\n      ativo: true,\n      escalaEspecial: true\n    }];\n  });\n\n  // Estado para nova jornada\n  const [novaJornada, setNovaJornada] = useState({\n    nome: '',\n    descricao: '',\n    horaInicio: '',\n    horaFim: '',\n    intervaloInicio: '',\n    intervaloFim: '',\n    diasTrabalho: [],\n    cargaHorariaSemanal: 0,\n    toleranciaEntrada: 10,\n    toleranciaSaida: 10,\n    ativo: true,\n    escalaEspecial: false\n  });\n\n  // Estado para jornada em edição\n  const [jornadaEmEdicao, setJornadaEmEdicao] = useState(null);\n\n  // Estado para modal de confirmação de exclusão\n  const [modalExclusaoAberto, setModalExclusaoAberto] = useState(false);\n  const [jornadaParaExcluir, setJornadaParaExcluir] = useState(null);\n\n  // Estado para modal de edição/criação\n  const [modalJornadaAberto, setModalJornadaAberto] = useState(false);\n\n  // Estado para modal de gerenciamento de funcionários\n  const [modalFuncionariosAberto, setModalFuncionariosAberto] = useState(false);\n  const [jornadaSelecionada, setJornadaSelecionada] = useState(null);\n\n  // Estado para funcionários por jornada\n  const [funcionariosPorJornada, setFuncionariosPorJornada] = useState(() => {\n    return FuncionariosService.getFuncionariosPorJornada();\n  });\n\n  // Estado para todos os funcionários do sistema\n  const [todosFuncionarios, setTodosFuncionarios] = useState(() => {\n    return FuncionariosService.getTodosFuncionarios();\n  });\n\n  // Salvar jornadas no localStorage quando mudar\n  useEffect(() => {\n    localStorage.setItem('jornadas', JSON.stringify(jornadas));\n  }, [jornadas]);\n\n  // Salvar funcionários por jornada no localStorage quando mudar\n  useEffect(() => {\n    localStorage.setItem('funcionariosPorJornada', JSON.stringify(funcionariosPorJornada));\n  }, [funcionariosPorJornada]);\n\n  // Função para abrir modal de criação de jornada\n  const abrirModalCriarJornada = () => {\n    setJornadaEmEdicao(null);\n    setNovaJornada({\n      nome: '',\n      descricao: '',\n      horaInicio: '',\n      horaFim: '',\n      intervaloInicio: '',\n      intervaloFim: '',\n      diasTrabalho: [],\n      cargaHorariaSemanal: 0,\n      toleranciaEntrada: 10,\n      toleranciaSaida: 10,\n      ativo: true,\n      escalaEspecial: false\n    });\n    setModalJornadaAberto(true);\n  };\n\n  // Função para abrir modal de edição de jornada\n  const abrirModalEditarJornada = jornada => {\n    setJornadaEmEdicao(jornada.id);\n    setNovaJornada({\n      ...jornada,\n      diasTrabalho: [...jornada.diasTrabalho]\n    });\n    setModalJornadaAberto(true);\n  };\n\n  // Função para abrir modal de gerenciamento de funcionários\n  const abrirModalGerenciarFuncionarios = jornada => {\n    setJornadaSelecionada(jornada);\n    setModalFuncionariosAberto(true);\n  };\n\n  // Função para salvar jornada (criar ou editar)\n  const salvarJornada = e => {\n    e.preventDefault();\n    if (!novaJornada.nome || !novaJornada.horaInicio || !novaJornada.horaFim) {\n      alert('Por favor, preencha todos os campos obrigatórios.');\n      return;\n    }\n    if (!novaJornada.escalaEspecial && novaJornada.diasTrabalho.length === 0) {\n      alert('Por favor, selecione pelo menos um dia de trabalho.');\n      return;\n    }\n\n    // Calcular carga horária diária\n    const calcularHorasDiarias = () => {\n      const inicio = novaJornada.horaInicio.split(':');\n      const fim = novaJornada.horaFim.split(':');\n      let horasInicio = parseInt(inicio[0]);\n      let minutosInicio = parseInt(inicio[1]);\n      let horasFim = parseInt(fim[0]);\n      let minutosFim = parseInt(fim[1]);\n\n      // Converter para minutos totais\n      const inicioMinutos = horasInicio * 60 + minutosInicio;\n      const fimMinutos = horasFim * 60 + minutosFim;\n\n      // Calcular diferença em minutos\n      let diferencaMinutos = fimMinutos - inicioMinutos;\n\n      // Se fim < início, assumimos que passou da meia-noite\n      if (diferencaMinutos < 0) {\n        diferencaMinutos += 24 * 60;\n      }\n\n      // Subtrair intervalo se existir\n      if (novaJornada.intervaloInicio && novaJornada.intervaloFim) {\n        const inicioIntervalo = novaJornada.intervaloInicio.split(':');\n        const fimIntervalo = novaJornada.intervaloFim.split(':');\n        const intervaloInicio = parseInt(inicioIntervalo[0]) * 60 + parseInt(inicioIntervalo[1]);\n        const intervaloFim = parseInt(fimIntervalo[0]) * 60 + parseInt(fimIntervalo[1]);\n        diferencaMinutos -= intervaloFim - intervaloInicio;\n      }\n\n      // Retornar horas em formato decimal\n      return diferencaMinutos / 60;\n    };\n    const horasDiarias = calcularHorasDiarias();\n\n    // Calcular carga horária semanal se não for escala especial\n    const cargaHorariaSemanal = novaJornada.escalaEspecial ? novaJornada.cargaHorariaSemanal : Math.round(horasDiarias * novaJornada.diasTrabalho.length * 100) / 100;\n\n    // Criar nova jornada ou atualizar existente\n    if (jornadaEmEdicao) {\n      // Atualizar jornada existente\n      const jornadasAtualizadas = jornadas.map(j => j.id === jornadaEmEdicao ? {\n        ...novaJornada,\n        cargaHorariaSemanal\n      } : j);\n      setJornadas(jornadasAtualizadas);\n    } else {\n      // Criar nova jornada\n      const novaJornadaCompleta = {\n        ...novaJornada,\n        id: Date.now(),\n        cargaHorariaSemanal\n      };\n      setJornadas([...jornadas, novaJornadaCompleta]);\n\n      // Inicializar lista vazia de funcionários para esta jornada\n      setFuncionariosPorJornada({\n        ...funcionariosPorJornada,\n        [novaJornadaCompleta.id]: []\n      });\n    }\n\n    // Fechar modal\n    setModalJornadaAberto(false);\n    setJornadaEmEdicao(null);\n  };\n\n  // Função para alternar dia de trabalho\n  const alternarDiaTrabalho = dia => {\n    const diasAtuais = [...novaJornada.diasTrabalho];\n    if (diasAtuais.includes(dia)) {\n      // Remover dia\n      const novosDias = diasAtuais.filter(d => d !== dia);\n      setNovaJornada({\n        ...novaJornada,\n        diasTrabalho: novosDias\n      });\n    } else {\n      // Adicionar dia\n      const novosDias = [...diasAtuais, dia].sort((a, b) => a - b);\n      setNovaJornada({\n        ...novaJornada,\n        diasTrabalho: novosDias\n      });\n    }\n  };\n\n  // Função para confirmar exclusão de jornada\n  const confirmarExclusaoJornada = jornada => {\n    setJornadaParaExcluir(jornada);\n    setModalExclusaoAberto(true);\n  };\n\n  // Função para excluir jornada\n  const excluirJornada = () => {\n    var _funcionariosPorJorna;\n    if (!jornadaParaExcluir) return;\n\n    // Verificar se há funcionários usando esta jornada\n    if (((_funcionariosPorJorna = funcionariosPorJornada[jornadaParaExcluir.id]) === null || _funcionariosPorJorna === void 0 ? void 0 : _funcionariosPorJorna.length) > 0) {\n      alert('Não é possível excluir uma jornada com funcionários associados.');\n      setModalExclusaoAberto(false);\n      setJornadaParaExcluir(null);\n      return;\n    }\n    const jornadasAtualizadas = jornadas.filter(j => j.id !== jornadaParaExcluir.id);\n    setJornadas(jornadasAtualizadas);\n\n    // Remover da lista de funcionários por jornada\n    const novaFuncionariosPorJornada = {\n      ...funcionariosPorJornada\n    };\n    delete novaFuncionariosPorJornada[jornadaParaExcluir.id];\n    setFuncionariosPorJornada(novaFuncionariosPorJornada);\n    setModalExclusaoAberto(false);\n    setJornadaParaExcluir(null);\n  };\n\n  // Função para alternar status ativo da jornada\n  const alternarStatusJornada = id => {\n    const jornadasAtualizadas = jornadas.map(jornada => jornada.id === id ? {\n      ...jornada,\n      ativo: !jornada.ativo\n    } : jornada);\n    setJornadas(jornadasAtualizadas);\n  };\n\n  // Função para renderizar os dias da semana\n  const renderizarDiasTrabalho = dias => {\n    const nomeDias = {\n      0: 'Dom',\n      1: 'Seg',\n      2: 'Ter',\n      3: 'Qua',\n      4: 'Qui',\n      5: 'Sex',\n      6: 'Sáb'\n    };\n    if (dias.length === 0) return 'Escala especial';\n    if (dias.length === 7) return 'Todos os dias';\n    if (dias.length === 5 && dias.includes(1) && dias.includes(2) && dias.includes(3) && dias.includes(4) && dias.includes(5)) {\n      return 'Segunda a Sexta';\n    }\n    if (dias.length === 6 && dias.includes(1) && dias.includes(2) && dias.includes(3) && dias.includes(4) && dias.includes(5) && dias.includes(6)) {\n      return 'Segunda a Sábado';\n    }\n    return dias.map(dia => nomeDias[dia]).join(', ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Jornadas de Trabalho\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: abrirModalCriarJornada,\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), \"Nova Jornada\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: [jornadas.map(jornada => /*#__PURE__*/_jsxDEV(JornadaCard, {\n        jornada: jornada,\n        funcionariosPorJornada: funcionariosPorJornada,\n        renderizarDiasTrabalho: renderizarDiasTrabalho,\n        alternarStatusJornada: alternarStatusJornada,\n        abrirModalEditarJornada: abrirModalEditarJornada,\n        confirmarExclusaoJornada: confirmarExclusaoJornada,\n        abrirModalGerenciarFuncionarios: abrirModalGerenciarFuncionarios\n      }, jornada.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)), jornadas.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2 text-center py-8 text-purple-300\",\n        children: \"Nenhuma jornada de trabalho cadastrada. Clique em \\\"Nova Jornada\\\" para criar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), modalJornadaAberto && /*#__PURE__*/_jsxDEV(ModalJornada, {\n      jornadaEmEdicao: jornadaEmEdicao,\n      novaJornada: novaJornada,\n      setNovaJornada: setNovaJornada,\n      salvarJornada: salvarJornada,\n      fecharModal: () => setModalJornadaAberto(false),\n      alternarDiaTrabalho: alternarDiaTrabalho\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), modalFuncionariosAberto && jornadaSelecionada && /*#__PURE__*/_jsxDEV(ModalGerenciarFuncionarios, {\n      jornadaSelecionada: jornadaSelecionada,\n      funcionariosPorJornada: funcionariosPorJornada,\n      setFuncionariosPorJornada: setFuncionariosPorJornada,\n      todosFuncionarios: todosFuncionarios,\n      fecharModal: () => setModalFuncionariosAberto(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), modalExclusaoAberto && /*#__PURE__*/_jsxDEV(ModalExcluirJornada, {\n      jornadaParaExcluir: jornadaParaExcluir,\n      funcionariosPorJornada: funcionariosPorJornada,\n      excluirJornada: excluirJornada,\n      fecharModal: () => setModalExclusaoAberto(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n};\n_s(JornadasTab, \"PWVCm4fL2MyjQXW1tK8d1xEbBu8=\");\n_c = JornadasTab;\nexport default JornadasTab;\nvar _c;\n$RefreshReg$(_c, \"JornadasTab\");","map":{"version":3,"names":["React","useState","useEffect","JornadaCard","ModalJornada","ModalExcluirJornada","ModalGerenciarFuncionarios","FuncionariosService","jsxDEV","_jsxDEV","JornadasTab","_s","jornadas","setJornadas","storedJornadas","localStorage","getItem","JSON","parse","id","nome","descricao","horaInicio","horaFim","intervaloInicio","intervaloFim","diasTrabalho","cargaHorariaSemanal","toleranciaEntrada","toleranciaSaida","ativo","escalaEspecial","novaJornada","setNovaJornada","jornadaEmEdicao","setJornadaEmEdicao","modalExclusaoAberto","setModalExclusaoAberto","jornadaParaExcluir","setJornadaParaExcluir","modalJornadaAberto","setModalJornadaAberto","modalFuncionariosAberto","setModalFuncionariosAberto","jornadaSelecionada","setJornadaSelecionada","funcionariosPorJornada","setFuncionariosPorJornada","getFuncionariosPorJornada","todosFuncionarios","setTodosFuncionarios","getTodosFuncionarios","setItem","stringify","abrirModalCriarJornada","abrirModalEditarJornada","jornada","abrirModalGerenciarFuncionarios","salvarJornada","e","preventDefault","alert","length","calcularHorasDiarias","inicio","split","fim","horasInicio","parseInt","minutosInicio","horasFim","minutosFim","inicioMinutos","fimMinutos","diferencaMinutos","inicioIntervalo","fimIntervalo","horasDiarias","Math","round","jornadasAtualizadas","map","j","novaJornadaCompleta","Date","now","alternarDiaTrabalho","dia","diasAtuais","includes","novosDias","filter","d","sort","a","b","confirmarExclusaoJornada","excluirJornada","_funcionariosPorJorna","novaFuncionariosPorJornada","alternarStatusJornada","renderizarDiasTrabalho","dias","nomeDias","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","fecharModal","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/components/JornadasTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport JornadaCard from './JornadaCard';\r\nimport ModalJornada from './ModalJornada';\r\nimport ModalExcluirJornada from './ModalExcluirJornada';\r\nimport ModalGerenciarFuncionarios from './ModalGerenciarFuncionarios';\r\nimport FuncionariosService from './FuncionariosService';\r\n\r\nconst JornadasTab = () => {\r\n  // Estado para as jornadas de trabalho\r\n  const [jornadas, setJornadas] = useState(() => {\r\n    const storedJornadas = localStorage.getItem('jornadas');\r\n    return storedJornadas ? JSON.parse(storedJornadas) : [\r\n      {\r\n        id: 1,\r\n        nome: 'Padrão',\r\n        descricao: 'Jornada padrão de 8 horas diárias',\r\n        horaInicio: '08:00',\r\n        horaFim: '17:00',\r\n        intervaloInicio: '12:00',\r\n        intervaloFim: '13:00',\r\n        diasTrabalho: [1, 2, 3, 4, 5], // Segunda a sexta\r\n        cargaHorariaSemanal: 40,\r\n        toleranciaEntrada: 10, // minutos\r\n        toleranciaSaida: 10, // minutos\r\n        ativo: true\r\n      },\r\n      {\r\n        id: 2,\r\n        nome: 'Meio período - Manhã',\r\n        descricao: 'Jornada de meio período matutino',\r\n        horaInicio: '08:00',\r\n        horaFim: '12:00',\r\n        intervaloInicio: null,\r\n        intervaloFim: null,\r\n        diasTrabalho: [1, 2, 3, 4, 5], // Segunda a sexta\r\n        cargaHorariaSemanal: 20,\r\n        toleranciaEntrada: 10,\r\n        toleranciaSaida: 10,\r\n        ativo: true\r\n      },\r\n      {\r\n        id: 3,\r\n        nome: 'Meio período - Tarde',\r\n        descricao: 'Jornada de meio período vespertino',\r\n        horaInicio: '13:00',\r\n        horaFim: '17:00',\r\n        intervaloInicio: null,\r\n        intervaloFim: null,\r\n        diasTrabalho: [1, 2, 3, 4, 5], // Segunda a sexta\r\n        cargaHorariaSemanal: 20,\r\n        toleranciaEntrada: 10,\r\n        toleranciaSaida: 10,\r\n        ativo: true\r\n      },\r\n      {\r\n        id: 4,\r\n        nome: 'Escala 6x1',\r\n        descricao: 'Trabalho de segunda a sábado',\r\n        horaInicio: '08:00',\r\n        horaFim: '16:20',\r\n        intervaloInicio: '12:00',\r\n        intervaloFim: '13:00',\r\n        diasTrabalho: [1, 2, 3, 4, 5, 6], // Segunda a sábado\r\n        cargaHorariaSemanal: 44,\r\n        toleranciaEntrada: 10,\r\n        toleranciaSaida: 10,\r\n        ativo: true\r\n      },\r\n      {\r\n        id: 5,\r\n        nome: 'Escala 12x36',\r\n        descricao: 'Trabalho 12 horas e folga 36 horas',\r\n        horaInicio: '07:00',\r\n        horaFim: '19:00',\r\n        intervaloInicio: '12:00',\r\n        intervaloFim: '13:00',\r\n        diasTrabalho: [], // Escala especial\r\n        cargaHorariaSemanal: 36,\r\n        toleranciaEntrada: 15,\r\n        toleranciaSaida: 15,\r\n        ativo: true,\r\n        escalaEspecial: true\r\n      },\r\n    ];\r\n  });\r\n  \r\n  // Estado para nova jornada\r\n  const [novaJornada, setNovaJornada] = useState({\r\n    nome: '',\r\n    descricao: '',\r\n    horaInicio: '',\r\n    horaFim: '',\r\n    intervaloInicio: '',\r\n    intervaloFim: '',\r\n    diasTrabalho: [],\r\n    cargaHorariaSemanal: 0,\r\n    toleranciaEntrada: 10,\r\n    toleranciaSaida: 10,\r\n    ativo: true,\r\n    escalaEspecial: false\r\n  });\r\n  \r\n  // Estado para jornada em edição\r\n  const [jornadaEmEdicao, setJornadaEmEdicao] = useState(null);\r\n  \r\n  // Estado para modal de confirmação de exclusão\r\n  const [modalExclusaoAberto, setModalExclusaoAberto] = useState(false);\r\n  const [jornadaParaExcluir, setJornadaParaExcluir] = useState(null);\r\n  \r\n  // Estado para modal de edição/criação\r\n  const [modalJornadaAberto, setModalJornadaAberto] = useState(false);\r\n  \r\n  // Estado para modal de gerenciamento de funcionários\r\n  const [modalFuncionariosAberto, setModalFuncionariosAberto] = useState(false);\r\n  const [jornadaSelecionada, setJornadaSelecionada] = useState(null);\r\n  \r\n  // Estado para funcionários por jornada\r\n  const [funcionariosPorJornada, setFuncionariosPorJornada] = useState(() => {\r\n    return FuncionariosService.getFuncionariosPorJornada();\r\n  });\r\n  \r\n  // Estado para todos os funcionários do sistema\r\n  const [todosFuncionarios, setTodosFuncionarios] = useState(() => {\r\n    return FuncionariosService.getTodosFuncionarios();\r\n  });\r\n  \r\n  // Salvar jornadas no localStorage quando mudar\r\n  useEffect(() => {\r\n    localStorage.setItem('jornadas', JSON.stringify(jornadas));\r\n  }, [jornadas]);\r\n  \r\n  // Salvar funcionários por jornada no localStorage quando mudar\r\n  useEffect(() => {\r\n    localStorage.setItem('funcionariosPorJornada', JSON.stringify(funcionariosPorJornada));\r\n  }, [funcionariosPorJornada]);\r\n  \r\n  // Função para abrir modal de criação de jornada\r\n  const abrirModalCriarJornada = () => {\r\n    setJornadaEmEdicao(null);\r\n    setNovaJornada({\r\n      nome: '',\r\n      descricao: '',\r\n      horaInicio: '',\r\n      horaFim: '',\r\n      intervaloInicio: '',\r\n      intervaloFim: '',\r\n      diasTrabalho: [],\r\n      cargaHorariaSemanal: 0,\r\n      toleranciaEntrada: 10,\r\n      toleranciaSaida: 10,\r\n      ativo: true,\r\n      escalaEspecial: false\r\n    });\r\n    setModalJornadaAberto(true);\r\n  };\r\n  \r\n  // Função para abrir modal de edição de jornada\r\n  const abrirModalEditarJornada = (jornada) => {\r\n    setJornadaEmEdicao(jornada.id);\r\n    setNovaJornada({\r\n      ...jornada,\r\n      diasTrabalho: [...jornada.diasTrabalho]\r\n    });\r\n    setModalJornadaAberto(true);\r\n  };\r\n  \r\n  // Função para abrir modal de gerenciamento de funcionários\r\n  const abrirModalGerenciarFuncionarios = (jornada) => {\r\n    setJornadaSelecionada(jornada);\r\n    setModalFuncionariosAberto(true);\r\n  };\r\n  \r\n  // Função para salvar jornada (criar ou editar)\r\n  const salvarJornada = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!novaJornada.nome || !novaJornada.horaInicio || !novaJornada.horaFim) {\r\n      alert('Por favor, preencha todos os campos obrigatórios.');\r\n      return;\r\n    }\r\n    \r\n    if (!novaJornada.escalaEspecial && novaJornada.diasTrabalho.length === 0) {\r\n      alert('Por favor, selecione pelo menos um dia de trabalho.');\r\n      return;\r\n    }\r\n    \r\n    // Calcular carga horária diária\r\n    const calcularHorasDiarias = () => {\r\n      const inicio = novaJornada.horaInicio.split(':');\r\n      const fim = novaJornada.horaFim.split(':');\r\n      \r\n      let horasInicio = parseInt(inicio[0]);\r\n      let minutosInicio = parseInt(inicio[1]);\r\n      let horasFim = parseInt(fim[0]);\r\n      let minutosFim = parseInt(fim[1]);\r\n      \r\n      // Converter para minutos totais\r\n      const inicioMinutos = horasInicio * 60 + minutosInicio;\r\n      const fimMinutos = horasFim * 60 + minutosFim;\r\n      \r\n      // Calcular diferença em minutos\r\n      let diferencaMinutos = fimMinutos - inicioMinutos;\r\n      \r\n      // Se fim < início, assumimos que passou da meia-noite\r\n      if (diferencaMinutos < 0) {\r\n        diferencaMinutos += 24 * 60;\r\n      }\r\n      \r\n      // Subtrair intervalo se existir\r\n      if (novaJornada.intervaloInicio && novaJornada.intervaloFim) {\r\n        const inicioIntervalo = novaJornada.intervaloInicio.split(':');\r\n        const fimIntervalo = novaJornada.intervaloFim.split(':');\r\n        \r\n        const intervaloInicio = parseInt(inicioIntervalo[0]) * 60 + parseInt(inicioIntervalo[1]);\r\n        const intervaloFim = parseInt(fimIntervalo[0]) * 60 + parseInt(fimIntervalo[1]);\r\n        \r\n        diferencaMinutos -= (intervaloFim - intervaloInicio);\r\n      }\r\n      \r\n      // Retornar horas em formato decimal\r\n      return diferencaMinutos / 60;\r\n    };\r\n    \r\n    const horasDiarias = calcularHorasDiarias();\r\n    \r\n    // Calcular carga horária semanal se não for escala especial\r\n    const cargaHorariaSemanal = novaJornada.escalaEspecial \r\n      ? novaJornada.cargaHorariaSemanal \r\n      : Math.round(horasDiarias * novaJornada.diasTrabalho.length * 100) / 100;\r\n    \r\n    // Criar nova jornada ou atualizar existente\r\n    if (jornadaEmEdicao) {\r\n      // Atualizar jornada existente\r\n      const jornadasAtualizadas = jornadas.map(j => \r\n        j.id === jornadaEmEdicao ? { ...novaJornada, cargaHorariaSemanal } : j\r\n      );\r\n      \r\n      setJornadas(jornadasAtualizadas);\r\n    } else {\r\n      // Criar nova jornada\r\n      const novaJornadaCompleta = {\r\n        ...novaJornada,\r\n        id: Date.now(),\r\n        cargaHorariaSemanal\r\n      };\r\n      \r\n      setJornadas([...jornadas, novaJornadaCompleta]);\r\n      \r\n      // Inicializar lista vazia de funcionários para esta jornada\r\n      setFuncionariosPorJornada({\r\n        ...funcionariosPorJornada,\r\n        [novaJornadaCompleta.id]: []\r\n      });\r\n    }\r\n    \r\n    // Fechar modal\r\n    setModalJornadaAberto(false);\r\n    setJornadaEmEdicao(null);\r\n  };\r\n  \r\n  // Função para alternar dia de trabalho\r\n  const alternarDiaTrabalho = (dia) => {\r\n    const diasAtuais = [...novaJornada.diasTrabalho];\r\n    \r\n    if (diasAtuais.includes(dia)) {\r\n      // Remover dia\r\n      const novosDias = diasAtuais.filter(d => d !== dia);\r\n      setNovaJornada({ ...novaJornada, diasTrabalho: novosDias });\r\n    } else {\r\n      // Adicionar dia\r\n      const novosDias = [...diasAtuais, dia].sort((a, b) => a - b);\r\n      setNovaJornada({ ...novaJornada, diasTrabalho: novosDias });\r\n    }\r\n  };\r\n  \r\n  // Função para confirmar exclusão de jornada\r\n  const confirmarExclusaoJornada = (jornada) => {\r\n    setJornadaParaExcluir(jornada);\r\n    setModalExclusaoAberto(true);\r\n  };\r\n  \r\n  // Função para excluir jornada\r\n  const excluirJornada = () => {\r\n    if (!jornadaParaExcluir) return;\r\n    \r\n    // Verificar se há funcionários usando esta jornada\r\n    if (funcionariosPorJornada[jornadaParaExcluir.id]?.length > 0) {\r\n      alert('Não é possível excluir uma jornada com funcionários associados.');\r\n      setModalExclusaoAberto(false);\r\n      setJornadaParaExcluir(null);\r\n      return;\r\n    }\r\n    \r\n    const jornadasAtualizadas = jornadas.filter(j => j.id !== jornadaParaExcluir.id);\r\n    setJornadas(jornadasAtualizadas);\r\n    \r\n    // Remover da lista de funcionários por jornada\r\n    const novaFuncionariosPorJornada = { ...funcionariosPorJornada };\r\n    delete novaFuncionariosPorJornada[jornadaParaExcluir.id];\r\n    setFuncionariosPorJornada(novaFuncionariosPorJornada);\r\n    \r\n    setModalExclusaoAberto(false);\r\n    setJornadaParaExcluir(null);\r\n  };\r\n  \r\n  // Função para alternar status ativo da jornada\r\n  const alternarStatusJornada = (id) => {\r\n    const jornadasAtualizadas = jornadas.map(jornada =>\r\n      jornada.id === id ? { ...jornada, ativo: !jornada.ativo } : jornada\r\n    );\r\n    \r\n    setJornadas(jornadasAtualizadas);\r\n  };\r\n  \r\n  // Função para renderizar os dias da semana\r\n  const renderizarDiasTrabalho = (dias) => {\r\n    const nomeDias = {\r\n      0: 'Dom',\r\n      1: 'Seg',\r\n      2: 'Ter',\r\n      3: 'Qua',\r\n      4: 'Qui',\r\n      5: 'Sex',\r\n      6: 'Sáb'\r\n    };\r\n    \r\n    if (dias.length === 0) return 'Escala especial';\r\n    if (dias.length === 7) return 'Todos os dias';\r\n    \r\n    if (dias.length === 5 && dias.includes(1) && dias.includes(2) && \r\n        dias.includes(3) && dias.includes(4) && dias.includes(5)) {\r\n      return 'Segunda a Sexta';\r\n    }\r\n    \r\n    if (dias.length === 6 && dias.includes(1) && dias.includes(2) && \r\n        dias.includes(3) && dias.includes(4) && dias.includes(5) && dias.includes(6)) {\r\n      return 'Segunda a Sábado';\r\n    }\r\n    \r\n    return dias.map(dia => nomeDias[dia]).join(', ');\r\n  };\r\n  \r\n  return (\r\n    <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold\">Jornadas de Trabalho</h1>\r\n        <button \r\n          onClick={abrirModalCriarJornada}\r\n          className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n          </svg>\r\n          Nova Jornada\r\n        </button>\r\n      </div>\r\n      \r\n      {/* Lista de Jornadas */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {jornadas.map(jornada => (\r\n          <JornadaCard\r\n            key={jornada.id}\r\n            jornada={jornada}\r\n            funcionariosPorJornada={funcionariosPorJornada}\r\n            renderizarDiasTrabalho={renderizarDiasTrabalho}\r\n            alternarStatusJornada={alternarStatusJornada}\r\n            abrirModalEditarJornada={abrirModalEditarJornada}\r\n            confirmarExclusaoJornada={confirmarExclusaoJornada}\r\n            abrirModalGerenciarFuncionarios={abrirModalGerenciarFuncionarios}\r\n          />\r\n        ))}\r\n        \r\n        {jornadas.length === 0 && (\r\n          <div className=\"col-span-2 text-center py-8 text-purple-300\">\r\n            Nenhuma jornada de trabalho cadastrada. Clique em \"Nova Jornada\" para criar.\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Modal de Edição/Criação de Jornada */}\r\n      {modalJornadaAberto && (\r\n        <ModalJornada\r\n          jornadaEmEdicao={jornadaEmEdicao}\r\n          novaJornada={novaJornada}\r\n          setNovaJornada={setNovaJornada}\r\n          salvarJornada={salvarJornada}\r\n          fecharModal={() => setModalJornadaAberto(false)}\r\n          alternarDiaTrabalho={alternarDiaTrabalho}\r\n        />\r\n      )}\r\n      \r\n      {/* Modal de Gerenciamento de Funcionários */}\r\n      {modalFuncionariosAberto && jornadaSelecionada && (\r\n        <ModalGerenciarFuncionarios\r\n          jornadaSelecionada={jornadaSelecionada}\r\n          funcionariosPorJornada={funcionariosPorJornada}\r\n          setFuncionariosPorJornada={setFuncionariosPorJornada}\r\n          todosFuncionarios={todosFuncionarios}\r\n          fecharModal={() => setModalFuncionariosAberto(false)}\r\n        />\r\n      )}\r\n      \r\n      {/* Modal de Confirmação de Exclusão */}\r\n      {modalExclusaoAberto && (\r\n        <ModalExcluirJornada\r\n          jornadaParaExcluir={jornadaParaExcluir}\r\n          funcionariosPorJornada={funcionariosPorJornada}\r\n          excluirJornada={excluirJornada}\r\n          fecharModal={() => setModalExclusaoAberto(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JornadasTab;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,0BAA0B,MAAM,8BAA8B;AACrE,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IAC7C,MAAMa,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,OAAOF,cAAc,GAAGG,IAAI,CAACC,KAAK,CAACJ,cAAc,CAAC,GAAG,CACnD;MACEK,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,QAAQ;MACdC,SAAS,EAAE,mCAAmC;MAC9CC,UAAU,EAAE,OAAO;MACnBC,OAAO,EAAE,OAAO;MAChBC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,OAAO;MACrBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MAC/BC,mBAAmB,EAAE,EAAE;MACvBC,iBAAiB,EAAE,EAAE;MAAE;MACvBC,eAAe,EAAE,EAAE;MAAE;MACrBC,KAAK,EAAE;IACT,CAAC,EACD;MACEX,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,sBAAsB;MAC5BC,SAAS,EAAE,kCAAkC;MAC7CC,UAAU,EAAE,OAAO;MACnBC,OAAO,EAAE,OAAO;MAChBC,eAAe,EAAE,IAAI;MACrBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MAC/BC,mBAAmB,EAAE,EAAE;MACvBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE;IACT,CAAC,EACD;MACEX,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,sBAAsB;MAC5BC,SAAS,EAAE,oCAAoC;MAC/CC,UAAU,EAAE,OAAO;MACnBC,OAAO,EAAE,OAAO;MAChBC,eAAe,EAAE,IAAI;MACrBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MAC/BC,mBAAmB,EAAE,EAAE;MACvBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE;IACT,CAAC,EACD;MACEX,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,YAAY;MAClBC,SAAS,EAAE,8BAA8B;MACzCC,UAAU,EAAE,OAAO;MACnBC,OAAO,EAAE,OAAO;MAChBC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,OAAO;MACrBC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAE;MAClCC,mBAAmB,EAAE,EAAE;MACvBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE;IACT,CAAC,EACD;MACEX,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,SAAS,EAAE,oCAAoC;MAC/CC,UAAU,EAAE,OAAO;MACnBC,OAAO,EAAE,OAAO;MAChBC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,OAAO;MACrBC,YAAY,EAAE,EAAE;MAAE;MAClBC,mBAAmB,EAAE,EAAE;MACvBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,IAAI;MACXC,cAAc,EAAE;IAClB,CAAC,CACF;EACH,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC;IAC7CmB,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,mBAAmB,EAAE,CAAC;IACtBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,KAAK,EAAE,IAAI;IACXC,cAAc,EAAE;EAClB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM,CAACmC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACqC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;;EAElE;EACA,MAAM,CAACuC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;;EAEnE;EACA,MAAM,CAACyC,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAAC2C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;;EAElE;EACA,MAAM,CAAC6C,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG9C,QAAQ,CAAC,MAAM;IACzE,OAAOM,mBAAmB,CAACyC,yBAAyB,CAAC,CAAC;EACxD,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjD,QAAQ,CAAC,MAAM;IAC/D,OAAOM,mBAAmB,CAAC4C,oBAAoB,CAAC,CAAC;EACnD,CAAC,CAAC;;EAEF;EACAjD,SAAS,CAAC,MAAM;IACda,YAAY,CAACqC,OAAO,CAAC,UAAU,EAAEnC,IAAI,CAACoC,SAAS,CAACzC,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAV,SAAS,CAAC,MAAM;IACda,YAAY,CAACqC,OAAO,CAAC,wBAAwB,EAAEnC,IAAI,CAACoC,SAAS,CAACP,sBAAsB,CAAC,CAAC;EACxF,CAAC,EAAE,CAACA,sBAAsB,CAAC,CAAC;;EAE5B;EACA,MAAMQ,sBAAsB,GAAGA,CAAA,KAAM;IACnCnB,kBAAkB,CAAC,IAAI,CAAC;IACxBF,cAAc,CAAC;MACbb,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,mBAAmB,EAAE,CAAC;MACtBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,IAAI;MACXC,cAAc,EAAE;IAClB,CAAC,CAAC;IACFU,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMc,uBAAuB,GAAIC,OAAO,IAAK;IAC3CrB,kBAAkB,CAACqB,OAAO,CAACrC,EAAE,CAAC;IAC9Bc,cAAc,CAAC;MACb,GAAGuB,OAAO;MACV9B,YAAY,EAAE,CAAC,GAAG8B,OAAO,CAAC9B,YAAY;IACxC,CAAC,CAAC;IACFe,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMgB,+BAA+B,GAAID,OAAO,IAAK;IACnDX,qBAAqB,CAACW,OAAO,CAAC;IAC9Bb,0BAA0B,CAAC,IAAI,CAAC;EAClC,CAAC;;EAED;EACA,MAAMe,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAC5B,WAAW,CAACZ,IAAI,IAAI,CAACY,WAAW,CAACV,UAAU,IAAI,CAACU,WAAW,CAACT,OAAO,EAAE;MACxEsC,KAAK,CAAC,mDAAmD,CAAC;MAC1D;IACF;IAEA,IAAI,CAAC7B,WAAW,CAACD,cAAc,IAAIC,WAAW,CAACN,YAAY,CAACoC,MAAM,KAAK,CAAC,EAAE;MACxED,KAAK,CAAC,qDAAqD,CAAC;MAC5D;IACF;;IAEA;IACA,MAAME,oBAAoB,GAAGA,CAAA,KAAM;MACjC,MAAMC,MAAM,GAAGhC,WAAW,CAACV,UAAU,CAAC2C,KAAK,CAAC,GAAG,CAAC;MAChD,MAAMC,GAAG,GAAGlC,WAAW,CAACT,OAAO,CAAC0C,KAAK,CAAC,GAAG,CAAC;MAE1C,IAAIE,WAAW,GAAGC,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;MACrC,IAAIK,aAAa,GAAGD,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;MACvC,IAAIM,QAAQ,GAAGF,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/B,IAAIK,UAAU,GAAGH,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEjC;MACA,MAAMM,aAAa,GAAGL,WAAW,GAAG,EAAE,GAAGE,aAAa;MACtD,MAAMI,UAAU,GAAGH,QAAQ,GAAG,EAAE,GAAGC,UAAU;;MAE7C;MACA,IAAIG,gBAAgB,GAAGD,UAAU,GAAGD,aAAa;;MAEjD;MACA,IAAIE,gBAAgB,GAAG,CAAC,EAAE;QACxBA,gBAAgB,IAAI,EAAE,GAAG,EAAE;MAC7B;;MAEA;MACA,IAAI1C,WAAW,CAACR,eAAe,IAAIQ,WAAW,CAACP,YAAY,EAAE;QAC3D,MAAMkD,eAAe,GAAG3C,WAAW,CAACR,eAAe,CAACyC,KAAK,CAAC,GAAG,CAAC;QAC9D,MAAMW,YAAY,GAAG5C,WAAW,CAACP,YAAY,CAACwC,KAAK,CAAC,GAAG,CAAC;QAExD,MAAMzC,eAAe,GAAG4C,QAAQ,CAACO,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGP,QAAQ,CAACO,eAAe,CAAC,CAAC,CAAC,CAAC;QACxF,MAAMlD,YAAY,GAAG2C,QAAQ,CAACQ,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGR,QAAQ,CAACQ,YAAY,CAAC,CAAC,CAAC,CAAC;QAE/EF,gBAAgB,IAAKjD,YAAY,GAAGD,eAAgB;MACtD;;MAEA;MACA,OAAOkD,gBAAgB,GAAG,EAAE;IAC9B,CAAC;IAED,MAAMG,YAAY,GAAGd,oBAAoB,CAAC,CAAC;;IAE3C;IACA,MAAMpC,mBAAmB,GAAGK,WAAW,CAACD,cAAc,GAClDC,WAAW,CAACL,mBAAmB,GAC/BmD,IAAI,CAACC,KAAK,CAACF,YAAY,GAAG7C,WAAW,CAACN,YAAY,CAACoC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG;;IAE1E;IACA,IAAI5B,eAAe,EAAE;MACnB;MACA,MAAM8C,mBAAmB,GAAGpE,QAAQ,CAACqE,GAAG,CAACC,CAAC,IACxCA,CAAC,CAAC/D,EAAE,KAAKe,eAAe,GAAG;QAAE,GAAGF,WAAW;QAAEL;MAAoB,CAAC,GAAGuD,CACvE,CAAC;MAEDrE,WAAW,CAACmE,mBAAmB,CAAC;IAClC,CAAC,MAAM;MACL;MACA,MAAMG,mBAAmB,GAAG;QAC1B,GAAGnD,WAAW;QACdb,EAAE,EAAEiE,IAAI,CAACC,GAAG,CAAC,CAAC;QACd1D;MACF,CAAC;MAEDd,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEuE,mBAAmB,CAAC,CAAC;;MAE/C;MACApC,yBAAyB,CAAC;QACxB,GAAGD,sBAAsB;QACzB,CAACqC,mBAAmB,CAAChE,EAAE,GAAG;MAC5B,CAAC,CAAC;IACJ;;IAEA;IACAsB,qBAAqB,CAAC,KAAK,CAAC;IAC5BN,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMmD,mBAAmB,GAAIC,GAAG,IAAK;IACnC,MAAMC,UAAU,GAAG,CAAC,GAAGxD,WAAW,CAACN,YAAY,CAAC;IAEhD,IAAI8D,UAAU,CAACC,QAAQ,CAACF,GAAG,CAAC,EAAE;MAC5B;MACA,MAAMG,SAAS,GAAGF,UAAU,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKL,GAAG,CAAC;MACnDtD,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEN,YAAY,EAAEgE;MAAU,CAAC,CAAC;IAC7D,CAAC,MAAM;MACL;MACA,MAAMA,SAAS,GAAG,CAAC,GAAGF,UAAU,EAAED,GAAG,CAAC,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;MAC5D9D,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEN,YAAY,EAAEgE;MAAU,CAAC,CAAC;IAC7D;EACF,CAAC;;EAED;EACA,MAAMM,wBAAwB,GAAIxC,OAAO,IAAK;IAC5CjB,qBAAqB,CAACiB,OAAO,CAAC;IAC9BnB,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;;EAED;EACA,MAAM4D,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,IAAI,CAAC5D,kBAAkB,EAAE;;IAEzB;IACA,IAAI,EAAA4D,qBAAA,GAAApD,sBAAsB,CAACR,kBAAkB,CAACnB,EAAE,CAAC,cAAA+E,qBAAA,uBAA7CA,qBAAA,CAA+CpC,MAAM,IAAG,CAAC,EAAE;MAC7DD,KAAK,CAAC,iEAAiE,CAAC;MACxExB,sBAAsB,CAAC,KAAK,CAAC;MAC7BE,qBAAqB,CAAC,IAAI,CAAC;MAC3B;IACF;IAEA,MAAMyC,mBAAmB,GAAGpE,QAAQ,CAAC+E,MAAM,CAACT,CAAC,IAAIA,CAAC,CAAC/D,EAAE,KAAKmB,kBAAkB,CAACnB,EAAE,CAAC;IAChFN,WAAW,CAACmE,mBAAmB,CAAC;;IAEhC;IACA,MAAMmB,0BAA0B,GAAG;MAAE,GAAGrD;IAAuB,CAAC;IAChE,OAAOqD,0BAA0B,CAAC7D,kBAAkB,CAACnB,EAAE,CAAC;IACxD4B,yBAAyB,CAACoD,0BAA0B,CAAC;IAErD9D,sBAAsB,CAAC,KAAK,CAAC;IAC7BE,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;;EAED;EACA,MAAM6D,qBAAqB,GAAIjF,EAAE,IAAK;IACpC,MAAM6D,mBAAmB,GAAGpE,QAAQ,CAACqE,GAAG,CAACzB,OAAO,IAC9CA,OAAO,CAACrC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGqC,OAAO;MAAE1B,KAAK,EAAE,CAAC0B,OAAO,CAAC1B;IAAM,CAAC,GAAG0B,OAC9D,CAAC;IAED3C,WAAW,CAACmE,mBAAmB,CAAC;EAClC,CAAC;;EAED;EACA,MAAMqB,sBAAsB,GAAIC,IAAI,IAAK;IACvC,MAAMC,QAAQ,GAAG;MACf,CAAC,EAAE,KAAK;MACR,CAAC,EAAE,KAAK;MACR,CAAC,EAAE,KAAK;MACR,CAAC,EAAE,KAAK;MACR,CAAC,EAAE,KAAK;MACR,CAAC,EAAE,KAAK;MACR,CAAC,EAAE;IACL,CAAC;IAED,IAAID,IAAI,CAACxC,MAAM,KAAK,CAAC,EAAE,OAAO,iBAAiB;IAC/C,IAAIwC,IAAI,CAACxC,MAAM,KAAK,CAAC,EAAE,OAAO,eAAe;IAE7C,IAAIwC,IAAI,CAACxC,MAAM,KAAK,CAAC,IAAIwC,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IAAIa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IACzDa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IAAIa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IAAIa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,EAAE;MAC5D,OAAO,iBAAiB;IAC1B;IAEA,IAAIa,IAAI,CAACxC,MAAM,KAAK,CAAC,IAAIwC,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IAAIa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IACzDa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IAAIa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IAAIa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,IAAIa,IAAI,CAACb,QAAQ,CAAC,CAAC,CAAC,EAAE;MAChF,OAAO,kBAAkB;IAC3B;IAEA,OAAOa,IAAI,CAACrB,GAAG,CAACM,GAAG,IAAIgB,QAAQ,CAAChB,GAAG,CAAC,CAAC,CAACiB,IAAI,CAAC,IAAI,CAAC;EAClD,CAAC;EAED,oBACE/F,OAAA;IAAKgG,SAAS,EAAC,uEAAuE;IAAAC,QAAA,gBACpFjG,OAAA;MAAKgG,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDjG,OAAA;QAAIgG,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5DrG,OAAA;QACEsG,OAAO,EAAEzD,sBAAuB;QAChCmD,SAAS,EAAC,8FAA8F;QAAAC,QAAA,gBAExGjG,OAAA;UAAKuG,KAAK,EAAC,4BAA4B;UAACP,SAAS,EAAC,cAAc;UAACQ,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAACC,MAAM,EAAC,cAAc;UAAAT,QAAA,eACpHjG,OAAA;YAAM2G,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,WAAW,EAAE,CAAE;YAAC1B,CAAC,EAAC;UAA4B;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC,gBAER;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNrG,OAAA;MAAKgG,SAAS,EAAC,uCAAuC;MAAAC,QAAA,GACnD9F,QAAQ,CAACqE,GAAG,CAACzB,OAAO,iBACnB/C,OAAA,CAACN,WAAW;QAEVqD,OAAO,EAAEA,OAAQ;QACjBV,sBAAsB,EAAEA,sBAAuB;QAC/CuD,sBAAsB,EAAEA,sBAAuB;QAC/CD,qBAAqB,EAAEA,qBAAsB;QAC7C7C,uBAAuB,EAAEA,uBAAwB;QACjDyC,wBAAwB,EAAEA,wBAAyB;QACnDvC,+BAA+B,EAAEA;MAAgC,GAP5DD,OAAO,CAACrC,EAAE;QAAAwF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQhB,CACF,CAAC,EAEDlG,QAAQ,CAACkD,MAAM,KAAK,CAAC,iBACpBrD,OAAA;QAAKgG,SAAS,EAAC,6CAA6C;QAAAC,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGLtE,kBAAkB,iBACjB/B,OAAA,CAACL,YAAY;MACX8B,eAAe,EAAEA,eAAgB;MACjCF,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/ByB,aAAa,EAAEA,aAAc;MAC7B6D,WAAW,EAAEA,CAAA,KAAM9E,qBAAqB,CAAC,KAAK,CAAE;MAChD6C,mBAAmB,EAAEA;IAAoB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACF,EAGApE,uBAAuB,IAAIE,kBAAkB,iBAC5CnC,OAAA,CAACH,0BAA0B;MACzBsC,kBAAkB,EAAEA,kBAAmB;MACvCE,sBAAsB,EAAEA,sBAAuB;MAC/CC,yBAAyB,EAAEA,yBAA0B;MACrDE,iBAAiB,EAAEA,iBAAkB;MACrCsE,WAAW,EAAEA,CAAA,KAAM5E,0BAA0B,CAAC,KAAK;IAAE;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACF,EAGA1E,mBAAmB,iBAClB3B,OAAA,CAACJ,mBAAmB;MAClBiC,kBAAkB,EAAEA,kBAAmB;MACvCQ,sBAAsB,EAAEA,sBAAuB;MAC/CmD,cAAc,EAAEA,cAAe;MAC/BsB,WAAW,EAAEA,CAAA,KAAMlF,sBAAsB,CAAC,KAAK;IAAE;MAAAsE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnG,EAAA,CAtZID,WAAW;AAAA8G,EAAA,GAAX9G,WAAW;AAwZjB,eAAeA,WAAW;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}