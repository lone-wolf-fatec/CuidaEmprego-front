{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ApprovedDataComponent from '../components/ApprovedDataComponent';\nimport JustificativaAusencia from '../components/JustificativaAusencia';\nimport { usePonto } from '../contexts/PontoContext'; // Importar o hook do contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Utilizar o contexto\n  const {\n    timeEntries,\n    setTimeEntries,\n    adicionarSolicitacaoAjuste\n  } = usePonto();\n\n  // Estados\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [lastAction, setLastAction] = useState(null);\n  const [activeTab, setActiveTab] = useState('registros');\n  const [showAttachModal, setShowAttachModal] = useState(false);\n  const [showCorrectionModal, setShowCorrectionModal] = useState(false);\n  const [showHistoryDetailsModal, setShowHistoryDetailsModal] = useState(false);\n  const [selectedHistoryMonth, setSelectedHistoryMonth] = useState(null);\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileInputKey, setFileInputKey] = useState(Date.now()); // Para resetar o input de arquivo\n  const [canRegisterEntry, setCanRegisterEntry] = useState(true);\n  const [canRegisterExit, setCanRegisterExit] = useState(false);\n  const [correctionData, setCorrectionData] = useState({\n    date: '',\n    time: '',\n    reason: '',\n    newTime: ''\n  });\n\n  // Obter dados do usuário logado do localStorage\n  const [userData, setUserData] = useState(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user') || '{}');\n    return {\n      id: storedUser.id || 1,\n      name: storedUser.name || 'Usuário',\n      email: storedUser.email || '',\n      initials: getInitials(storedUser.name) || 'U',\n      isAdmin: false\n    };\n  });\n\n  // Lista de notificações\n  const [notifications, setNotifications] = useState(() => {\n    // Primeiro verificamos se há notificações no localStorage\n    const userNotifications = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n\n    // Se não houver, retornamos algumas notificações padrão\n    if (userNotifications.length === 0) {\n      return [{\n        id: 1,\n        text: 'Você tem 5h 45min de horas extras acumuladas este mês',\n        read: false,\n        date: '14/03/2025'\n      }, {\n        id: 2,\n        text: 'Você tem uma folga agendada para 15/03/2025',\n        read: false,\n        date: '10/03/2025'\n      }, {\n        id: 3,\n        text: 'Seu atestado médico foi aprovado pelo RH',\n        read: true,\n        date: '05/03/2025'\n      }];\n    }\n\n    // Se houver, filtramos apenas as do usuário atual e adaptamos para o formato esperado\n    return userNotifications.filter(n => !n.userId || n.userId === userData.id).map(n => ({\n      id: n.id,\n      text: n.message,\n      read: n.read,\n      date: n.date\n    }));\n  });\n\n  // Histórico mensal\n  const [monthlyHistory] = useState([{\n    month: 'Janeiro/2025',\n    workHours: '168h 30min',\n    overtime: '10h 15min',\n    absences: '0',\n    adjustments: '2'\n  }, {\n    month: 'Fevereiro/2025',\n    workHours: '152h 45min',\n    overtime: '8h 30min',\n    absences: '1',\n    adjustments: '3'\n  }, {\n    month: 'Março/2025 (Atual)',\n    workHours: '84h 20min',\n    overtime: '5h 45min',\n    absences: '0',\n    adjustments: '1'\n  }]);\n\n  // Pega as iniciais do nome para o avatar\n  function getInitials(name) {\n    if (!name) return 'U';\n    const nameParts = name.split(' ');\n    if (nameParts.length === 1) return nameParts[0].charAt(0).toUpperCase();\n    return (nameParts[0].charAt(0) + nameParts[nameParts.length - 1].charAt(0)).toUpperCase();\n  }\n\n  // Atualiza os registros de ponto com o nome do usuário quando o userData for carregado\n  useEffect(() => {\n    if (userData.name !== 'Usuário') {\n      setTimeEntries(prevEntries => prevEntries.map(entry => ({\n        ...entry,\n        user: userData.name,\n        employeeName: userData.name,\n        registeredBy: userData.name\n      })));\n    }\n  }, [userData.name, setTimeEntries]);\n\n  // Atualiza o relógio a cada segundo\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Carrega as entradas do localStorage e verifica a última entrada/saída\n  useEffect(() => {\n    // Lógica para verificar se pode registrar entrada/saída\n    const checkEntryStatus = () => {\n      const sortedEntries = [...timeEntries].sort((a, b) => {\n        // Ordena por data (mais recente primeiro) e depois por hora\n        const dateA = new Date(a.date.split('/').reverse().join('-') + 'T' + a.time);\n        const dateB = new Date(b.date.split('/').reverse().join('-') + 'T' + b.time);\n        return dateB - dateA;\n      });\n      const today = currentTime.toLocaleDateString('pt-BR');\n      const todayEntries = sortedEntries.filter(entry => entry.date === today);\n      if (todayEntries.length > 0) {\n        const lastEntry = todayEntries[0];\n\n        // Verifica se já se passaram 8 horas desde a última entrada\n        if (lastEntry.type === 'entrada') {\n          const entryTime = new Date(today.split('/').reverse().join('-') + 'T' + lastEntry.time);\n          const currentT = new Date();\n          const hoursDiff = (currentT - entryTime) / (1000 * 60 * 60);\n          if (hoursDiff >= 8) {\n            // Se passaram mais de 8h, pode registrar nova entrada\n            setCanRegisterEntry(true);\n            setCanRegisterExit(false);\n          } else {\n            // Senão, só pode registrar saída\n            setCanRegisterEntry(false);\n            setCanRegisterExit(true);\n          }\n        } else if (lastEntry.type === 'saída') {\n          setCanRegisterEntry(true);\n          setCanRegisterExit(false);\n        }\n      } else {\n        setCanRegisterEntry(true);\n        setCanRegisterExit(false);\n      }\n    };\n    checkEntryStatus();\n  }, [timeEntries, currentTime]);\n\n  // Formata a hora atual\n  const formatTime = date => {\n    return date.toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  // Registra entrada ou saída\n  const registerTimeEntry = type => {\n    const now = new Date();\n    const newEntry = {\n      type,\n      time: now.toLocaleTimeString('pt-BR', {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      date: now.toLocaleDateString('pt-BR'),\n      user: userData.name,\n      status: 'pendente',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    };\n    const updatedEntries = [newEntry, ...timeEntries];\n\n    // Salva no localStorage\n    localStorage.setItem('timeEntries', JSON.stringify(updatedEntries));\n    setTimeEntries(updatedEntries);\n    setLastAction(`${type.charAt(0).toUpperCase() + type.slice(1)} registrada às ${newEntry.time}`);\n\n    // Atualiza os estados de botões\n    if (type === 'entrada') {\n      setCanRegisterEntry(false);\n      setCanRegisterExit(true);\n    } else {\n      setCanRegisterEntry(true);\n      setCanRegisterExit(false);\n    }\n\n    // Criar notificação para o admin\n    const adminNotification = {\n      id: Date.now() + Math.random(),\n      message: `${userData.name} registrou ${type} às ${newEntry.time}`,\n      date: now.toLocaleDateString('pt-BR'),\n      read: false\n    };\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\n    localStorage.setItem('adminNotifications', JSON.stringify([adminNotification, ...currentAdminNotifications]));\n  };\n\n  // Função para lidar com envio de arquivo de atestado\n  const handleFileChange = e => {\n    if (e.target.files.length > 0) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n  const submitMedicalCertificate = () => {\n    if (selectedFile) {\n      // Simulação da API\n      setTimeout(() => {\n        // Adicionar uma nova notificação\n        const newNotification = {\n          id: notifications.length + 1,\n          text: `Atestado médico \"${selectedFile.name}\" enviado com sucesso. Aguardando aprovação.`,\n          read: false,\n          date: currentTime.toLocaleDateString('pt-BR')\n        };\n        setNotifications([newNotification, ...notifications]);\n        setShowAttachModal(false);\n        setSelectedFile(null);\n        setFileInputKey(Date.now()); // Reset do input de arquivo\n\n        // Notificação de sucesso\n        setLastAction('Atestado médico enviado com sucesso!');\n\n        // Criar notificação para o admin\n        const adminNotification = {\n          id: Date.now() + Math.random(),\n          message: `${userData.name} enviou um atestado médico: ${selectedFile.name}`,\n          date: currentTime.toLocaleDateString('pt-BR'),\n          read: false\n        };\n        const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\n        localStorage.setItem('adminNotifications', JSON.stringify([adminNotification, ...currentAdminNotifications]));\n      }, 1000);\n    }\n  };\n\n  // Função para cancelar envio de atestado\n  const cancelMedicalCertificate = () => {\n    setShowAttachModal(false);\n    setSelectedFile(null);\n    setFileInputKey(Date.now()); // Reset do input de arquivo\n  };\n\n  // Função para marcar notificação como lida\n  const markAsRead = id => {\n    setNotifications(notifications.map(notif => notif.id === id ? {\n      ...notif,\n      read: true\n    } : notif));\n\n    // Atualizar no localStorage\n    const allNotifications = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    const updatedAllNotifications = allNotifications.map(n => n.id === id ? {\n      ...n,\n      read: true\n    } : n);\n    localStorage.setItem('userNotifications', JSON.stringify(updatedAllNotifications));\n  };\n\n  // Função para marcar todas notificações como lidas\n  const markAllAsRead = () => {\n    setNotifications(notifications.map(notif => ({\n      ...notif,\n      read: true\n    })));\n\n    // Atualizar no localStorage\n    const allNotifications = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    const updatedAllNotifications = allNotifications.map(n => !n.userId || n.userId === userData.id ? {\n      ...n,\n      read: true\n    } : n);\n    localStorage.setItem('userNotifications', JSON.stringify(updatedAllNotifications));\n  };\n\n  // Conta notificações não lidas\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  // Função para deslogar o usuário\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  // Função para abrir modal de correção\n  const openCorrectionModal = (entry, index) => {\n    setSelectedEntry({\n      ...entry,\n      index\n    });\n    setCorrectionData({\n      date: entry.date,\n      time: entry.time,\n      reason: '',\n      newTime: entry.time\n    });\n    setShowCorrectionModal(true);\n  };\n\n  // Função para submeter correção - MODIFICADA PARA USAR O CONTEXTO\n  const submitCorrection = () => {\n    if (!selectedEntry || !correctionData.reason || !correctionData.newTime) {\n      alert(\"Por favor, preencha todos os campos obrigatórios.\");\n      return;\n    }\n\n    // Criar objeto de solicitação para o contexto\n    const solicitacao = {\n      funcionarioId: userData.id,\n      funcionarioNome: userData.name,\n      data: correctionData.date,\n      tipoRegistro: selectedEntry.type,\n      horaOriginal: selectedEntry.time,\n      horaCorreta: correctionData.newTime,\n      motivo: correctionData.reason\n    };\n\n    // Adicionar solicitação usando o contexto\n    const novaSolicitacao = adicionarSolicitacaoAjuste(solicitacao);\n\n    // Adiciona notificação\n    const newNotification = {\n      id: notifications.length + 1,\n      text: `Solicitação de correção para registro de ${selectedEntry.type} do dia ${correctionData.date} enviada. Aguardando aprovação do administrador.`,\n      read: false,\n      date: currentTime.toLocaleDateString('pt-BR')\n    };\n    setNotifications([newNotification, ...notifications]);\n    setLastAction('Solicitação de correção enviada para aprovação');\n    setShowCorrectionModal(false);\n\n    // Criar notificação para o admin\n    const adminNotification = {\n      id: Date.now() + Math.random(),\n      message: `${userData.name} solicitou correção de registro de ${selectedEntry.type} do dia ${correctionData.date}: ${correctionData.reason}`,\n      date: currentTime.toLocaleDateString('pt-BR'),\n      read: false\n    };\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\n    localStorage.setItem('adminNotifications', JSON.stringify([adminNotification, ...currentAdminNotifications]));\n    console.log(\"Solicitação de correção enviada:\", novaSolicitacao);\n  };\n\n  // Função para visualizar detalhes do histórico\n  const viewHistoryDetails = month => {\n    setSelectedHistoryMonth(month);\n    setShowHistoryDetailsModal(true);\n  };\n\n  // Resto do código...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-purple-900 to-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-purple-900 bg-opacity-80 shadow-lg sticky top-0 z-10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto px-4 py-6\",\n      children: showCorrectionModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-purple-900 rounded-lg shadow-xl p-6 w-full max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Solicitar Corre\\xE7\\xE3o de Registro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Data do Registro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: correctionData.date,\n              readOnly: true,\n              className: \"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Hor\\xE1rio Registrado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: correctionData.time,\n              readOnly: true,\n              className: \"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Hor\\xE1rio Correto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: correctionData.newTime,\n              onChange: e => setCorrectionData({\n                ...correctionData,\n                newTime: e.target.value\n              }),\n              className: \"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-2\",\n              children: \"Motivo da Corre\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: correctionData.reason,\n              onChange: e => setCorrectionData({\n                ...correctionData,\n                reason: e.target.value\n              }),\n              className: \"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 min-h-20\",\n              placeholder: \"Descreva o motivo da solicita\\xE7\\xE3o de corre\\xE7\\xE3o...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCorrectionModal(false),\n              className: \"px-4 py-2 bg-purple-800 hover:bg-purple-700 rounded-md\",\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: submitCorrection,\n              disabled: !correctionData.reason,\n              className: `px-4 py-2 rounded-md ${correctionData.reason ? 'bg-purple-600 hover:bg-purple-500' : 'bg-purple-900 opacity-50 cursor-not-allowed'}`,\n              children: \"Enviar Solicita\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"h0+ahjB0F1ope49C5HCzJiIUTbI=\", false, function () {\n  return [useNavigate, usePonto];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ApprovedDataComponent","JustificativaAusencia","usePonto","jsxDEV","_jsxDEV","UserDashboard","_s","navigate","timeEntries","setTimeEntries","adicionarSolicitacaoAjuste","showProfileMenu","setShowProfileMenu","showNotifications","setShowNotifications","currentTime","setCurrentTime","Date","lastAction","setLastAction","activeTab","setActiveTab","showAttachModal","setShowAttachModal","showCorrectionModal","setShowCorrectionModal","showHistoryDetailsModal","setShowHistoryDetailsModal","selectedHistoryMonth","setSelectedHistoryMonth","selectedEntry","setSelectedEntry","selectedFile","setSelectedFile","fileInputKey","setFileInputKey","now","canRegisterEntry","setCanRegisterEntry","canRegisterExit","setCanRegisterExit","correctionData","setCorrectionData","date","time","reason","newTime","userData","setUserData","storedUser","JSON","parse","localStorage","getItem","id","name","email","initials","getInitials","isAdmin","notifications","setNotifications","userNotifications","length","text","read","filter","n","userId","map","message","monthlyHistory","month","workHours","overtime","absences","adjustments","nameParts","split","charAt","toUpperCase","prevEntries","entry","user","employeeName","registeredBy","timer","setInterval","clearInterval","checkEntryStatus","sortedEntries","sort","a","b","dateA","reverse","join","dateB","today","toLocaleDateString","todayEntries","lastEntry","type","entryTime","currentT","hoursDiff","formatTime","toLocaleTimeString","hour","minute","second","registerTimeEntry","newEntry","status","employeeId","updatedEntries","setItem","stringify","slice","adminNotification","Math","random","currentAdminNotifications","handleFileChange","e","target","files","submitMedicalCertificate","setTimeout","newNotification","cancelMedicalCertificate","markAsRead","notif","allNotifications","updatedAllNotifications","markAllAsRead","unreadCount","handleLogout","removeItem","openCorrectionModal","index","submitCorrection","alert","solicitacao","funcionarioId","funcionarioNome","data","tipoRegistro","horaOriginal","horaCorreta","motivo","novaSolicitacao","console","log","viewHistoryDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","readOnly","onChange","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ApprovedDataComponent from '../components/ApprovedDataComponent';\r\nimport JustificativaAusencia from '../components/JustificativaAusencia';\r\nimport { usePonto } from '../contexts/PontoContext'; // Importar o hook do contexto\r\n\r\nconst UserDashboard = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  // Utilizar o contexto\r\n  const { timeEntries, setTimeEntries, adicionarSolicitacaoAjuste } = usePonto();\r\n  \r\n  // Estados\r\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\r\n  const [showNotifications, setShowNotifications] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [lastAction, setLastAction] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('registros');\r\n  const [showAttachModal, setShowAttachModal] = useState(false);\r\n  const [showCorrectionModal, setShowCorrectionModal] = useState(false);\r\n  const [showHistoryDetailsModal, setShowHistoryDetailsModal] = useState(false);\r\n  const [selectedHistoryMonth, setSelectedHistoryMonth] = useState(null);\r\n  const [selectedEntry, setSelectedEntry] = useState(null);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileInputKey, setFileInputKey] = useState(Date.now()); // Para resetar o input de arquivo\r\n  const [canRegisterEntry, setCanRegisterEntry] = useState(true);\r\n  const [canRegisterExit, setCanRegisterExit] = useState(false);\r\n  const [correctionData, setCorrectionData] = useState({\r\n    date: '',\r\n    time: '',\r\n    reason: '',\r\n    newTime: ''\r\n  });\r\n  \r\n  // Obter dados do usuário logado do localStorage\r\n  const [userData, setUserData] = useState(() => {\r\n    const storedUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n    return {\r\n      id: storedUser.id || 1,\r\n      name: storedUser.name || 'Usuário',\r\n      email: storedUser.email || '',\r\n      initials: getInitials(storedUser.name) || 'U',\r\n      isAdmin: false\r\n    };\r\n  });\r\n  \r\n  // Lista de notificações\r\n  const [notifications, setNotifications] = useState(() => {\r\n    // Primeiro verificamos se há notificações no localStorage\r\n    const userNotifications = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    \r\n    // Se não houver, retornamos algumas notificações padrão\r\n    if (userNotifications.length === 0) {\r\n      return [\r\n        { id: 1, text: 'Você tem 5h 45min de horas extras acumuladas este mês', read: false, date: '14/03/2025' },\r\n        { id: 2, text: 'Você tem uma folga agendada para 15/03/2025', read: false, date: '10/03/2025' },\r\n        { id: 3, text: 'Seu atestado médico foi aprovado pelo RH', read: true, date: '05/03/2025' }\r\n      ];\r\n    }\r\n    \r\n    // Se houver, filtramos apenas as do usuário atual e adaptamos para o formato esperado\r\n    return userNotifications\r\n      .filter(n => !n.userId || n.userId === userData.id)\r\n      .map(n => ({\r\n        id: n.id,\r\n        text: n.message,\r\n        read: n.read,\r\n        date: n.date\r\n      }));\r\n  });\r\n  \r\n  // Histórico mensal\r\n  const [monthlyHistory] = useState([\r\n    { month: 'Janeiro/2025', workHours: '168h 30min', overtime: '10h 15min', absences: '0', adjustments: '2' },\r\n    { month: 'Fevereiro/2025', workHours: '152h 45min', overtime: '8h 30min', absences: '1', adjustments: '3' },\r\n    { month: 'Março/2025 (Atual)', workHours: '84h 20min', overtime: '5h 45min', absences: '0', adjustments: '1' },\r\n  ]);\r\n  \r\n  // Pega as iniciais do nome para o avatar\r\n  function getInitials(name) {\r\n    if (!name) return 'U';\r\n    const nameParts = name.split(' ');\r\n    if (nameParts.length === 1) return nameParts[0].charAt(0).toUpperCase();\r\n    return (nameParts[0].charAt(0) + nameParts[nameParts.length - 1].charAt(0)).toUpperCase();\r\n  }\r\n  \r\n  // Atualiza os registros de ponto com o nome do usuário quando o userData for carregado\r\n  useEffect(() => {\r\n    if (userData.name !== 'Usuário') {\r\n      setTimeEntries(prevEntries => \r\n        prevEntries.map(entry => ({\r\n          ...entry,\r\n          user: userData.name,\r\n          employeeName: userData.name,\r\n          registeredBy: userData.name\r\n        }))\r\n      );\r\n    }\r\n  }, [userData.name, setTimeEntries]);\r\n  \r\n  // Atualiza o relógio a cada segundo\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n  \r\n  // Carrega as entradas do localStorage e verifica a última entrada/saída\r\n  useEffect(() => {\r\n    // Lógica para verificar se pode registrar entrada/saída\r\n    const checkEntryStatus = () => {\r\n      const sortedEntries = [...timeEntries].sort((a, b) => {\r\n        // Ordena por data (mais recente primeiro) e depois por hora\r\n        const dateA = new Date(a.date.split('/').reverse().join('-') + 'T' + a.time);\r\n        const dateB = new Date(b.date.split('/').reverse().join('-') + 'T' + b.time);\r\n        return dateB - dateA;\r\n      });\r\n\r\n      const today = currentTime.toLocaleDateString('pt-BR');\r\n      const todayEntries = sortedEntries.filter(entry => entry.date === today);\r\n      \r\n      if (todayEntries.length > 0) {\r\n        const lastEntry = todayEntries[0];\r\n        \r\n        // Verifica se já se passaram 8 horas desde a última entrada\r\n        if (lastEntry.type === 'entrada') {\r\n          const entryTime = new Date(today.split('/').reverse().join('-') + 'T' + lastEntry.time);\r\n          const currentT = new Date();\r\n          const hoursDiff = (currentT - entryTime) / (1000 * 60 * 60);\r\n          \r\n          if (hoursDiff >= 8) {\r\n            // Se passaram mais de 8h, pode registrar nova entrada\r\n            setCanRegisterEntry(true);\r\n            setCanRegisterExit(false);\r\n          } else {\r\n            // Senão, só pode registrar saída\r\n            setCanRegisterEntry(false);\r\n            setCanRegisterExit(true);\r\n          }\r\n        } else if (lastEntry.type === 'saída') {\r\n          setCanRegisterEntry(true);\r\n          setCanRegisterExit(false);\r\n        }\r\n      } else {\r\n        setCanRegisterEntry(true);\r\n        setCanRegisterExit(false);\r\n      }\r\n    };\r\n    \r\n    checkEntryStatus();\r\n  }, [timeEntries, currentTime]);\r\n  \r\n  // Formata a hora atual\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('pt-BR', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit'\r\n    });\r\n  };\r\n  \r\n  // Registra entrada ou saída\r\n  const registerTimeEntry = (type) => {\r\n    const now = new Date();\r\n    const newEntry = {\r\n      type,\r\n      time: now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }),\r\n      date: now.toLocaleDateString('pt-BR'),\r\n      user: userData.name,\r\n      status: 'pendente',\r\n      employeeId: userData.id,\r\n      employeeName: userData.name,\r\n      registeredBy: userData.name\r\n    };\r\n    \r\n    const updatedEntries = [newEntry, ...timeEntries];\r\n    \r\n    // Salva no localStorage\r\n    localStorage.setItem('timeEntries', JSON.stringify(updatedEntries));\r\n    \r\n    setTimeEntries(updatedEntries);\r\n    setLastAction(`${type.charAt(0).toUpperCase() + type.slice(1)} registrada às ${newEntry.time}`);\r\n    \r\n    // Atualiza os estados de botões\r\n    if (type === 'entrada') {\r\n      setCanRegisterEntry(false);\r\n      setCanRegisterExit(true);\r\n    } else {\r\n      setCanRegisterEntry(true);\r\n      setCanRegisterExit(false);\r\n    }\r\n\r\n    // Criar notificação para o admin\r\n    const adminNotification = {\r\n      id: Date.now() + Math.random(),\r\n      message: `${userData.name} registrou ${type} às ${newEntry.time}`,\r\n      date: now.toLocaleDateString('pt-BR'),\r\n      read: false\r\n    };\r\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\r\n    localStorage.setItem('adminNotifications', JSON.stringify([\r\n      adminNotification,\r\n      ...currentAdminNotifications\r\n    ]));\r\n  };\r\n  \r\n  // Função para lidar com envio de arquivo de atestado\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      setSelectedFile(e.target.files[0]);\r\n    }\r\n  };\r\n  \r\n  const submitMedicalCertificate = () => {\r\n    if (selectedFile) {\r\n      // Simulação da API\r\n      setTimeout(() => {\r\n        // Adicionar uma nova notificação\r\n        const newNotification = {\r\n          id: notifications.length + 1,\r\n          text: `Atestado médico \"${selectedFile.name}\" enviado com sucesso. Aguardando aprovação.`,\r\n          read: false,\r\n          date: currentTime.toLocaleDateString('pt-BR')\r\n        };\r\n        \r\n        setNotifications([newNotification, ...notifications]);\r\n        setShowAttachModal(false);\r\n        setSelectedFile(null);\r\n        setFileInputKey(Date.now()); // Reset do input de arquivo\r\n        \r\n        // Notificação de sucesso\r\n        setLastAction('Atestado médico enviado com sucesso!');\r\n\r\n        // Criar notificação para o admin\r\n        const adminNotification = {\r\n          id: Date.now() + Math.random(),\r\n          message: `${userData.name} enviou um atestado médico: ${selectedFile.name}`,\r\n          date: currentTime.toLocaleDateString('pt-BR'),\r\n          read: false\r\n        };\r\n        const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\r\n        localStorage.setItem('adminNotifications', JSON.stringify([\r\n          adminNotification,\r\n          ...currentAdminNotifications\r\n        ]));\r\n      }, 1000);\r\n    }\r\n  };\r\n  \r\n  // Função para cancelar envio de atestado\r\n  const cancelMedicalCertificate = () => {\r\n    setShowAttachModal(false);\r\n    setSelectedFile(null);\r\n    setFileInputKey(Date.now()); // Reset do input de arquivo\r\n  };\r\n  \r\n  // Função para marcar notificação como lida\r\n  const markAsRead = (id) => {\r\n    setNotifications(notifications.map(notif => \r\n      notif.id === id ? { ...notif, read: true } : notif\r\n    ));\r\n    \r\n    // Atualizar no localStorage\r\n    const allNotifications = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    const updatedAllNotifications = allNotifications.map(n => \r\n      n.id === id ? { ...n, read: true } : n\r\n    );\r\n    localStorage.setItem('userNotifications', JSON.stringify(updatedAllNotifications));\r\n  };\r\n  \r\n  // Função para marcar todas notificações como lidas\r\n  const markAllAsRead = () => {\r\n    setNotifications(notifications.map(notif => ({ ...notif, read: true })));\r\n    \r\n    // Atualizar no localStorage\r\n    const allNotifications = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    const updatedAllNotifications = allNotifications.map(n => \r\n      (!n.userId || n.userId === userData.id) ? { ...n, read: true } : n\r\n    );\r\n    localStorage.setItem('userNotifications', JSON.stringify(updatedAllNotifications));\r\n  };\r\n  \r\n  // Conta notificações não lidas\r\n  const unreadCount = notifications.filter(n => !n.read).length;\r\n  \r\n  // Função para deslogar o usuário\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    navigate('/login');\r\n  };\r\n  \r\n  // Função para abrir modal de correção\r\n  const openCorrectionModal = (entry, index) => {\r\n    setSelectedEntry({ ...entry, index });\r\n    setCorrectionData({\r\n      date: entry.date,\r\n      time: entry.time,\r\n      reason: '',\r\n      newTime: entry.time\r\n    });\r\n    setShowCorrectionModal(true);\r\n  };\r\n  \r\n  // Função para submeter correção - MODIFICADA PARA USAR O CONTEXTO\r\n  const submitCorrection = () => {\r\n    if (!selectedEntry || !correctionData.reason || !correctionData.newTime) {\r\n      alert(\"Por favor, preencha todos os campos obrigatórios.\");\r\n      return;\r\n    }\r\n    \r\n    // Criar objeto de solicitação para o contexto\r\n    const solicitacao = {\r\n      funcionarioId: userData.id,\r\n      funcionarioNome: userData.name,\r\n      data: correctionData.date,\r\n      tipoRegistro: selectedEntry.type,\r\n      horaOriginal: selectedEntry.time,\r\n      horaCorreta: correctionData.newTime,\r\n      motivo: correctionData.reason\r\n    };\r\n    \r\n    // Adicionar solicitação usando o contexto\r\n    const novaSolicitacao = adicionarSolicitacaoAjuste(solicitacao);\r\n    \r\n    // Adiciona notificação\r\n    const newNotification = {\r\n      id: notifications.length + 1,\r\n      text: `Solicitação de correção para registro de ${selectedEntry.type} do dia ${correctionData.date} enviada. Aguardando aprovação do administrador.`,\r\n      read: false,\r\n      date: currentTime.toLocaleDateString('pt-BR')\r\n    };\r\n    \r\n    setNotifications([newNotification, ...notifications]);\r\n    setLastAction('Solicitação de correção enviada para aprovação');\r\n    setShowCorrectionModal(false);\r\n\r\n    // Criar notificação para o admin\r\n    const adminNotification = {\r\n      id: Date.now() + Math.random(),\r\n      message: `${userData.name} solicitou correção de registro de ${selectedEntry.type} do dia ${correctionData.date}: ${correctionData.reason}`,\r\n      date: currentTime.toLocaleDateString('pt-BR'),\r\n      read: false\r\n    };\r\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\r\n    localStorage.setItem('adminNotifications', JSON.stringify([\r\n      adminNotification,\r\n      ...currentAdminNotifications\r\n    ]));\r\n    \r\n    console.log(\"Solicitação de correção enviada:\", novaSolicitacao);\r\n  };\r\n  \r\n  // Função para visualizar detalhes do histórico\r\n  const viewHistoryDetails = (month) => {\r\n    setSelectedHistoryMonth(month);\r\n    setShowHistoryDetailsModal(true);\r\n  };\r\n  \r\n  // Resto do código...\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 to-black text-white\">\r\n      {/* Header */}\r\n      <header className=\"bg-purple-900 bg-opacity-80 shadow-lg sticky top-0 z-10\">\r\n        {/* Conteúdo do header... */}\r\n      </header>\r\n\r\n      {/* Conteúdo principal */}\r\n      <main className=\"container mx-auto px-4 py-6\">\r\n        {/* Relógio e outros componentes... */}\r\n\r\n        {/* Modal para solicitar correção de registro */}\r\n        {showCorrectionModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50\">\r\n            <div className=\"bg-purple-900 rounded-lg shadow-xl p-6 w-full max-w-md\">\r\n              <h3 className=\"text-xl font-bold mb-4\">Solicitar Correção de Registro</h3>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Data do Registro</label>\r\n                <input \r\n                  type=\"text\" \r\n                  value={correctionData.date} \r\n                  readOnly\r\n                  className=\"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\" \r\n                />\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Horário Registrado</label>\r\n                <input \r\n                  type=\"text\" \r\n                  value={correctionData.time} \r\n                  readOnly\r\n                  className=\"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\" \r\n                />\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium mb-2\">Horário Correto</label>\r\n                <input \r\n                  type=\"time\" \r\n                  value={correctionData.newTime}\r\n                  onChange={(e) => setCorrectionData({...correctionData, newTime: e.target.value})}\r\n                  className=\"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500\" \r\n                />\r\n              </div>\r\n              \r\n              <div className=\"mb-6\">\r\n                <label className=\"block text-sm font-medium mb-2\">Motivo da Correção</label>\r\n                <textarea \r\n                  value={correctionData.reason}\r\n                  onChange={(e) => setCorrectionData({...correctionData, reason: e.target.value})}\r\n                  className=\"w-full px-3 py-2 bg-purple-800 border border-purple-600 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 min-h-20\"\r\n                  placeholder=\"Descreva o motivo da solicitação de correção...\"\r\n                ></textarea>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-end space-x-3\">\r\n                <button \r\n                  onClick={() => setShowCorrectionModal(false)}\r\n                  className=\"px-4 py-2 bg-purple-800 hover:bg-purple-700 rounded-md\"\r\n                >\r\n                  Cancelar\r\n                </button>\r\n                <button \r\n                  onClick={submitCorrection}\r\n                  disabled={!correctionData.reason}\r\n                  className={`px-4 py-2 rounded-md ${correctionData.reason ? 'bg-purple-600 hover:bg-purple-500' : 'bg-purple-900 opacity-50 cursor-not-allowed'}`}\r\n                >\r\n                  Enviar Solicitação\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Outros modais e componentes... */}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}