{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\components\\\\PontoBatidoTab.js\",\n  _s = $RefreshSig$();\n// Hook para salvar explicitamente os status aprovados e rejeitados\nconst salvarStatusExplicitamente = (registroId, indice, status) => {\n  // Salvar no localStorage específico para este registro e índice\n  const statusKey = `pontoStatus_${registroId}_${indice}`;\n  localStorage.setItem(statusKey, status);\n\n  // Atualizar o registro com o novo status\n  const registroAtualizado = pontoRegistros.find(r => r.id === registroId);\n  if (registroAtualizado && registroAtualizado.registros[indice]) {\n    const registrosAtualizados = [...pontoRegistros];\n    const indexRegistro = registrosAtualizados.findIndex(r => r.id === registroId);\n    if (indexRegistro !== -1) {\n      registrosAtualizados[indexRegistro] = {\n        ...registrosAtualizados[indexRegistro],\n        registros: registrosAtualizados[indexRegistro].registros.map((r, i) => i === indice ? {\n          ...r,\n          status: status\n        } : r)\n      };\n      setPontoRegistros(registrosAtualizados);\n      localStorage.setItem('pontoRegistros', JSON.stringify(registrosAtualizados));\n\n      // Adicionar um log para debug\n      console.log(`Status ${status} salvo para registro ${registroId}, índice ${indice}`);\n    }\n  }\n}; // Novo useEffect para lidar com alterações específicas nos funcionários\nuseEffect(() => {\n  const handleFuncionariosChange = e => {\n    if (e.key === FUNCIONARIOS_KEY || e.key === 'registeredUsers' || e.key === 'user') {\n      const updatedFuncionarios = getAllPossibleFuncionarios();\n      setAllFuncionarios(updatedFuncionarios);\n      adicionarRegistrosParaTodosFuncionarios();\n    }\n  };\n  window.addEventListener('storage', handleFuncionariosChange);\n  return () => window.removeEventListener('storage', handleFuncionariosChange);\n}, []);\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PontoBatidoTab = () => {\n  _s();\n  // Estados\n  const [pontoRegistros, setPontoRegistros] = useState(() => {\n    const storedRegistros = localStorage.getItem('pontoRegistros');\n    const registrosBase = storedRegistros ? JSON.parse(storedRegistros) : [{\n      id: 1,\n      funcionarioId: 101,\n      funcionarioNome: 'João Silva',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:05',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '12:00',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:10',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '--:--',\n        status: 'pendente'\n      }]\n    }, {\n      id: 2,\n      funcionarioId: 102,\n      funcionarioNome: 'Maria Oliveira',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:15',\n        status: 'atrasado'\n      }, {\n        tipo: 'saída',\n        hora: '12:05',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:00',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '17:10',\n        status: 'regular'\n      }]\n    }, {\n      id: 3,\n      funcionarioId: 103,\n      funcionarioNome: 'Carlos Pereira',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '09:20',\n        status: 'atrasado'\n      }, {\n        tipo: 'saída',\n        hora: '12:15',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:10',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '18:35',\n        status: 'hora extra'\n      }]\n    }, {\n      id: 4,\n      funcionarioId: 104,\n      funcionarioNome: 'Ana Souza',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '--:--',\n        status: 'pendente'\n      }, {\n        tipo: 'saída',\n        hora: '--:--',\n        status: 'pendente'\n      }, {\n        tipo: 'entrada',\n        hora: '--:--',\n        status: 'pendente'\n      }, {\n        tipo: 'saída',\n        hora: '--:--',\n        status: 'pendente'\n      }]\n    }, {\n      id: 5,\n      funcionarioId: 101,\n      funcionarioNome: 'João Silva',\n      data: '18/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:00',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '12:00',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:00',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '17:05',\n        status: 'regular'\n      }]\n    }, {\n      id: 6,\n      funcionarioId: 102,\n      funcionarioNome: 'Maria Oliveira',\n      data: '18/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:10',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '12:00',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:05',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '17:00',\n        status: 'regular'\n      }]\n    }];\n\n    // Aplicar status salvos no localStorage\n    const registrosAtualizados = registrosBase.map(registro => {\n      const registrosAtualizados = registro.registros.map((r, indice) => {\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\n        const statusSalvo = localStorage.getItem(statusKey);\n        if (statusSalvo) {\n          return {\n            ...r,\n            status: statusSalvo\n          };\n        }\n        // Converter status \"falta\" para \"pendente\" \n        if (r.status === 'falta') {\n          return {\n            ...r,\n            status: 'pendente'\n          };\n        }\n        return r;\n      });\n      return {\n        ...registro,\n        registros: registrosAtualizados\n      };\n    });\n    return registrosAtualizados;\n  });\n  const [filtros, setFiltros] = useState({\n    data: '',\n    funcionario: '',\n    status: ''\n  });\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\n  const [editandoRegistro, setEditandoRegistro] = useState(null);\n  const horaInputRefs = useRef({});\n  const FUNCIONARIOS_KEY = 'funcionarios';\n\n  // Constantes para status\n  const STATUS_APROVADO = 'aprovado';\n  const STATUS_REJEITADO = 'rejeitado';\n  const STATUS_PENDENTE = 'pendente';\n  const STATUS_AJUSTADO = 'ajustado';\n\n  // Funções auxiliares\n  const getAllPossibleFuncionarios = () => {\n    try {\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n      const funcionariosFromUsers = registeredUsers.map(user => ({\n        id: user.id,\n        nome: user.name || user.nome\n      }));\n      const storedFuncionarios = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\n        id: registro.funcionarioId,\n        nome: registro.funcionarioNome\n      }));\n      const funcionariosMap = new Map();\n      [...funcionariosFromUsers, ...storedFuncionarios, ...funcionariosFromRegistros].forEach(func => {\n        if (func && func.id) {\n          funcionariosMap.set(func.id, func);\n        }\n      });\n      return Array.from(funcionariosMap.values());\n    } catch (error) {\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\n      return [];\n    }\n  };\n  const getLatestFuncionarios = () => {\n    try {\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n      const funcionariosStorage = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\n      const userStorage = JSON.parse(localStorage.getItem('user') || '{}');\n      const funcionariosFromUsers = registeredUsers.map(user => ({\n        id: user.id,\n        nome: user.name || user.nome\n      }));\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\n        id: registro.funcionarioId,\n        nome: registro.funcionarioNome\n      }));\n      const allFuncionarios = [...funcionariosStorage];\n      [...funcionariosFromUsers, ...funcionariosFromRegistros].forEach(func => {\n        if (!allFuncionarios.some(f => f.id === func.id)) {\n          allFuncionarios.push(func);\n        }\n      });\n      if (userStorage && userStorage.id && userStorage.name) {\n        if (!allFuncionarios.some(f => f.id === userStorage.id)) {\n          allFuncionarios.push({\n            id: userStorage.id,\n            nome: userStorage.name\n          });\n        }\n      }\n      localStorage.setItem(FUNCIONARIOS_KEY, JSON.stringify(allFuncionarios));\n      return allFuncionarios;\n    } catch (error) {\n      console.error(\"Erro ao buscar funcionários:\", error);\n      return [];\n    }\n  };\n  const adicionarRegistrosParaTodosFuncionarios = () => {\n    const dataAtual = new Date().toLocaleDateString('pt-BR');\n    const todasDatas = [...new Set(pontoRegistros.map(registro => registro.data))];\n    let nextId = Math.max(...pontoRegistros.map(registro => registro.id), 0) + 1;\n    const novosPontoRegistros = [...pontoRegistros];\n    const registrosExistentes = new Set(pontoRegistros.map(registro => `${registro.funcionarioId}-${registro.data}`));\n\n    // Para cada funcionário em allFuncionarios\n    allFuncionarios.forEach(funcionario => {\n      // Para cada data existente nos registros\n      todasDatas.forEach(data => {\n        // Verifica se já existe um registro para esse funcionário nessa data\n        const chaveRegistro = `${funcionario.id}-${data}`;\n        const existeRegistro = registrosExistentes.has(chaveRegistro);\n\n        // Se não existir, cria um novo registro\n        if (!existeRegistro) {\n          novosPontoRegistros.push({\n            id: nextId++,\n            funcionarioId: funcionario.id,\n            funcionarioNome: funcionario.nome,\n            data: data,\n            registros: [{\n              tipo: 'entrada',\n              hora: '--:--',\n              status: 'pendente'\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: 'pendente'\n            }, {\n              tipo: 'entrada',\n              hora: '--:--',\n              status: 'pendente'\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: 'pendente'\n            }]\n          });\n          registrosExistentes.add(chaveRegistro);\n        }\n      });\n\n      // Adiciona também para a data atual se não existir\n      if (!todasDatas.includes(dataAtual)) {\n        const chaveRegistroHoje = `${funcionario.id}-${dataAtual}`;\n        const existeRegistroHoje = registrosExistentes.has(chaveRegistroHoje);\n        if (!existeRegistroHoje) {\n          novosPontoRegistros.push({\n            id: nextId++,\n            funcionarioId: funcionario.id,\n            funcionarioNome: funcionario.nome,\n            data: dataAtual,\n            registros: [{\n              tipo: 'entrada',\n              hora: '--:--',\n              status: 'pendente'\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: 'pendente'\n            }, {\n              tipo: 'entrada',\n              hora: '--:--',\n              status: 'pendente'\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: 'pendente'\n            }]\n          });\n          registrosExistentes.add(chaveRegistroHoje);\n        }\n      }\n    });\n\n    // Importante: Aplicar status salvos nos novos registros\n    const registrosComStatusAtualizados = novosPontoRegistros.map(registro => {\n      const registrosAtualizados = registro.registros.map((r, indice) => {\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\n        const statusSalvo = localStorage.getItem(statusKey);\n        if (statusSalvo) {\n          return {\n            ...r,\n            status: statusSalvo\n          };\n        }\n        return r;\n      });\n      return {\n        ...registro,\n        registros: registrosAtualizados\n      };\n    });\n    setPontoRegistros(registrosComStatusAtualizados);\n    localStorage.setItem('pontoRegistros', JSON.stringify(registrosComStatusAtualizados));\n  };\n  const marcarFaltaJustificada = registroId => {\n    const registroAtualizado = pontoRegistros.find(r => r.id === registroId);\n    if (registroAtualizado) {\n      let indicesAtualizados = [];\n      registroAtualizado.registros = registroAtualizado.registros.map((r, index) => {\n        if (r.status === STATUS_PENDENTE || r.status === 'falta') {\n          indicesAtualizados.push(index);\n          return {\n            ...r,\n            status: 'falta justificada'\n          };\n        }\n        return r;\n      });\n      const novosRegistros = pontoRegistros.map(r => r.id === registroId ? registroAtualizado : r);\n      setPontoRegistros(novosRegistros);\n      localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\n\n      // Salvar também no localStorage específico para cada índice atualizado\n      indicesAtualizados.forEach(indice => {\n        const statusKey = `pontoStatus_${registroId}_${indice}`;\n        localStorage.setItem(statusKey, 'falta justificada');\n      });\n      alert(`Falta justificada registrada para ${registroAtualizado.funcionarioNome} em ${registroAtualizado.data}.`);\n    }\n  };\n  const atualizarPonto = (registroId, index, novaHora, novoStatus = STATUS_AJUSTADO) => {\n    const registroAtualizado = {\n      ...pontoRegistros.find(r => r.id === registroId)\n    };\n    if (registroAtualizado && registroAtualizado.registros[index]) {\n      const registrosAtualizados = [...registroAtualizado.registros];\n      registrosAtualizados[index] = {\n        ...registrosAtualizados[index],\n        hora: novaHora,\n        status: novoStatus\n      };\n      registroAtualizado.registros = registrosAtualizados;\n      const novosRegistros = pontoRegistros.map(r => r.id === registroId ? registroAtualizado : r);\n      setPontoRegistros(novosRegistros);\n      localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\n\n      // Salvar também no localStorage específico para status\n      const statusKey = `pontoStatus_${registroId}_${index}`;\n      localStorage.setItem(statusKey, novoStatus);\n      const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n      notificacoes.push({\n        id: Date.now(),\n        userId: registroAtualizado.funcionarioId,\n        message: `Seu registro de ponto do dia ${registroAtualizado.data} foi ${novoStatus} pelo administrador.`,\n        date: new Date().toLocaleDateString('pt-BR'),\n        read: false\n      });\n      localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n      alert(`Ponto atualizado para ${registroAtualizado.funcionarioNome} em ${registroAtualizado.data}.`);\n    }\n  };\n  const notificarFuncionario = (funcionarioId, funcionarioNome) => {\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    notificacoes.push({\n      id: Date.now(),\n      userId: funcionarioId,\n      message: 'Por favor, registre seu ponto pendente do dia de hoje.',\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    });\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n    alert(`Notificação enviada para ${funcionarioNome} sobre ponto pendente.`);\n  };\n  const iniciarEdicaoPonto = (registroId, indiceRegistro) => {\n    setEditandoRegistro({\n      registroId,\n      indiceRegistro\n    });\n    setTimeout(() => {\n      if (horaInputRefs.current[`${registroId}-${indiceRegistro}`]) {\n        horaInputRefs.current[`${registroId}-${indiceRegistro}`].focus();\n      }\n    }, 100);\n  };\n  const salvarEdicaoPonto = (registroId, indiceRegistro, statusSelecionado = STATUS_AJUSTADO) => {\n    const inputRef = horaInputRefs.current[`${registroId}-${indiceRegistro}`];\n    if (inputRef && inputRef.value) {\n      atualizarPonto(registroId, indiceRegistro, inputRef.value, statusSelecionado);\n    }\n    setEditandoRegistro(null);\n  };\n  const cancelarEdicaoPonto = () => {\n    setEditandoRegistro(null);\n  };\n  const renderizarStatus = status => {\n    let corClasse = '';\n    let texto = status.toUpperCase();\n    switch (status) {\n      case 'regular':\n        corClasse = 'bg-green-600';\n        break;\n      case 'atrasado':\n        corClasse = 'bg-yellow-600';\n        break;\n      case 'hora extra':\n        corClasse = 'bg-blue-600';\n        break;\n      case 'pendente':\n        corClasse = 'bg-purple-600';\n        texto = 'PENDENTE';\n        break;\n      case 'falta':\n        corClasse = 'bg-purple-600';\n        texto = 'PENDENTE';\n        break;\n      case 'falta justificada':\n        corClasse = 'bg-orange-600';\n        texto = 'JUSTIFICADA';\n        break;\n      case 'ajustado':\n        corClasse = 'bg-indigo-600';\n        break;\n      case 'aprovado':\n        corClasse = 'bg-green-700';\n        break;\n      case 'rejeitado':\n        corClasse = 'bg-red-700';\n        break;\n      default:\n        corClasse = 'bg-gray-600';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-block px-2 py-1 rounded-full text-xs ${corClasse}`,\n      children: texto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Função para obter o status salvo do localStorage para um registro específico\n  const obterStatusSalvo = (registroId, indice) => {\n    const statusKey = `pontoStatus_${registroId}_${indice}`;\n    return localStorage.getItem(statusKey);\n  };\n\n  // Função para restaurar status salvos de todos os registros\n  const restaurarStatusSalvos = () => {\n    const novosRegistros = pontoRegistros.map(registro => {\n      const registrosAtualizados = registro.registros.map((r, indice) => {\n        const statusSalvo = obterStatusSalvo(registro.id, indice);\n        if (statusSalvo) {\n          return {\n            ...r,\n            status: statusSalvo\n          };\n        }\n        return r;\n      });\n      return {\n        ...registro,\n        registros: registrosAtualizados\n      };\n    });\n    setPontoRegistros(novosRegistros);\n    localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\n  };\n\n  // useEffects\n  useEffect(() => {\n    const updateAllFuncionarios = () => {\n      const allPossible = getAllPossibleFuncionarios();\n      setAllFuncionarios(allPossible);\n    };\n    updateAllFuncionarios();\n\n    // Restaurar status salvos\n    restaurarStatusSalvos();\n    const interval = setInterval(updateAllFuncionarios, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const funcionarios = getLatestFuncionarios();\n    setAllFuncionarios(funcionarios);\n\n    // Após obter os funcionários, adiciona registros para todos\n    adicionarRegistrosParaTodosFuncionarios();\n\n    // Reduzir a frequência do timer para evitar problemas de sobrescrita\n    const interval = setInterval(() => {\n      const updatedFuncionarios = getLatestFuncionarios();\n      if (JSON.stringify(updatedFuncionarios) !== JSON.stringify(allFuncionarios)) {\n        setAllFuncionarios(updatedFuncionarios);\n        adicionarRegistrosParaTodosFuncionarios();\n      }\n    }, 10000); // Aumentado para 10s para reduzir a frequência de atualizações\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Adicionar função para garantir que os status permaneçam consistentes\n  const sincronizarStatusSalvos = () => {\n    // 1. Obter os registros armazenados no localStorage\n    const registrosArmazenados = JSON.parse(localStorage.getItem('pontoRegistros') || '[]');\n    let mudancaDetectada = false;\n\n    // 2. Para cada registro que já existe no localStorage, verificar e aplicar status salvos\n    const registrosAtualizados = registrosArmazenados.map(registro => {\n      const registrosAtualizados = registro.registros.map((r, indice) => {\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\n        const statusSalvo = localStorage.getItem(statusKey);\n        if (statusSalvo && r.status !== statusSalvo) {\n          mudancaDetectada = true;\n          return {\n            ...r,\n            status: statusSalvo\n          };\n        }\n        return r;\n      });\n      return {\n        ...registro,\n        registros: registrosAtualizados\n      };\n    });\n\n    // 3. Se houve mudança, atualizar o localStorage e o estado do componente\n    if (mudancaDetectada) {\n      localStorage.setItem('pontoRegistros', JSON.stringify(registrosAtualizados));\n      setPontoRegistros(registrosAtualizados);\n    }\n  };\n\n  // Chamando a sincronização a cada 2 segundos para garantir consistência\n  useEffect(() => {\n    const sincInterval = setInterval(sincronizarStatusSalvos, 2000);\n    return () => clearInterval(sincInterval);\n  }, []);\n\n  // Efeito para sincronizar alterações de localStorage entre abas/janelas\n  useEffect(() => {\n    const handleStorageChange = e => {\n      var _e$key;\n      if (e.key === 'pontoRegistros' || (_e$key = e.key) !== null && _e$key !== void 0 && _e$key.startsWith('pontoStatus_')) {\n        sincronizarStatusSalvos();\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\n  }, [pontoRegistros]);\n\n  // Listas e filtros\n  const funcionarios = [...new Set([...allFuncionarios.map(f => f.nome), ...pontoRegistros.map(registro => registro.funcionarioNome)])].filter(Boolean).sort();\n  const datas = [...new Set(pontoRegistros.map(registro => registro.data))];\n  const registrosFiltrados = pontoRegistros.filter(registro => {\n    return (filtros.data === '' || registro.data === filtros.data) && (filtros.funcionario === '' || registro.funcionarioNome === filtros.funcionario) && (filtros.status === '' || registro.registros.some(r => r.status === filtros.status));\n  });\n  const registrosOrdenados = [...registrosFiltrados].sort((a, b) => {\n    const [diaA, mesA, anoA] = a.data.split('/').map(Number);\n    const [diaB, mesB, anoB] = b.data.split('/').map(Number);\n    const dateA = new Date(anoA, mesA - 1, diaA);\n    const dateB = new Date(anoB, mesB - 1, diaB);\n    return dateB - dateA;\n  });\n\n  // Início do JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Registros de Ponto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const latestFuncionarios = getLatestFuncionarios();\n          setAllFuncionarios(latestFuncionarios);\n          adicionarRegistrosParaTodosFuncionarios();\n          alert(`Lista atualizada! ${latestFuncionarios.length} funcionários encontrados.`);\n        },\n        className: \"bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded-md text-sm\",\n        children: [\"Atualizar Lista de Funcion\\xE1rios (\", allFuncionarios.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-purple-300 mt-1\",\n        children: [\"Lista atualizada em: \", new Date().toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this), \"Exportar Relat\\xF3rio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), \"Notificar Todos com Pend\\xEAncias\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this), \"Gerar Espelho de Ponto\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6 mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.data,\n            onChange: e => setFiltros({\n              ...filtros,\n              data: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todas as datas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), datas.map((data, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: data,\n              children: data\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: [\"Funcion\\xE1rio (\", funcionarios.length, \" dispon\\xEDveis)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.funcionario,\n            onChange: e => setFiltros({\n              ...filtros,\n              funcionario: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os funcion\\xE1rios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), funcionarios.map((funcionario, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: funcionario,\n              children: funcionario\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.status,\n            onChange: e => setFiltros({\n              ...filtros,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"regular\",\n              children: \"Regular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"atrasado\",\n              children: \"Atrasado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hora extra\",\n              children: \"Hora Extra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pendente\",\n              children: \"Pendente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"falta justificada\",\n              children: \"Falta Justificada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ajustado\",\n              children: \"Ajustado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"aprovado\",\n              children: \"Aprovado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rejeitado\",\n              children: \"Rejeitado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-purple-300 text-sm border-b border-purple-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Funcion\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Entrada 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Sa\\xEDda 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Entrada 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Sa\\xEDda 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [registrosOrdenados.map(registro => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-30\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: registro.funcionarioNome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: registro.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 17\n            }, this), registro.registros.map((r, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: editandoRegistro && editandoRegistro.registroId === registro.id && editandoRegistro.indiceRegistro === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  defaultValue: r.hora !== '--:--' ? r.hora : '',\n                  className: \"bg-purple-800 border border-purple-600 rounded-md p-1 text-white w-24\",\n                  ref: el => horaInputRefs.current[`${registro.id}-${index}`] = el\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      salvarEdicaoPonto(registro.id, index, STATUS_APROVADO);\n                      salvarStatusExplicitamente(registro.id, index, STATUS_APROVADO);\n                    },\n                    className: \"text-green-500 hover:text-green-400\",\n                    title: \"Aprovar registro\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M5 13l4 4L19 7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 717,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      salvarEdicaoPonto(registro.id, index, STATUS_REJEITADO);\n                      salvarStatusExplicitamente(registro.id, index, STATUS_REJEITADO);\n                    },\n                    className: \"text-red-500 hover:text-red-400\",\n                    title: \"Rejeitar registro\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      salvarEdicaoPonto(registro.id, index, STATUS_AJUSTADO);\n                      salvarStatusExplicitamente(registro.id, index, STATUS_AJUSTADO);\n                    },\n                    className: \"text-blue-500 hover:text-blue-400\",\n                    title: \"Ajustar registro\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 741,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: cancelarEdicaoPonto,\n                    className: \"text-gray-400 hover:text-white\",\n                    title: \"Cancelar\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M6 18L18 6M6 6l12 12\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 750,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 749,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: r.status === 'pendente' ? 'text-red-400' : '',\n                  children: r.hora\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-2\",\n                  children: renderizarStatus(r.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => iniciarEdicaoPonto(registro.id, index),\n                  className: \"text-purple-300 hover:text-white ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2 items-center\",\n                children: [registro.registros.some(r => r.status === 'pendente') && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => notificarFuncionario(registro.funcionarioId, registro.funcionarioNome),\n                  className: \"bg-purple-600 hover:bg-purple-700 text-white rounded p-1 text-xs flex items-center\",\n                  title: \"Notificar funcion\\xE1rio\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 781,\n                    columnNumber: 25\n                  }, this), \"Notificar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 23\n                }, this), registro.registros.some(r => r.status === 'pendente') && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => marcarFaltaJustificada(registro.id),\n                  className: \"bg-orange-600 hover:bg-orange-700 text-white rounded p-1 text-xs flex items-center\",\n                  title: \"Marcar falta como justificada\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 794,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 793,\n                    columnNumber: 25\n                  }, this), \"Justificar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-600 hover:bg-blue-700 text-white rounded p-1 text-xs flex items-center\",\n                  title: \"Exportar registro\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 804,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 803,\n                    columnNumber: 23\n                  }, this), \"Exportar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this)]\n          }, registro.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this)), registrosOrdenados.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              className: \"px-4 py-6 text-center text-purple-300\",\n              children: \"Nenhum registro encontrado com os filtros selecionados.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 582,\n    columnNumber: 5\n  }, this);\n};\n_s(PontoBatidoTab, \"HGyuqSV5bAS7DFd6pW44llZwf9Q=\");\n_c = PontoBatidoTab;\nexport default PontoBatidoTab;\nvar _c;\n$RefreshReg$(_c, \"PontoBatidoTab\");","map":{"version":3,"names":["salvarStatusExplicitamente","registroId","indice","status","statusKey","localStorage","setItem","registroAtualizado","pontoRegistros","find","r","id","registros","registrosAtualizados","indexRegistro","findIndex","map","i","setPontoRegistros","JSON","stringify","console","log","useEffect","handleFuncionariosChange","e","key","FUNCIONARIOS_KEY","updatedFuncionarios","getAllPossibleFuncionarios","setAllFuncionarios","adicionarRegistrosParaTodosFuncionarios","window","addEventListener","removeEventListener","React","useState","useRef","jsxDEV","_jsxDEV","PontoBatidoTab","_s","storedRegistros","getItem","registrosBase","parse","funcionarioId","funcionarioNome","data","tipo","hora","registro","statusSalvo","filtros","setFiltros","funcionario","allFuncionarios","editandoRegistro","setEditandoRegistro","horaInputRefs","STATUS_APROVADO","STATUS_REJEITADO","STATUS_PENDENTE","STATUS_AJUSTADO","registeredUsers","funcionariosFromUsers","user","nome","name","storedFuncionarios","funcionariosFromRegistros","funcionariosMap","Map","forEach","func","set","Array","from","values","error","getLatestFuncionarios","funcionariosStorage","userStorage","some","f","push","dataAtual","Date","toLocaleDateString","todasDatas","Set","nextId","Math","max","novosPontoRegistros","registrosExistentes","chaveRegistro","existeRegistro","has","add","includes","chaveRegistroHoje","existeRegistroHoje","registrosComStatusAtualizados","marcarFaltaJustificada","indicesAtualizados","index","novosRegistros","alert","atualizarPonto","novaHora","novoStatus","notificacoes","now","userId","message","date","read","notificarFuncionario","iniciarEdicaoPonto","indiceRegistro","setTimeout","current","focus","salvarEdicaoPonto","statusSelecionado","inputRef","value","cancelarEdicaoPonto","renderizarStatus","corClasse","texto","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","obterStatusSalvo","restaurarStatusSalvos","updateAllFuncionarios","allPossible","interval","setInterval","clearInterval","funcionarios","sincronizarStatusSalvos","registrosArmazenados","mudancaDetectada","sincInterval","handleStorageChange","_e$key","startsWith","filter","Boolean","sort","datas","registrosFiltrados","registrosOrdenados","a","b","diaA","mesA","anoA","split","Number","diaB","mesB","anoB","dateA","dateB","onClick","latestFuncionarios","length","toLocaleTimeString","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onChange","target","type","defaultValue","ref","el","title","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/components/PontoBatidoTab.js"],"sourcesContent":["// Hook para salvar explicitamente os status aprovados e rejeitados\r\nconst salvarStatusExplicitamente = (registroId, indice, status) => {\r\n    // Salvar no localStorage específico para este registro e índice\r\n    const statusKey = `pontoStatus_${registroId}_${indice}`;\r\n    localStorage.setItem(statusKey, status);\r\n    \r\n    // Atualizar o registro com o novo status\r\n    const registroAtualizado = pontoRegistros.find(r => r.id === registroId);\r\n    if (registroAtualizado && registroAtualizado.registros[indice]) {\r\n      const registrosAtualizados = [...pontoRegistros];\r\n      const indexRegistro = registrosAtualizados.findIndex(r => r.id === registroId);\r\n      \r\n      if (indexRegistro !== -1) {\r\n        registrosAtualizados[indexRegistro] = {\r\n          ...registrosAtualizados[indexRegistro],\r\n          registros: registrosAtualizados[indexRegistro].registros.map((r, i) => \r\n            i === indice ? { ...r, status: status } : r\r\n          )\r\n        };\r\n        \r\n        setPontoRegistros(registrosAtualizados);\r\n        localStorage.setItem('pontoRegistros', JSON.stringify(registrosAtualizados));\r\n        \r\n        // Adicionar um log para debug\r\n        console.log(`Status ${status} salvo para registro ${registroId}, índice ${indice}`);\r\n      }\r\n    }\r\n  };  // Novo useEffect para lidar com alterações específicas nos funcionários\r\n  useEffect(() => {\r\n    const handleFuncionariosChange = (e) => {\r\n      if (e.key === FUNCIONARIOS_KEY || e.key === 'registeredUsers' || e.key === 'user') {\r\n        const updatedFuncionarios = getAllPossibleFuncionarios();\r\n        setAllFuncionarios(updatedFuncionarios);\r\n        adicionarRegistrosParaTodosFuncionarios();\r\n      }\r\n    };\r\n    window.addEventListener('storage', handleFuncionariosChange);\r\n    return () => window.removeEventListener('storage', handleFuncionariosChange);\r\n  }, []);import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst PontoBatidoTab = () => {\r\n  // Estados\r\n  const [pontoRegistros, setPontoRegistros] = useState(() => {\r\n    const storedRegistros = localStorage.getItem('pontoRegistros');\r\n    const registrosBase = storedRegistros ? JSON.parse(storedRegistros) : [\r\n      {\r\n        id: 1,\r\n        funcionarioId: 101,\r\n        funcionarioNome: 'João Silva',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:05', status: 'regular' },\r\n          { tipo: 'saída', hora: '12:00', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:10', status: 'regular' },\r\n          { tipo: 'saída', hora: '--:--', status: 'pendente' }\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        funcionarioId: 102,\r\n        funcionarioNome: 'Maria Oliveira',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:15', status: 'atrasado' },\r\n          { tipo: 'saída', hora: '12:05', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:00', status: 'regular' },\r\n          { tipo: 'saída', hora: '17:10', status: 'regular' }\r\n        ]\r\n      },\r\n      {\r\n        id: 3,\r\n        funcionarioId: 103,\r\n        funcionarioNome: 'Carlos Pereira',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '09:20', status: 'atrasado' },\r\n          { tipo: 'saída', hora: '12:15', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:10', status: 'regular' },\r\n          { tipo: 'saída', hora: '18:35', status: 'hora extra' }\r\n        ]\r\n      },\r\n      {\r\n        id: 4,\r\n        funcionarioId: 104,\r\n        funcionarioNome: 'Ana Souza',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '--:--', status: 'pendente' },\r\n          { tipo: 'saída', hora: '--:--', status: 'pendente' },\r\n          { tipo: 'entrada', hora: '--:--', status: 'pendente' },\r\n          { tipo: 'saída', hora: '--:--', status: 'pendente' }\r\n        ]\r\n      },\r\n      {\r\n        id: 5,\r\n        funcionarioId: 101,\r\n        funcionarioNome: 'João Silva',\r\n        data: '18/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:00', status: 'regular' },\r\n          { tipo: 'saída', hora: '12:00', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:00', status: 'regular' },\r\n          { tipo: 'saída', hora: '17:05', status: 'regular' }\r\n        ]\r\n      },\r\n      {\r\n        id: 6,\r\n        funcionarioId: 102,\r\n        funcionarioNome: 'Maria Oliveira',\r\n        data: '18/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:10', status: 'regular' },\r\n          { tipo: 'saída', hora: '12:00', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:05', status: 'regular' },\r\n          { tipo: 'saída', hora: '17:00', status: 'regular' }\r\n        ]\r\n      }\r\n    ];\r\n    \r\n    // Aplicar status salvos no localStorage\r\n    const registrosAtualizados = registrosBase.map(registro => {\r\n      const registrosAtualizados = registro.registros.map((r, indice) => {\r\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\r\n        const statusSalvo = localStorage.getItem(statusKey);\r\n        if (statusSalvo) {\r\n          return { ...r, status: statusSalvo };\r\n        }\r\n        // Converter status \"falta\" para \"pendente\" \r\n        if (r.status === 'falta') {\r\n          return { ...r, status: 'pendente' };\r\n        }\r\n        return r;\r\n      });\r\n      return { ...registro, registros: registrosAtualizados };\r\n    });\r\n    \r\n    return registrosAtualizados;\r\n  });\r\n\r\n  const [filtros, setFiltros] = useState({\r\n    data: '',\r\n    funcionario: '',\r\n    status: ''\r\n  });\r\n\r\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\r\n  const [editandoRegistro, setEditandoRegistro] = useState(null);\r\n  const horaInputRefs = useRef({});\r\n  const FUNCIONARIOS_KEY = 'funcionarios';\r\n  \r\n  // Constantes para status\r\n  const STATUS_APROVADO = 'aprovado';\r\n  const STATUS_REJEITADO = 'rejeitado';\r\n  const STATUS_PENDENTE = 'pendente';\r\n  const STATUS_AJUSTADO = 'ajustado';\r\n  \r\n  // Funções auxiliares\r\n  const getAllPossibleFuncionarios = () => {\r\n    try {\r\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n      const funcionariosFromUsers = registeredUsers.map(user => ({\r\n        id: user.id,\r\n        nome: user.name || user.nome\r\n      }));\r\n      \r\n      const storedFuncionarios = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\r\n      \r\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\r\n        id: registro.funcionarioId,\r\n        nome: registro.funcionarioNome\r\n      }));\r\n\r\n      const funcionariosMap = new Map();\r\n      \r\n      [...funcionariosFromUsers, ...storedFuncionarios, ...funcionariosFromRegistros]\r\n        .forEach(func => {\r\n          if (func && func.id) {\r\n            funcionariosMap.set(func.id, func);\r\n          }\r\n        });\r\n\r\n      return Array.from(funcionariosMap.values());\r\n    } catch (error) {\r\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getLatestFuncionarios = () => {\r\n    try {\r\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n      const funcionariosStorage = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\r\n      const userStorage = JSON.parse(localStorage.getItem('user') || '{}');\r\n\r\n      const funcionariosFromUsers = registeredUsers.map(user => ({\r\n        id: user.id,\r\n        nome: user.name || user.nome\r\n      }));\r\n\r\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\r\n        id: registro.funcionarioId,\r\n        nome: registro.funcionarioNome\r\n      }));\r\n\r\n      const allFuncionarios = [...funcionariosStorage];\r\n      \r\n      [...funcionariosFromUsers, ...funcionariosFromRegistros].forEach(func => {\r\n        if (!allFuncionarios.some(f => f.id === func.id)) {\r\n          allFuncionarios.push(func);\r\n        }\r\n      });\r\n\r\n      if (userStorage && userStorage.id && userStorage.name) {\r\n        if (!allFuncionarios.some(f => f.id === userStorage.id)) {\r\n          allFuncionarios.push({\r\n            id: userStorage.id,\r\n            nome: userStorage.name\r\n          });\r\n        }\r\n      }\r\n\r\n      localStorage.setItem(FUNCIONARIOS_KEY, JSON.stringify(allFuncionarios));\r\n      return allFuncionarios;\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar funcionários:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const adicionarRegistrosParaTodosFuncionarios = () => {\r\n    const dataAtual = new Date().toLocaleDateString('pt-BR');\r\n    const todasDatas = [...new Set(pontoRegistros.map(registro => registro.data))];\r\n    let nextId = Math.max(...pontoRegistros.map(registro => registro.id), 0) + 1;\r\n    \r\n    const novosPontoRegistros = [...pontoRegistros];\r\n    const registrosExistentes = new Set(\r\n      pontoRegistros.map(registro => `${registro.funcionarioId}-${registro.data}`)\r\n    );\r\n    \r\n    // Para cada funcionário em allFuncionarios\r\n    allFuncionarios.forEach(funcionario => {\r\n      // Para cada data existente nos registros\r\n      todasDatas.forEach(data => {\r\n        // Verifica se já existe um registro para esse funcionário nessa data\r\n        const chaveRegistro = `${funcionario.id}-${data}`;\r\n        const existeRegistro = registrosExistentes.has(chaveRegistro);\r\n        \r\n        // Se não existir, cria um novo registro\r\n        if (!existeRegistro) {\r\n          novosPontoRegistros.push({\r\n            id: nextId++,\r\n            funcionarioId: funcionario.id,\r\n            funcionarioNome: funcionario.nome,\r\n            data: data,\r\n            registros: [\r\n              { tipo: 'entrada', hora: '--:--', status: 'pendente' },\r\n              { tipo: 'saída', hora: '--:--', status: 'pendente' },\r\n              { tipo: 'entrada', hora: '--:--', status: 'pendente' },\r\n              { tipo: 'saída', hora: '--:--', status: 'pendente' }\r\n            ]\r\n          });\r\n          registrosExistentes.add(chaveRegistro);\r\n        }\r\n      });\r\n      \r\n      // Adiciona também para a data atual se não existir\r\n      if (!todasDatas.includes(dataAtual)) {\r\n        const chaveRegistroHoje = `${funcionario.id}-${dataAtual}`;\r\n        const existeRegistroHoje = registrosExistentes.has(chaveRegistroHoje);\r\n        \r\n        if (!existeRegistroHoje) {\r\n          novosPontoRegistros.push({\r\n            id: nextId++,\r\n            funcionarioId: funcionario.id,\r\n            funcionarioNome: funcionario.nome,\r\n            data: dataAtual,\r\n            registros: [\r\n              { tipo: 'entrada', hora: '--:--', status: 'pendente' },\r\n              { tipo: 'saída', hora: '--:--', status: 'pendente' },\r\n              { tipo: 'entrada', hora: '--:--', status: 'pendente' },\r\n              { tipo: 'saída', hora: '--:--', status: 'pendente' }\r\n            ]\r\n          });\r\n          registrosExistentes.add(chaveRegistroHoje);\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Importante: Aplicar status salvos nos novos registros\r\n    const registrosComStatusAtualizados = novosPontoRegistros.map(registro => {\r\n      const registrosAtualizados = registro.registros.map((r, indice) => {\r\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\r\n        const statusSalvo = localStorage.getItem(statusKey);\r\n        if (statusSalvo) {\r\n          return { ...r, status: statusSalvo };\r\n        }\r\n        return r;\r\n      });\r\n      return { ...registro, registros: registrosAtualizados };\r\n    });\r\n    \r\n    setPontoRegistros(registrosComStatusAtualizados);\r\n    localStorage.setItem('pontoRegistros', JSON.stringify(registrosComStatusAtualizados));\r\n  };\r\n\r\n  const marcarFaltaJustificada = (registroId) => {\r\n    const registroAtualizado = pontoRegistros.find(r => r.id === registroId);\r\n    if (registroAtualizado) {\r\n      let indicesAtualizados = [];\r\n      registroAtualizado.registros = registroAtualizado.registros.map((r, index) => {\r\n        if (r.status === STATUS_PENDENTE || r.status === 'falta') {\r\n          indicesAtualizados.push(index);\r\n          return { ...r, status: 'falta justificada' };\r\n        }\r\n        return r;\r\n      });\r\n      \r\n      const novosRegistros = pontoRegistros.map(r =>\r\n        r.id === registroId ? registroAtualizado : r\r\n      );\r\n      \r\n      setPontoRegistros(novosRegistros);\r\n      localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\r\n      \r\n      // Salvar também no localStorage específico para cada índice atualizado\r\n      indicesAtualizados.forEach(indice => {\r\n        const statusKey = `pontoStatus_${registroId}_${indice}`;\r\n        localStorage.setItem(statusKey, 'falta justificada');\r\n      });\r\n      \r\n      alert(`Falta justificada registrada para ${registroAtualizado.funcionarioNome} em ${registroAtualizado.data}.`);\r\n    }\r\n  };\r\n  \r\n  const atualizarPonto = (registroId, index, novaHora, novoStatus = STATUS_AJUSTADO) => {\r\n    const registroAtualizado = {...pontoRegistros.find(r => r.id === registroId)};\r\n    if (registroAtualizado && registroAtualizado.registros[index]) {\r\n      const registrosAtualizados = [...registroAtualizado.registros];\r\n      registrosAtualizados[index] = {\r\n        ...registrosAtualizados[index],\r\n        hora: novaHora,\r\n        status: novoStatus\r\n      };\r\n      registroAtualizado.registros = registrosAtualizados;\r\n      const novosRegistros = pontoRegistros.map(r =>\r\n        r.id === registroId ? registroAtualizado : r\r\n      );\r\n      setPontoRegistros(novosRegistros);\r\n      localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\r\n      \r\n      // Salvar também no localStorage específico para status\r\n      const statusKey = `pontoStatus_${registroId}_${index}`;\r\n      localStorage.setItem(statusKey, novoStatus);\r\n      \r\n      const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n      notificacoes.push({\r\n        id: Date.now(),\r\n        userId: registroAtualizado.funcionarioId,\r\n        message: `Seu registro de ponto do dia ${registroAtualizado.data} foi ${novoStatus} pelo administrador.`,\r\n        date: new Date().toLocaleDateString('pt-BR'),\r\n        read: false\r\n      });\r\n      localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n      alert(`Ponto atualizado para ${registroAtualizado.funcionarioNome} em ${registroAtualizado.data}.`);\r\n    }\r\n  };\r\n\r\n  const notificarFuncionario = (funcionarioId, funcionarioNome) => {\r\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    notificacoes.push({\r\n      id: Date.now(),\r\n      userId: funcionarioId,\r\n      message: 'Por favor, registre seu ponto pendente do dia de hoje.',\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    });\r\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n    alert(`Notificação enviada para ${funcionarioNome} sobre ponto pendente.`);\r\n  };\r\n\r\n  const iniciarEdicaoPonto = (registroId, indiceRegistro) => {\r\n    setEditandoRegistro({ registroId, indiceRegistro });\r\n    setTimeout(() => {\r\n      if (horaInputRefs.current[`${registroId}-${indiceRegistro}`]) {\r\n        horaInputRefs.current[`${registroId}-${indiceRegistro}`].focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const salvarEdicaoPonto = (registroId, indiceRegistro, statusSelecionado = STATUS_AJUSTADO) => {\r\n    const inputRef = horaInputRefs.current[`${registroId}-${indiceRegistro}`];\r\n    if (inputRef && inputRef.value) {\r\n      atualizarPonto(registroId, indiceRegistro, inputRef.value, statusSelecionado);\r\n    }\r\n    setEditandoRegistro(null);\r\n  };\r\n\r\n  const cancelarEdicaoPonto = () => {\r\n    setEditandoRegistro(null);\r\n  };\r\n\r\n  const renderizarStatus = (status) => {\r\n    let corClasse = '';\r\n    let texto = status.toUpperCase();\r\n    switch(status) {\r\n      case 'regular':\r\n        corClasse = 'bg-green-600';\r\n        break;\r\n      case 'atrasado':\r\n        corClasse = 'bg-yellow-600';\r\n        break;\r\n      case 'hora extra':\r\n        corClasse = 'bg-blue-600';\r\n        break;\r\n      case 'pendente':\r\n        corClasse = 'bg-purple-600';\r\n        texto = 'PENDENTE';\r\n        break;\r\n      case 'falta':\r\n        corClasse = 'bg-purple-600';\r\n        texto = 'PENDENTE';\r\n        break;\r\n      case 'falta justificada':\r\n        corClasse = 'bg-orange-600';\r\n        texto = 'JUSTIFICADA';\r\n        break;\r\n      case 'ajustado':\r\n        corClasse = 'bg-indigo-600';\r\n        break;\r\n      case 'aprovado':\r\n        corClasse = 'bg-green-700';\r\n        break;\r\n      case 'rejeitado':\r\n        corClasse = 'bg-red-700';\r\n        break;\r\n      default:\r\n        corClasse = 'bg-gray-600';\r\n    }\r\n    return (\r\n      <span className={`inline-block px-2 py-1 rounded-full text-xs ${corClasse}`}>\r\n        {texto}\r\n      </span>\r\n    );\r\n  };\r\n  \r\n  // Função para obter o status salvo do localStorage para um registro específico\r\n  const obterStatusSalvo = (registroId, indice) => {\r\n    const statusKey = `pontoStatus_${registroId}_${indice}`;\r\n    return localStorage.getItem(statusKey);\r\n  };\r\n  \r\n  // Função para restaurar status salvos de todos os registros\r\n  const restaurarStatusSalvos = () => {\r\n    const novosRegistros = pontoRegistros.map(registro => {\r\n      const registrosAtualizados = registro.registros.map((r, indice) => {\r\n        const statusSalvo = obterStatusSalvo(registro.id, indice);\r\n        if (statusSalvo) {\r\n          return { ...r, status: statusSalvo };\r\n        }\r\n        return r;\r\n      });\r\n      return { ...registro, registros: registrosAtualizados };\r\n    });\r\n    \r\n    setPontoRegistros(novosRegistros);\r\n    localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\r\n  };\r\n  \r\n  // useEffects\r\n  useEffect(() => {\r\n    const updateAllFuncionarios = () => {\r\n      const allPossible = getAllPossibleFuncionarios();\r\n      setAllFuncionarios(allPossible);\r\n    };\r\n    updateAllFuncionarios();\r\n    \r\n    // Restaurar status salvos\r\n    restaurarStatusSalvos();\r\n    \r\n    const interval = setInterval(updateAllFuncionarios, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const funcionarios = getLatestFuncionarios();\r\n    setAllFuncionarios(funcionarios);\r\n    \r\n    // Após obter os funcionários, adiciona registros para todos\r\n    adicionarRegistrosParaTodosFuncionarios();\r\n    \r\n    // Reduzir a frequência do timer para evitar problemas de sobrescrita\r\n    const interval = setInterval(() => {\r\n      const updatedFuncionarios = getLatestFuncionarios();\r\n      if (JSON.stringify(updatedFuncionarios) !== JSON.stringify(allFuncionarios)) {\r\n        setAllFuncionarios(updatedFuncionarios);\r\n        adicionarRegistrosParaTodosFuncionarios();\r\n      }\r\n    }, 10000); // Aumentado para 10s para reduzir a frequência de atualizações\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Adicionar função para garantir que os status permaneçam consistentes\r\n  const sincronizarStatusSalvos = () => {\r\n    // 1. Obter os registros armazenados no localStorage\r\n    const registrosArmazenados = JSON.parse(localStorage.getItem('pontoRegistros') || '[]');\r\n    let mudancaDetectada = false;\r\n    \r\n    // 2. Para cada registro que já existe no localStorage, verificar e aplicar status salvos\r\n    const registrosAtualizados = registrosArmazenados.map(registro => {\r\n      const registrosAtualizados = registro.registros.map((r, indice) => {\r\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\r\n        const statusSalvo = localStorage.getItem(statusKey);\r\n        \r\n        if (statusSalvo && r.status !== statusSalvo) {\r\n          mudancaDetectada = true;\r\n          return { ...r, status: statusSalvo };\r\n        }\r\n        return r;\r\n      });\r\n      \r\n      return { ...registro, registros: registrosAtualizados };\r\n    });\r\n    \r\n    // 3. Se houve mudança, atualizar o localStorage e o estado do componente\r\n    if (mudancaDetectada) {\r\n      localStorage.setItem('pontoRegistros', JSON.stringify(registrosAtualizados));\r\n      setPontoRegistros(registrosAtualizados);\r\n    }\r\n  };\r\n  \r\n  // Chamando a sincronização a cada 2 segundos para garantir consistência\r\n  useEffect(() => {\r\n    const sincInterval = setInterval(sincronizarStatusSalvos, 2000);\r\n    return () => clearInterval(sincInterval);\r\n  }, []);\r\n  \r\n  // Efeito para sincronizar alterações de localStorage entre abas/janelas\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'pontoRegistros' || e.key?.startsWith('pontoStatus_')) {\r\n        sincronizarStatusSalvos();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\r\n  }, [pontoRegistros]);\r\n\r\n  // Listas e filtros\r\n  const funcionarios = [\r\n    ...new Set([\r\n      ...allFuncionarios.map(f => f.nome),\r\n      ...pontoRegistros.map(registro => registro.funcionarioNome)\r\n    ])\r\n  ].filter(Boolean).sort();\r\n\r\n  const datas = [...new Set(pontoRegistros.map(registro => registro.data))];\r\n\r\n  const registrosFiltrados = pontoRegistros.filter(registro => {\r\n    return (\r\n      (filtros.data === '' || registro.data === filtros.data) &&\r\n      (filtros.funcionario === '' || registro.funcionarioNome === filtros.funcionario) &&\r\n      (filtros.status === '' || registro.registros.some(r => r.status === filtros.status))\r\n    );\r\n  });\r\n\r\n  const registrosOrdenados = [...registrosFiltrados].sort((a, b) => {\r\n    const [diaA, mesA, anoA] = a.data.split('/').map(Number);\r\n    const [diaB, mesB, anoB] = b.data.split('/').map(Number);\r\n    const dateA = new Date(anoA, mesA - 1, diaA);\r\n    const dateB = new Date(anoB, mesB - 1, diaB);\r\n    return dateB - dateA;\r\n  });\r\n\r\n  // Início do JSX\r\n  return (\r\n    <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Registros de Ponto</h1>\r\n      \r\n      {/* Botão para forçar atualização da lista */}\r\n      <div className=\"mb-4\">\r\n        <button\r\n          onClick={() => {\r\n            const latestFuncionarios = getLatestFuncionarios();\r\n            setAllFuncionarios(latestFuncionarios);\r\n            adicionarRegistrosParaTodosFuncionarios();\r\n            alert(`Lista atualizada! ${latestFuncionarios.length} funcionários encontrados.`);\r\n          }}\r\n          className=\"bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded-md text-sm\"\r\n        >\r\n          Atualizar Lista de Funcionários ({allFuncionarios.length})\r\n        </button>\r\n        <div className=\"text-xs text-purple-300 mt-1\">\r\n          Lista atualizada em: {new Date().toLocaleTimeString()}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Botões de ação */}\r\n      <div className=\"mt-6 flex flex-wrap gap-4\">\r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n          </svg>\r\n          Exportar Relatório\r\n        </button>\r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n          </svg>\r\n          Notificar Todos com Pendências\r\n        </button>\r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n          </svg>\r\n          Gerar Espelho de Ponto\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      <div className=\"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6 mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Filtros</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Data</label>\r\n            <select\r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.data}\r\n              onChange={(e) => setFiltros({...filtros, data: e.target.value})}\r\n            >\r\n              <option value=\"\">Todas as datas</option>\r\n              {datas.map((data, index) => (\r\n                <option key={index} value={data}>{data}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">\r\n              Funcionário ({funcionarios.length} disponíveis)\r\n            </label>\r\n            <select\r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.funcionario}\r\n              onChange={(e) => setFiltros({...filtros, funcionario: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os funcionários</option>\r\n              {funcionarios.map((funcionario, index) => (\r\n                <option key={index} value={funcionario}>{funcionario}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Status</label>\r\n            <select\r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.status}\r\n              onChange={(e) => setFiltros({...filtros, status: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os status</option>\r\n              <option value=\"regular\">Regular</option>\r\n              <option value=\"atrasado\">Atrasado</option>\r\n              <option value=\"hora extra\">Hora Extra</option>\r\n              <option value=\"pendente\">Pendente</option>\r\n              <option value=\"falta justificada\">Falta Justificada</option>\r\n              <option value=\"ajustado\">Ajustado</option>\r\n              <option value=\"aprovado\">Aprovado</option>\r\n              <option value=\"rejeitado\">Rejeitado</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Tabela de Registros */}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full\">\r\n          <thead>\r\n            <tr className=\"text-purple-300 text-sm border-b border-purple-700\">\r\n              <th className=\"px-4 py-2 text-left\">Funcionário</th>\r\n              <th className=\"px-4 py-2 text-left\">Data</th>\r\n              <th className=\"px-4 py-2 text-left\">Entrada 1</th>\r\n              <th className=\"px-4 py-2 text-left\">Saída 1</th>\r\n              <th className=\"px-4 py-2 text-left\">Entrada 2</th>\r\n              <th className=\"px-4 py-2 text-left\">Saída 2</th>\r\n              <th className=\"px-4 py-2 text-left\">Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {registrosOrdenados.map((registro) => (\r\n              <tr key={registro.id} className=\"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-30\">\r\n                <td className=\"px-4 py-3\">{registro.funcionarioNome}</td>\r\n                <td className=\"px-4 py-3\">{registro.data}</td>\r\n                {registro.registros.map((r, index) => (\r\n                  <td key={index} className=\"px-4 py-3\">\r\n                    {editandoRegistro && editandoRegistro.registroId === registro.id && editandoRegistro.indiceRegistro === index ? (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <input\r\n                          type=\"time\"\r\n                          defaultValue={r.hora !== '--:--' ? r.hora : ''}\r\n                          className=\"bg-purple-800 border border-purple-600 rounded-md p-1 text-white w-24\"\r\n                          ref={el => horaInputRefs.current[`${registro.id}-${index}`] = el}\r\n                        />\r\n                        <div className=\"flex space-x-1\">\r\n                          <button\r\n                            onClick={() => {\r\n                              salvarEdicaoPonto(registro.id, index, STATUS_APROVADO);\r\n                              salvarStatusExplicitamente(registro.id, index, STATUS_APROVADO);\r\n                            }}\r\n                            className=\"text-green-500 hover:text-green-400\"\r\n                            title=\"Aprovar registro\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              salvarEdicaoPonto(registro.id, index, STATUS_REJEITADO);\r\n                              salvarStatusExplicitamente(registro.id, index, STATUS_REJEITADO);\r\n                            }}\r\n                            className=\"text-red-500 hover:text-red-400\"\r\n                            title=\"Rejeitar registro\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={() => {\r\n                              salvarEdicaoPonto(registro.id, index, STATUS_AJUSTADO);\r\n                              salvarStatusExplicitamente(registro.id, index, STATUS_AJUSTADO);\r\n                            }}\r\n                            className=\"text-blue-500 hover:text-blue-400\"\r\n                            title=\"Ajustar registro\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={cancelarEdicaoPonto}\r\n                            className=\"text-gray-400 hover:text-white\"\r\n                            title=\"Cancelar\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className={r.status === 'pendente' ? 'text-red-400' : ''}>\r\n                          {r.hora}\r\n                        </span>\r\n                        <div className=\"ml-2\">{renderizarStatus(r.status)}</div>\r\n                        <button\r\n                          onClick={() => iniciarEdicaoPonto(registro.id, index)}\r\n                          className=\"text-purple-300 hover:text-white ml-auto\"\r\n                        >\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                ))}\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"flex space-x-2 items-center\">\r\n                    {registro.registros.some(r => r.status === 'pendente') && (\r\n                      <button\r\n                        onClick={() => notificarFuncionario(registro.funcionarioId, registro.funcionarioNome)}\r\n                        className=\"bg-purple-600 hover:bg-purple-700 text-white rounded p-1 text-xs flex items-center\"\r\n                        title=\"Notificar funcionário\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n                        </svg>\r\n                        Notificar\r\n                      </button>\r\n                    )}\r\n                    {registro.registros.some(r => r.status === 'pendente') && (\r\n                      <button\r\n                        onClick={() => marcarFaltaJustificada(registro.id)}\r\n                        className=\"bg-orange-600 hover:bg-orange-700 text-white rounded p-1 text-xs flex items-center\"\r\n                        title=\"Marcar falta como justificada\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                        Justificar\r\n                      </button>\r\n                    )}\r\n                    <button\r\n                      className=\"bg-blue-600 hover:bg-blue-700 text-white rounded p-1 text-xs flex items-center\"\r\n                      title=\"Exportar registro\"\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n                      </svg>\r\n                      Exportar\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            {registrosOrdenados.length === 0 && (\r\n              <tr>\r\n                <td colSpan=\"7\" className=\"px-4 py-6 text-center text-purple-300\">\r\n                  Nenhum registro encontrado com os filtros selecionados.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PontoBatidoTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}