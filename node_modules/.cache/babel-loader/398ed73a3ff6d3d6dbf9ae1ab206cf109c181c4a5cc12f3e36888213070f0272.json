{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\components\\\\AjustesPontoTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from './UserContext'; // Importando o hook do contexto\nimport { useNavigate } from 'react-router-dom';\n\n// Constante para a chave do localStorage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FUNCIONARIOS_KEY = 'funcionarios';\nconst AjustesPontoTab = () => {\n  _s();\n  // Usando o contexto para obter a lista de funcionários e dados do usuário\n  const {\n    userData,\n    funcionarios,\n    refreshFuncionarios,\n    updateCounter\n  } = useUser();\n  const navigate = useNavigate();\n\n  // Estado local para funcionários (backup caso o Context falhe)\n  const [localFuncionarios, setLocalFuncionarios] = useState([]);\n\n  // Estado para as solicitações de ajuste\n  const [solicitacoes, setSolicitacoes] = useState(() => {\n    const storedSolicitacoes = localStorage.getItem('ajustePontoSolicitacoes');\n    return storedSolicitacoes ? JSON.parse(storedSolicitacoes) : [{\n      id: 1,\n      funcionarioId: 102,\n      funcionarioNome: 'Maria Oliveira',\n      data: '19/03/2025',\n      tipoRegistro: 'entrada',\n      horaOriginal: '08:15',\n      horaCorreta: '08:00',\n      motivo: 'Problema no sistema de ponto',\n      status: 'pendente',\n      dataSolicitacao: '19/03/2025'\n    }, {\n      id: 2,\n      funcionarioId: 103,\n      funcionarioNome: 'Carlos Pereira',\n      data: '18/03/2025',\n      tipoRegistro: 'saída',\n      horaOriginal: '17:45',\n      horaCorreta: '18:30',\n      motivo: 'Reunião que se estendeu além do horário',\n      status: 'pendente',\n      dataSolicitacao: '18/03/2025'\n    }, {\n      id: 3,\n      funcionarioId: 104,\n      funcionarioNome: 'Ana Souza',\n      data: '17/03/2025',\n      tipoRegistro: 'entrada',\n      horaOriginal: '--:--',\n      horaCorreta: '08:05',\n      motivo: 'Esqueci de registrar o ponto na entrada',\n      status: 'aprovado',\n      dataSolicitacao: '17/03/2025',\n      dataDecisao: '18/03/2025'\n    }, {\n      id: 4,\n      funcionarioId: 101,\n      funcionarioNome: 'João Silva',\n      data: '15/03/2025',\n      tipoRegistro: 'saída',\n      horaOriginal: '16:30',\n      horaCorreta: '17:00',\n      motivo: 'Ajuste incorreto de ponto',\n      status: 'rejeitado',\n      dataSolicitacao: '15/03/2025',\n      dataDecisao: '16/03/2025',\n      observacao: 'Sem evidências que comprovem o horário correto'\n    }];\n  });\n\n  // Estado para novas solicitações de ajuste manual\n  const [novaSolicitacao, setNovaSolicitacao] = useState({\n    funcionarioId: '',\n    funcionarioNome: '',\n    data: '',\n    tipoRegistro: 'entrada',\n    horaOriginal: '',\n    horaCorreta: '',\n    motivo: ''\n  });\n\n  // Estado para o modal de observações ao rejeitar\n  const [modalRejeitarAberto, setModalRejeitarAberto] = useState(false);\n  const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\n  const [observacaoRejeicao, setObservacaoRejeicao] = useState('');\n\n  // Estado para filtros\n  const [filtros, setFiltros] = useState({\n    status: '',\n    funcionario: '',\n    periodo: ''\n  });\n\n  // INÍCIO DAS NOVAS CORREÇÕES =========================================\n\n  // Função para obter todos os funcionários possíveis de todas as fontes\n  const getAllPossibleFuncionarios = () => {\n    try {\n      // 1. Obter do registeredUsers\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n      const funcionariosFromUsers = registeredUsers.map(user => ({\n        id: user.id,\n        nome: user.name || user.nome\n      }));\n\n      // 2. Obter do localStorage \"funcionarios\"\n      const storedFuncionarios = JSON.parse(localStorage.getItem('funcionarios') || '[]');\n\n      // 3. Obter do Context\n      const contextFuncionarios = funcionarios || [];\n\n      // 4. Obter do localFuncionarios\n      const localFuncs = localFuncionarios || [];\n\n      // 5. Criar um mapa para eliminar duplicatas por ID\n      const funcionariosMap = new Map();\n\n      // Adicionar de todas as fontes\n      [...funcionariosFromUsers, ...storedFuncionarios, ...contextFuncionarios, ...localFuncs].forEach(func => {\n        if (func && func.id) {\n          funcionariosMap.set(func.id, func);\n        }\n      });\n\n      // Converter de volta para array\n      return Array.from(funcionariosMap.values());\n    } catch (error) {\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\n      return [];\n    }\n  };\n\n  // Estado para armazenar essa lista consolidada\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\n\n  // useEffect para manter a lista atualizada\n  useEffect(() => {\n    const updateAllFuncionarios = () => {\n      const allPossible = getAllPossibleFuncionarios();\n      setAllFuncionarios(allPossible);\n      console.log('Lista completa de funcionários atualizada:', allPossible);\n    };\n\n    // Atualizar logo no início\n    updateAllFuncionarios();\n\n    // E a cada 2 segundos\n    const interval = setInterval(updateAllFuncionarios, 2000);\n    return () => clearInterval(interval);\n  }, [funcionarios, localFuncionarios]);\n\n  // Função atualizada para selecionar funcionário\n  const handleSelecionarFuncionario = e => {\n    const funcionarioId = parseInt(e.target.value);\n    if (funcionarioId) {\n      // Procurar em allFuncionarios em vez de mergedFuncionarios\n      const funcionarioSelecionado = allFuncionarios.find(f => f.id === funcionarioId);\n      if (funcionarioSelecionado) {\n        console.log(\"Funcionário selecionado:\", funcionarioSelecionado);\n        setNovaSolicitacao({\n          ...novaSolicitacao,\n          funcionarioId: funcionarioId,\n          funcionarioNome: funcionarioSelecionado.nome\n        });\n      } else {\n        console.warn(\"Funcionário não encontrado para ID:\", funcionarioId);\n      }\n    } else {\n      setNovaSolicitacao({\n        ...novaSolicitacao,\n        funcionarioId: '',\n        funcionarioNome: ''\n      });\n    }\n  };\n\n  // FIM DAS NOVAS CORREÇÕES ===========================================\n\n  // Verificação de autenticação e permissão\n  useEffect(() => {\n    // Se não estiver autenticado, redireciona para login\n    if (!userData || !userData.authenticated) {\n      navigate('/login');\n      return;\n    }\n\n    // Se não for admin, redireciona para dashboard\n    if (!userData.roles || !userData.roles.includes('ADMIN')) {\n      navigate('/dashboard');\n      return;\n    }\n\n    // Atualiza a lista de funcionários\n    refreshFuncionarios();\n\n    // Debug: verificar funcionários no Context\n    console.log(\"AjustesPontoTab - Lista de funcionários do Context:\", funcionarios);\n  }, [userData, navigate, refreshFuncionarios]);\n\n  // SOLUÇÃO 3: Obter dados diretamente do localStorage e sincronizar com o estado\n  useEffect(() => {\n    const getFuncionariosFromLocalStorage = () => {\n      try {\n        const stored = localStorage.getItem(FUNCIONARIOS_KEY);\n        return stored ? JSON.parse(stored) : [];\n      } catch (error) {\n        console.error(\"Erro ao ler funcionários do localStorage:\", error);\n        return [];\n      }\n    };\n    setLocalFuncionarios(getFuncionariosFromLocalStorage());\n\n    // Atualizar a cada 5 segundos\n    const interval = setInterval(() => {\n      setLocalFuncionarios(getFuncionariosFromLocalStorage());\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // SOLUÇÃO 4: Adicionar evento de armazenamento para sincronização entre abas\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === FUNCIONARIOS_KEY) {\n        setLocalFuncionarios(JSON.parse(e.newValue || '[]'));\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // SOLUÇÃO 5: Obter e mesclar todos os registros de funcionários de diferentes fontes\n  const getLatestFuncionarios = () => {\n    try {\n      // Verificar todos os registros possíveis\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n      const funcionariosStorage = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\n      const userStorage = JSON.parse(localStorage.getItem('user') || '{}');\n\n      // Extrair funcionários dos registros de usuário\n      const funcionariosFromUsers = registeredUsers.map(user => ({\n        id: user.id,\n        nome: user.name || user.nome\n      }));\n\n      // Mesclar todas as listas, eliminando duplicatas por ID\n      const allFuncionarios = [...funcionariosStorage];\n      funcionariosFromUsers.forEach(func => {\n        if (!allFuncionarios.some(f => f.id === func.id)) {\n          allFuncionarios.push(func);\n        }\n      });\n\n      // Adicionar o usuário atual se não estiver na lista\n      if (userStorage && userStorage.id && userStorage.name) {\n        if (!allFuncionarios.some(f => f.id === userStorage.id)) {\n          allFuncionarios.push({\n            id: userStorage.id,\n            nome: userStorage.name\n          });\n        }\n      }\n\n      // Atualizar localStorage e estado\n      localStorage.setItem(FUNCIONARIOS_KEY, JSON.stringify(allFuncionarios));\n      setLocalFuncionarios(allFuncionarios);\n      return allFuncionarios;\n    } catch (error) {\n      console.error(\"Erro ao buscar funcionários:\", error);\n      return [];\n    }\n  };\n\n  // Executar a solução 5 ao montar o componente e a cada 3 segundos\n  useEffect(() => {\n    getLatestFuncionarios();\n    const interval = setInterval(getLatestFuncionarios, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Usar a combinação de funcionários do Context e do localStorage\n  const mergedFuncionarios = localFuncionarios.length > funcionarios.length ? localFuncionarios : funcionarios;\n\n  // Atualizar a lista de funcionários ao montar o componente e periodicamente\n  useEffect(() => {\n    // Buscar a lista atualizada ao montar o componente\n    refreshFuncionarios();\n\n    // Verificar por atualizações a cada 15 segundos\n    const interval = setInterval(() => {\n      refreshFuncionarios();\n    }, 15000);\n\n    // Limpar o intervalo ao desmontar\n    return () => clearInterval(interval);\n  }, [refreshFuncionarios]);\n\n  // Verificar notificações de admin\n  useEffect(() => {\n    const checkAdminNotifications = () => {\n      const adminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\n      const unreadNotifications = adminNotifications.filter(n => !n.read && n.type === 'novoFuncionario');\n      if (unreadNotifications.length > 0) {\n        console.log(\"AjustesPontoTab - Notificações não lidas de novos funcionários:\", unreadNotifications);\n        // Marcar como lidas\n        const updatedNotifications = adminNotifications.map(n => {\n          if (n.type === 'novoFuncionario' && !n.read) {\n            return {\n              ...n,\n              read: true\n            };\n          }\n          return n;\n        });\n        localStorage.setItem('adminNotifications', JSON.stringify(updatedNotifications));\n\n        // Atualizar a lista de funcionários\n        refreshFuncionarios();\n        getLatestFuncionarios(); // Adicionando chamada ao método de atualização completa\n      }\n    };\n\n    // Verificar notificações ao montar e a cada 10 segundos\n    checkAdminNotifications();\n    const notifInterval = setInterval(checkAdminNotifications, 10000);\n    return () => clearInterval(notifInterval);\n  }, [refreshFuncionarios]);\n\n  // Guardar solicitações no localStorage quando mudar\n  useEffect(() => {\n    localStorage.setItem('ajustePontoSolicitacoes', JSON.stringify(solicitacoes));\n  }, [solicitacoes]);\n\n  // Filtrar solicitações\n  const solicitacoesFiltradas = solicitacoes.filter(solicitacao => {\n    const matchStatus = filtros.status === '' || solicitacao.status === filtros.status;\n    const matchFuncionario = filtros.funcionario === '' || solicitacao.funcionarioNome === filtros.funcionario;\n\n    // Implementação básica do filtro de período\n    let matchPeriodo = true;\n    if (filtros.periodo === 'hoje') {\n      matchPeriodo = solicitacao.data === new Date().toLocaleDateString('pt-BR');\n    } else if (filtros.periodo === 'semana') {\n      // Simplificação: apenas verificamos se a data da solicitação está nos últimos 7 dias\n      const hoje = new Date();\n      const dataLimite = new Date();\n      dataLimite.setDate(hoje.getDate() - 7);\n      const partesData = solicitacao.data.split('/');\n      const dataSolicitacao = new Date(parseInt(partesData[2]), parseInt(partesData[1]) - 1, parseInt(partesData[0]));\n      matchPeriodo = dataSolicitacao >= dataLimite;\n    }\n    return matchStatus && matchFuncionario && matchPeriodo;\n  });\n\n  // Ordenar solicitações por data (mais recentes primeiro)\n  const solicitacoesOrdenadas = [...solicitacoesFiltradas].sort((a, b) => {\n    // Converter datas do formato DD/MM/YYYY para objetos Date para comparação\n    const [diaA, mesA, anoA] = a.dataSolicitacao.split('/').map(Number);\n    const [diaB, mesB, anoB] = b.dataSolicitacao.split('/').map(Number);\n    const dateA = new Date(anoA, mesA - 1, diaA);\n    const dateB = new Date(anoB, mesB - 1, diaB);\n    return dateB - dateA; // Ordem decrescente (mais recente primeiro)\n  });\n\n  // Submeter nova solicitação de ajuste\n  const handleSubmitNovaSolicitacao = e => {\n    e.preventDefault();\n    if (!novaSolicitacao.funcionarioId || !novaSolicitacao.data || !novaSolicitacao.horaCorreta || !novaSolicitacao.motivo) {\n      alert('Por favor, preencha todos os campos obrigatórios.');\n      return;\n    }\n    const novaSolic = {\n      ...novaSolicitacao,\n      id: Date.now(),\n      status: 'aprovado',\n      // Já aprovado pois foi criado pelo admin\n      dataSolicitacao: new Date().toLocaleDateString('pt-BR'),\n      dataDecisao: new Date().toLocaleDateString('pt-BR')\n    };\n    setSolicitacoes([novaSolic, ...solicitacoes]);\n\n    // Resetar formulário\n    setNovaSolicitacao({\n      funcionarioId: '',\n      funcionarioNome: '',\n      data: '',\n      tipoRegistro: 'entrada',\n      horaOriginal: '',\n      horaCorreta: '',\n      motivo: ''\n    });\n\n    // Notificar funcionário sobre o ajuste\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    notificacoes.push({\n      id: Date.now(),\n      userId: novaSolic.funcionarioId,\n      message: `Seu registro de ponto do dia ${novaSolic.data} foi ajustado administrativamente.`,\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    });\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n\n    // Atualizar registro de ponto correspondente, se existir\n    const pontoRegistros = JSON.parse(localStorage.getItem('pontoRegistros') || '[]');\n    const registroCorrespondente = pontoRegistros.find(registro => registro.funcionarioId === novaSolic.funcionarioId && registro.data === novaSolic.data);\n    if (registroCorrespondente) {\n      // Determinar qual registro atualizar com base no tipo (entrada/saída) e momento do dia\n      let indiceRegistro = -1;\n      if (novaSolic.tipoRegistro === 'entrada') {\n        // Primeira ou segunda entrada\n        if (novaSolic.horaCorreta.split(':')[0] < '12') {\n          // Antes do meio-dia\n          indiceRegistro = 0; // Primeira entrada\n        } else {\n          indiceRegistro = 2; // Segunda entrada\n        }\n      } else {\n        // Primeira ou segunda saída\n        if (novaSolic.horaCorreta.split(':')[0] < '14') {\n          // Antes das 14h\n          indiceRegistro = 1; // Primeira saída\n        } else {\n          indiceRegistro = 3; // Segunda saída\n        }\n      }\n      if (indiceRegistro >= 0 && indiceRegistro < registroCorrespondente.registros.length) {\n        registroCorrespondente.registros[indiceRegistro].hora = novaSolic.horaCorreta;\n        registroCorrespondente.registros[indiceRegistro].status = 'ajustado';\n        localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\n      }\n    }\n    alert('Ajuste de ponto registrado com sucesso!');\n  };\n\n  // Aprovar solicitação\n  const aprovarSolicitacao = id => {\n    const solicitacao = solicitacoes.find(s => s.id === id);\n    if (!solicitacao || solicitacao.status !== 'pendente') return;\n    const solicitacoesAtualizadas = solicitacoes.map(s => {\n      if (s.id === id) {\n        return {\n          ...s,\n          status: 'aprovado',\n          dataDecisao: new Date().toLocaleDateString('pt-BR')\n        };\n      }\n      return s;\n    });\n    setSolicitacoes(solicitacoesAtualizadas);\n\n    // Notificar funcionário sobre aprovação\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    notificacoes.push({\n      id: Date.now(),\n      userId: solicitacao.funcionarioId,\n      message: `Sua solicitação de ajuste de ponto para ${solicitacao.data} foi aprovada.`,\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    });\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n\n    // Atualizar registro de ponto correspondente\n    const pontoRegistros = JSON.parse(localStorage.getItem('pontoRegistros') || '[]');\n    const registroCorrespondente = pontoRegistros.find(registro => registro.funcionarioId === solicitacao.funcionarioId && registro.data === solicitacao.data);\n    if (registroCorrespondente) {\n      // Lógica similar à inserção de nova solicitação\n      let indiceRegistro = -1;\n      if (solicitacao.tipoRegistro === 'entrada') {\n        if (solicitacao.horaCorreta.split(':')[0] < '12') {\n          indiceRegistro = 0;\n        } else {\n          indiceRegistro = 2;\n        }\n      } else {\n        if (solicitacao.horaCorreta.split(':')[0] < '14') {\n          indiceRegistro = 1;\n        } else {\n          indiceRegistro = 3;\n        }\n      }\n      if (indiceRegistro >= 0 && indiceRegistro < registroCorrespondente.registros.length) {\n        registroCorrespondente.registros[indiceRegistro].hora = solicitacao.horaCorreta;\n        registroCorrespondente.registros[indiceRegistro].status = 'ajustado';\n        localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\n      }\n    }\n    alert('Solicitação aprovada com sucesso!');\n  };\n\n  // Abrir modal para rejeitar solicitação\n  const abrirModalRejeitar = solicitacao => {\n    setSolicitacaoSelecionada(solicitacao);\n    setObservacaoRejeicao('');\n    setModalRejeitarAberto(true);\n  };\n\n  // Rejeitar solicitação\n  const rejeitarSolicitacao = () => {\n    if (!solicitacaoSelecionada) return;\n    const solicitacoesAtualizadas = solicitacoes.map(s => {\n      if (s.id === solicitacaoSelecionada.id) {\n        return {\n          ...s,\n          status: 'rejeitado',\n          dataDecisao: new Date().toLocaleDateString('pt-BR'),\n          observacao: observacaoRejeicao\n        };\n      }\n      return s;\n    });\n    setSolicitacoes(solicitacoesAtualizadas);\n\n    // Notificar funcionário sobre rejeição\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    notificacoes.push({\n      id: Date.now(),\n      userId: solicitacaoSelecionada.funcionarioId,\n      message: `Sua solicitação de ajuste de ponto para ${solicitacaoSelecionada.data} foi rejeitada.`,\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    });\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n\n    // Fechar modal\n    setModalRejeitarAberto(false);\n    setSolicitacaoSelecionada(null);\n    setObservacaoRejeicao('');\n    alert('Solicitação rejeitada.');\n  };\n\n  // Renderizar cor do status\n  const renderizarStatus = status => {\n    let corClasse = '';\n    switch (status) {\n      case 'pendente':\n        corClasse = 'bg-yellow-600';\n        break;\n      case 'aprovado':\n        corClasse = 'bg-green-600';\n        break;\n      case 'rejeitado':\n        corClasse = 'bg-red-600';\n        break;\n      default:\n        corClasse = 'bg-gray-600';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-block px-2 py-1 rounded-full text-xs ${corClasse}`,\n      children: status.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Se o usuário não estiver autenticado ou não for admin, não renderiza nada\n  if (!userData || !userData.authenticated || !userData.roles || !userData.roles.includes('ADMIN')) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Ajustes de Ponto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const latestFuncionarios = getLatestFuncionarios();\n          alert(`Lista atualizada! ${latestFuncionarios.length} funcionários encontrados.`);\n        },\n        className: \"bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded-md text-sm\",\n        children: [\"Atualizar Lista de Funcion\\xE1rios (\", allFuncionarios.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-purple-300 mt-1\",\n        children: [\"Lista atualizada em: \", new Date().toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.status,\n            onChange: e => setFiltros({\n              ...filtros,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pendente\",\n              children: \"Pendente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"aprovado\",\n              children: \"Aprovado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rejeitado\",\n              children: \"Rejeitado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Funcion\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.funcionario,\n            onChange: e => setFiltros({\n              ...filtros,\n              funcionario: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os funcion\\xE1rios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), [...new Set([...allFuncionarios.map(f => f.nome), ...solicitacoes.map(s => s.funcionarioNome)])].filter(Boolean).sort().map((nome, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: nome,\n              children: nome\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Per\\xEDodo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.periodo,\n            onChange: e => setFiltros({\n              ...filtros,\n              periodo: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os per\\xEDodos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hoje\",\n              children: \"Hoje\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"semana\",\n              children: \"\\xDAltimos 7 dias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mes\",\n              children: \"Este m\\xEAs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Registrar Ajuste de Ponto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitNovaSolicitacao,\n        className: \"bg-purple-900 bg-opacity-40 rounded-lg p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: [\"Funcion\\xE1rio * (\", allFuncionarios.length, \" dispon\\xEDveis)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: novaSolicitacao.funcionarioId,\n              onChange: handleSelecionarFuncionario,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this), allFuncionarios.map(funcionario => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: funcionario.id,\n                children: [funcionario.nome, \" \", funcionario.id ? `(ID: ${funcionario.id})` : '']\n              }, funcionario.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Data *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: novaSolicitacao.data,\n              onChange: e => setNovaSolicitacao({\n                ...novaSolicitacao,\n                data: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Tipo de Registro *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: novaSolicitacao.tipoRegistro,\n              onChange: e => setNovaSolicitacao({\n                ...novaSolicitacao,\n                tipoRegistro: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"entrada\",\n                children: \"Entrada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sa\\xEDda\",\n                children: \"Sa\\xEDda\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Hora Original\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: novaSolicitacao.horaOriginal,\n              onChange: e => setNovaSolicitacao({\n                ...novaSolicitacao,\n                horaOriginal: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-purple-300\",\n              children: \"Deixe em branco se n\\xE3o houver registro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Hora Correta *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: novaSolicitacao.horaCorreta,\n              onChange: e => setNovaSolicitacao({\n                ...novaSolicitacao,\n                horaCorreta: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Motivo *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: novaSolicitacao.motivo,\n              onChange: e => setNovaSolicitacao({\n                ...novaSolicitacao,\n                motivo: e.target.value\n              }),\n              required: true,\n              placeholder: \"Motivo do ajuste\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\",\n          children: \"Registrar Ajuste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Solicita\\xE7\\xF5es de Ajuste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"text-purple-300 text-sm border-b border-purple-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"Funcion\\xE1rio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"Original\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"Solicitado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"Motivo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2 text-left\",\n                children: \"A\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [solicitacoesOrdenadas.map(solicitacao => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-30\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: solicitacao.funcionarioNome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: solicitacao.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3 capitalize\",\n                children: solicitacao.tipoRegistro\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: solicitacao.horaOriginal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: solicitacao.horaCorreta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"truncate max-w-xs\",\n                  title: solicitacao.motivo,\n                  children: solicitacao.motivo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: renderizarStatus(solicitacao.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: solicitacao.status === 'pendente' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => aprovarSolicitacao(solicitacao.id),\n                    className: \"bg-green-600 hover:bg-green-700 text-white text-xs px-2 py-1 rounded\",\n                    children: \"Aprovar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => abrirModalRejeitar(solicitacao),\n                    className: \"bg-red-600 hover:bg-red-700 text-white text-xs px-2 py-1 rounded\",\n                    children: \"Rejeitar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 805,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: solicitacao.observacao && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-purple-300 mt-1\",\n                    title: solicitacao.observacao,\n                    children: solicitacao.observacao.length > 20 ? solicitacao.observacao.substring(0, 20) + '...' : solicitacao.observacao\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 19\n              }, this)]\n            }, solicitacao.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 17\n            }, this)), solicitacoesOrdenadas.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"8\",\n                className: \"px-4 py-6 text-center text-purple-300\",\n                children: \"Nenhuma solicita\\xE7\\xE3o encontrada com os filtros selecionados.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), \"Exportar Relat\\xF3rio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), \"Processar Todas as Pendentes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 7\n    }, this), modalRejeitarAberto && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-900 rounded-lg shadow-xl p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Rejeitar Solicita\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: [\"Voc\\xEA est\\xE1 rejeitando a solicita\\xE7\\xE3o de ajuste de ponto de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: solicitacaoSelecionada === null || solicitacaoSelecionada === void 0 ? void 0 : solicitacaoSelecionada.funcionarioNome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 72\n          }, this), \" para o dia \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: solicitacaoSelecionada === null || solicitacaoSelecionada === void 0 ? void 0 : solicitacaoSelecionada.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 142\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Motivo da rejei\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: observacaoRejeicao,\n            onChange: e => setObservacaoRejeicao(e.target.value),\n            rows: 3,\n            placeholder: \"Informe o motivo da rejei\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setModalRejeitarAberto(false),\n            className: \"bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rejeitarSolicitacao,\n            className: \"bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded\",\n            children: \"Rejeitar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 bg-purple-900 bg-opacity-40 p-4 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          className: \"cursor-pointer text-purple-300 hover:text-white\",\n          children: \"Dados de Funcion\\xE1rios para Debug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 overflow-auto max-h-64 text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300\",\n            children: [\"Funcion\\xE1rios do allFuncionarios (\", allFuncionarios.length, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(allFuncionarios, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300 mt-2\",\n            children: [\"Funcion\\xE1rios do Context (\", funcionarios.length, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(funcionarios, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300 mt-2\",\n            children: [\"Funcion\\xE1rios do localStorage (\", localFuncionarios.length, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(localFuncionarios, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300 mt-2\",\n            children: \"Registros de Usu\\xE1rios:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(JSON.parse(localStorage.getItem('registeredUsers') || '[]'), null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 605,\n    columnNumber: 5\n  }, this);\n};\n_s(AjustesPontoTab, \"TcDaNtt+bb5N/8koNzoet8X0uyM=\", false, function () {\n  return [useUser, useNavigate];\n});\n_c = AjustesPontoTab;\nexport default AjustesPontoTab;\nvar _c;\n$RefreshReg$(_c, \"AjustesPontoTab\");","map":{"version":3,"names":["React","useState","useEffect","useUser","useNavigate","jsxDEV","_jsxDEV","FUNCIONARIOS_KEY","AjustesPontoTab","_s","userData","funcionarios","refreshFuncionarios","updateCounter","navigate","localFuncionarios","setLocalFuncionarios","solicitacoes","setSolicitacoes","storedSolicitacoes","localStorage","getItem","JSON","parse","id","funcionarioId","funcionarioNome","data","tipoRegistro","horaOriginal","horaCorreta","motivo","status","dataSolicitacao","dataDecisao","observacao","novaSolicitacao","setNovaSolicitacao","modalRejeitarAberto","setModalRejeitarAberto","solicitacaoSelecionada","setSolicitacaoSelecionada","observacaoRejeicao","setObservacaoRejeicao","filtros","setFiltros","funcionario","periodo","getAllPossibleFuncionarios","registeredUsers","funcionariosFromUsers","map","user","nome","name","storedFuncionarios","contextFuncionarios","localFuncs","funcionariosMap","Map","forEach","func","set","Array","from","values","error","console","allFuncionarios","setAllFuncionarios","updateAllFuncionarios","allPossible","log","interval","setInterval","clearInterval","handleSelecionarFuncionario","e","parseInt","target","value","funcionarioSelecionado","find","f","warn","authenticated","roles","includes","getFuncionariosFromLocalStorage","stored","handleStorageChange","key","newValue","window","addEventListener","removeEventListener","getLatestFuncionarios","funcionariosStorage","userStorage","some","push","setItem","stringify","mergedFuncionarios","length","checkAdminNotifications","adminNotifications","unreadNotifications","filter","n","read","type","updatedNotifications","notifInterval","solicitacoesFiltradas","solicitacao","matchStatus","matchFuncionario","matchPeriodo","Date","toLocaleDateString","hoje","dataLimite","setDate","getDate","partesData","split","solicitacoesOrdenadas","sort","a","b","diaA","mesA","anoA","Number","diaB","mesB","anoB","dateA","dateB","handleSubmitNovaSolicitacao","preventDefault","alert","novaSolic","now","notificacoes","userId","message","date","pontoRegistros","registroCorrespondente","registro","indiceRegistro","registros","hora","aprovarSolicitacao","s","solicitacoesAtualizadas","abrirModalRejeitar","rejeitarSolicitacao","renderizarStatus","corClasse","className","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","onClick","latestFuncionarios","toLocaleTimeString","onChange","Set","Boolean","index","onSubmit","required","placeholder","title","substring","colSpan","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","rows","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/components/AjustesPontoTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useUser } from './UserContext'; // Importando o hook do contexto\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Constante para a chave do localStorage\r\nconst FUNCIONARIOS_KEY = 'funcionarios';\r\n\r\nconst AjustesPontoTab = () => {\r\n  // Usando o contexto para obter a lista de funcionários e dados do usuário\r\n  const { userData, funcionarios, refreshFuncionarios, updateCounter } = useUser();\r\n  const navigate = useNavigate();\r\n  \r\n  // Estado local para funcionários (backup caso o Context falhe)\r\n  const [localFuncionarios, setLocalFuncionarios] = useState([]);\r\n  \r\n  // Estado para as solicitações de ajuste\r\n  const [solicitacoes, setSolicitacoes] = useState(() => {\r\n    const storedSolicitacoes = localStorage.getItem('ajustePontoSolicitacoes');\r\n    return storedSolicitacoes ? JSON.parse(storedSolicitacoes) : [\r\n      { \r\n        id: 1, \r\n        funcionarioId: 102, \r\n        funcionarioNome: 'Maria Oliveira', \r\n        data: '19/03/2025', \r\n        tipoRegistro: 'entrada',\r\n        horaOriginal: '08:15',\r\n        horaCorreta: '08:00',\r\n        motivo: 'Problema no sistema de ponto',\r\n        status: 'pendente',\r\n        dataSolicitacao: '19/03/2025'\r\n      },\r\n      { \r\n        id: 2, \r\n        funcionarioId: 103, \r\n        funcionarioNome: 'Carlos Pereira', \r\n        data: '18/03/2025', \r\n        tipoRegistro: 'saída',\r\n        horaOriginal: '17:45',\r\n        horaCorreta: '18:30',\r\n        motivo: 'Reunião que se estendeu além do horário',\r\n        status: 'pendente',\r\n        dataSolicitacao: '18/03/2025'\r\n      },\r\n      { \r\n        id: 3, \r\n        funcionarioId: 104, \r\n        funcionarioNome: 'Ana Souza', \r\n        data: '17/03/2025', \r\n        tipoRegistro: 'entrada',\r\n        horaOriginal: '--:--',\r\n        horaCorreta: '08:05',\r\n        motivo: 'Esqueci de registrar o ponto na entrada',\r\n        status: 'aprovado',\r\n        dataSolicitacao: '17/03/2025',\r\n        dataDecisao: '18/03/2025'\r\n      },\r\n      { \r\n        id: 4, \r\n        funcionarioId: 101, \r\n        funcionarioNome: 'João Silva', \r\n        data: '15/03/2025', \r\n        tipoRegistro: 'saída',\r\n        horaOriginal: '16:30',\r\n        horaCorreta: '17:00',\r\n        motivo: 'Ajuste incorreto de ponto',\r\n        status: 'rejeitado',\r\n        dataSolicitacao: '15/03/2025',\r\n        dataDecisao: '16/03/2025',\r\n        observacao: 'Sem evidências que comprovem o horário correto'\r\n      }\r\n    ];\r\n  });\r\n  \r\n  // Estado para novas solicitações de ajuste manual\r\n  const [novaSolicitacao, setNovaSolicitacao] = useState({\r\n    funcionarioId: '',\r\n    funcionarioNome: '',\r\n    data: '',\r\n    tipoRegistro: 'entrada',\r\n    horaOriginal: '',\r\n    horaCorreta: '',\r\n    motivo: ''\r\n  });\r\n  \r\n  // Estado para o modal de observações ao rejeitar\r\n  const [modalRejeitarAberto, setModalRejeitarAberto] = useState(false);\r\n  const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\r\n  const [observacaoRejeicao, setObservacaoRejeicao] = useState('');\r\n  \r\n  // Estado para filtros\r\n  const [filtros, setFiltros] = useState({\r\n    status: '',\r\n    funcionario: '',\r\n    periodo: ''\r\n  });\r\n\r\n  // INÍCIO DAS NOVAS CORREÇÕES =========================================\r\n  \r\n  // Função para obter todos os funcionários possíveis de todas as fontes\r\n  const getAllPossibleFuncionarios = () => {\r\n    try {\r\n      // 1. Obter do registeredUsers\r\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n      const funcionariosFromUsers = registeredUsers.map(user => ({\r\n        id: user.id,\r\n        nome: user.name || user.nome\r\n      }));\r\n      \r\n      // 2. Obter do localStorage \"funcionarios\"\r\n      const storedFuncionarios = JSON.parse(localStorage.getItem('funcionarios') || '[]');\r\n      \r\n      // 3. Obter do Context\r\n      const contextFuncionarios = funcionarios || [];\r\n      \r\n      // 4. Obter do localFuncionarios\r\n      const localFuncs = localFuncionarios || [];\r\n      \r\n      // 5. Criar um mapa para eliminar duplicatas por ID\r\n      const funcionariosMap = new Map();\r\n      \r\n      // Adicionar de todas as fontes\r\n      [\r\n        ...funcionariosFromUsers, \r\n        ...storedFuncionarios, \r\n        ...contextFuncionarios, \r\n        ...localFuncs\r\n      ].forEach(func => {\r\n        if (func && func.id) {\r\n          funcionariosMap.set(func.id, func);\r\n        }\r\n      });\r\n      \r\n      // Converter de volta para array\r\n      return Array.from(funcionariosMap.values());\r\n    } catch (error) {\r\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Estado para armazenar essa lista consolidada\r\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\r\n\r\n  // useEffect para manter a lista atualizada\r\n  useEffect(() => {\r\n    const updateAllFuncionarios = () => {\r\n      const allPossible = getAllPossibleFuncionarios();\r\n      setAllFuncionarios(allPossible);\r\n      console.log('Lista completa de funcionários atualizada:', allPossible);\r\n    };\r\n    \r\n    // Atualizar logo no início\r\n    updateAllFuncionarios();\r\n    \r\n    // E a cada 2 segundos\r\n    const interval = setInterval(updateAllFuncionarios, 2000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [funcionarios, localFuncionarios]);\r\n  \r\n  // Função atualizada para selecionar funcionário\r\n  const handleSelecionarFuncionario = (e) => {\r\n    const funcionarioId = parseInt(e.target.value);\r\n    if (funcionarioId) {\r\n      // Procurar em allFuncionarios em vez de mergedFuncionarios\r\n      const funcionarioSelecionado = allFuncionarios.find(f => f.id === funcionarioId);\r\n      if (funcionarioSelecionado) {\r\n        console.log(\"Funcionário selecionado:\", funcionarioSelecionado);\r\n        setNovaSolicitacao({\r\n          ...novaSolicitacao,\r\n          funcionarioId: funcionarioId,\r\n          funcionarioNome: funcionarioSelecionado.nome\r\n        });\r\n      } else {\r\n        console.warn(\"Funcionário não encontrado para ID:\", funcionarioId);\r\n      }\r\n    } else {\r\n      setNovaSolicitacao({\r\n        ...novaSolicitacao,\r\n        funcionarioId: '',\r\n        funcionarioNome: ''\r\n      });\r\n    }\r\n  };\r\n  \r\n  // FIM DAS NOVAS CORREÇÕES ===========================================\r\n  \r\n  // Verificação de autenticação e permissão\r\n  useEffect(() => {\r\n    // Se não estiver autenticado, redireciona para login\r\n    if (!userData || !userData.authenticated) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    // Se não for admin, redireciona para dashboard\r\n    if (!userData.roles || !userData.roles.includes('ADMIN')) {\r\n      navigate('/dashboard');\r\n      return;\r\n    }\r\n    \r\n    // Atualiza a lista de funcionários\r\n    refreshFuncionarios();\r\n    \r\n    // Debug: verificar funcionários no Context\r\n    console.log(\"AjustesPontoTab - Lista de funcionários do Context:\", funcionarios);\r\n  }, [userData, navigate, refreshFuncionarios]);\r\n  \r\n  // SOLUÇÃO 3: Obter dados diretamente do localStorage e sincronizar com o estado\r\n  useEffect(() => {\r\n    const getFuncionariosFromLocalStorage = () => {\r\n      try {\r\n        const stored = localStorage.getItem(FUNCIONARIOS_KEY);\r\n        return stored ? JSON.parse(stored) : [];\r\n      } catch (error) {\r\n        console.error(\"Erro ao ler funcionários do localStorage:\", error);\r\n        return [];\r\n      }\r\n    };\r\n    \r\n    setLocalFuncionarios(getFuncionariosFromLocalStorage());\r\n    \r\n    // Atualizar a cada 5 segundos\r\n    const interval = setInterval(() => {\r\n      setLocalFuncionarios(getFuncionariosFromLocalStorage());\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  \r\n  // SOLUÇÃO 4: Adicionar evento de armazenamento para sincronização entre abas\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === FUNCIONARIOS_KEY) {\r\n        setLocalFuncionarios(JSON.parse(e.newValue || '[]'));\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n  \r\n  // SOLUÇÃO 5: Obter e mesclar todos os registros de funcionários de diferentes fontes\r\n  const getLatestFuncionarios = () => {\r\n    try {\r\n      // Verificar todos os registros possíveis\r\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n      const funcionariosStorage = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\r\n      const userStorage = JSON.parse(localStorage.getItem('user') || '{}');\r\n      \r\n      // Extrair funcionários dos registros de usuário\r\n      const funcionariosFromUsers = registeredUsers.map(user => ({\r\n        id: user.id,\r\n        nome: user.name || user.nome\r\n      }));\r\n      \r\n      // Mesclar todas as listas, eliminando duplicatas por ID\r\n      const allFuncionarios = [...funcionariosStorage];\r\n      \r\n      funcionariosFromUsers.forEach(func => {\r\n        if (!allFuncionarios.some(f => f.id === func.id)) {\r\n          allFuncionarios.push(func);\r\n        }\r\n      });\r\n      \r\n      // Adicionar o usuário atual se não estiver na lista\r\n      if (userStorage && userStorage.id && userStorage.name) {\r\n        if (!allFuncionarios.some(f => f.id === userStorage.id)) {\r\n          allFuncionarios.push({\r\n            id: userStorage.id,\r\n            nome: userStorage.name\r\n          });\r\n        }\r\n      }\r\n      \r\n      // Atualizar localStorage e estado\r\n      localStorage.setItem(FUNCIONARIOS_KEY, JSON.stringify(allFuncionarios));\r\n      setLocalFuncionarios(allFuncionarios);\r\n      \r\n      return allFuncionarios;\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar funcionários:\", error);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  // Executar a solução 5 ao montar o componente e a cada 3 segundos\r\n  useEffect(() => {\r\n    getLatestFuncionarios();\r\n    const interval = setInterval(getLatestFuncionarios, 3000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  \r\n  // Usar a combinação de funcionários do Context e do localStorage\r\n  const mergedFuncionarios = localFuncionarios.length > funcionarios.length ? \r\n    localFuncionarios : funcionarios;\r\n  \r\n  // Atualizar a lista de funcionários ao montar o componente e periodicamente\r\n  useEffect(() => {\r\n    // Buscar a lista atualizada ao montar o componente\r\n    refreshFuncionarios();\r\n    \r\n    // Verificar por atualizações a cada 15 segundos\r\n    const interval = setInterval(() => {\r\n      refreshFuncionarios();\r\n    }, 15000);\r\n    \r\n    // Limpar o intervalo ao desmontar\r\n    return () => clearInterval(interval);\r\n  }, [refreshFuncionarios]);\r\n  \r\n  // Verificar notificações de admin\r\n  useEffect(() => {\r\n    const checkAdminNotifications = () => {\r\n      const adminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\r\n      const unreadNotifications = adminNotifications.filter(n => !n.read && n.type === 'novoFuncionario');\r\n      \r\n      if (unreadNotifications.length > 0) {\r\n        console.log(\"AjustesPontoTab - Notificações não lidas de novos funcionários:\", unreadNotifications);\r\n        // Marcar como lidas\r\n        const updatedNotifications = adminNotifications.map(n => {\r\n          if (n.type === 'novoFuncionario' && !n.read) {\r\n            return { ...n, read: true };\r\n          }\r\n          return n;\r\n        });\r\n        \r\n        localStorage.setItem('adminNotifications', JSON.stringify(updatedNotifications));\r\n        \r\n        // Atualizar a lista de funcionários\r\n        refreshFuncionarios();\r\n        getLatestFuncionarios(); // Adicionando chamada ao método de atualização completa\r\n      }\r\n    };\r\n    \r\n    // Verificar notificações ao montar e a cada 10 segundos\r\n    checkAdminNotifications();\r\n    const notifInterval = setInterval(checkAdminNotifications, 10000);\r\n    \r\n    return () => clearInterval(notifInterval);\r\n  }, [refreshFuncionarios]);\r\n  \r\n  // Guardar solicitações no localStorage quando mudar\r\n  useEffect(() => {\r\n    localStorage.setItem('ajustePontoSolicitacoes', JSON.stringify(solicitacoes));\r\n  }, [solicitacoes]);\r\n  \r\n  // Filtrar solicitações\r\n  const solicitacoesFiltradas = solicitacoes.filter(solicitacao => {\r\n    const matchStatus = filtros.status === '' || solicitacao.status === filtros.status;\r\n    const matchFuncionario = filtros.funcionario === '' || solicitacao.funcionarioNome === filtros.funcionario;\r\n    \r\n    // Implementação básica do filtro de período\r\n    let matchPeriodo = true;\r\n    if (filtros.periodo === 'hoje') {\r\n      matchPeriodo = solicitacao.data === new Date().toLocaleDateString('pt-BR');\r\n    } else if (filtros.periodo === 'semana') {\r\n      // Simplificação: apenas verificamos se a data da solicitação está nos últimos 7 dias\r\n      const hoje = new Date();\r\n      const dataLimite = new Date();\r\n      dataLimite.setDate(hoje.getDate() - 7);\r\n      \r\n      const partesData = solicitacao.data.split('/');\r\n      const dataSolicitacao = new Date(\r\n        parseInt(partesData[2]), \r\n        parseInt(partesData[1]) - 1, \r\n        parseInt(partesData[0])\r\n      );\r\n      \r\n      matchPeriodo = dataSolicitacao >= dataLimite;\r\n    }\r\n    \r\n    return matchStatus && matchFuncionario && matchPeriodo;\r\n  });\r\n  \r\n  // Ordenar solicitações por data (mais recentes primeiro)\r\n  const solicitacoesOrdenadas = [...solicitacoesFiltradas].sort((a, b) => {\r\n    // Converter datas do formato DD/MM/YYYY para objetos Date para comparação\r\n    const [diaA, mesA, anoA] = a.dataSolicitacao.split('/').map(Number);\r\n    const [diaB, mesB, anoB] = b.dataSolicitacao.split('/').map(Number);\r\n    \r\n    const dateA = new Date(anoA, mesA - 1, diaA);\r\n    const dateB = new Date(anoB, mesB - 1, diaB);\r\n    \r\n    return dateB - dateA; // Ordem decrescente (mais recente primeiro)\r\n  });\r\n  \r\n  // Submeter nova solicitação de ajuste\r\n  const handleSubmitNovaSolicitacao = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!novaSolicitacao.funcionarioId || !novaSolicitacao.data || !novaSolicitacao.horaCorreta || !novaSolicitacao.motivo) {\r\n      alert('Por favor, preencha todos os campos obrigatórios.');\r\n      return;\r\n    }\r\n    \r\n    const novaSolic = {\r\n      ...novaSolicitacao,\r\n      id: Date.now(),\r\n      status: 'aprovado', // Já aprovado pois foi criado pelo admin\r\n      dataSolicitacao: new Date().toLocaleDateString('pt-BR'),\r\n      dataDecisao: new Date().toLocaleDateString('pt-BR')\r\n    };\r\n    \r\n    setSolicitacoes([novaSolic, ...solicitacoes]);\r\n    \r\n    // Resetar formulário\r\n    setNovaSolicitacao({\r\n      funcionarioId: '',\r\n      funcionarioNome: '',\r\n      data: '',\r\n      tipoRegistro: 'entrada',\r\n      horaOriginal: '',\r\n      horaCorreta: '',\r\n      motivo: ''\r\n    });\r\n    \r\n    // Notificar funcionário sobre o ajuste\r\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    notificacoes.push({\r\n      id: Date.now(),\r\n      userId: novaSolic.funcionarioId,\r\n      message: `Seu registro de ponto do dia ${novaSolic.data} foi ajustado administrativamente.`,\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    });\r\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n    \r\n    // Atualizar registro de ponto correspondente, se existir\r\n    const pontoRegistros = JSON.parse(localStorage.getItem('pontoRegistros') || '[]');\r\n    const registroCorrespondente = pontoRegistros.find(\r\n      registro => registro.funcionarioId === novaSolic.funcionarioId && registro.data === novaSolic.data\r\n    );\r\n    \r\n    if (registroCorrespondente) {\r\n      // Determinar qual registro atualizar com base no tipo (entrada/saída) e momento do dia\r\n      let indiceRegistro = -1;\r\n      if (novaSolic.tipoRegistro === 'entrada') {\r\n        // Primeira ou segunda entrada\r\n        if (novaSolic.horaCorreta.split(':')[0] < '12') { // Antes do meio-dia\r\n          indiceRegistro = 0; // Primeira entrada\r\n        } else {\r\n          indiceRegistro = 2; // Segunda entrada\r\n        }\r\n      } else {\r\n        // Primeira ou segunda saída\r\n        if (novaSolic.horaCorreta.split(':')[0] < '14') { // Antes das 14h\r\n          indiceRegistro = 1; // Primeira saída\r\n        } else {\r\n          indiceRegistro = 3; // Segunda saída\r\n        }\r\n      }\r\n      \r\n      if (indiceRegistro >= 0 && indiceRegistro < registroCorrespondente.registros.length) {\r\n        registroCorrespondente.registros[indiceRegistro].hora = novaSolic.horaCorreta;\r\n        registroCorrespondente.registros[indiceRegistro].status = 'ajustado';\r\n        \r\n        localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\r\n      }\r\n    }\r\n    \r\n    alert('Ajuste de ponto registrado com sucesso!');\r\n  };\r\n  \r\n  // Aprovar solicitação\r\n  const aprovarSolicitacao = (id) => {\r\n    const solicitacao = solicitacoes.find(s => s.id === id);\r\n    \r\n    if (!solicitacao || solicitacao.status !== 'pendente') return;\r\n    \r\n    const solicitacoesAtualizadas = solicitacoes.map(s => {\r\n      if (s.id === id) {\r\n        return {\r\n          ...s,\r\n          status: 'aprovado',\r\n          dataDecisao: new Date().toLocaleDateString('pt-BR')\r\n        };\r\n      }\r\n      return s;\r\n    });\r\n    \r\n    setSolicitacoes(solicitacoesAtualizadas);\r\n    \r\n    // Notificar funcionário sobre aprovação\r\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    notificacoes.push({\r\n      id: Date.now(),\r\n      userId: solicitacao.funcionarioId,\r\n      message: `Sua solicitação de ajuste de ponto para ${solicitacao.data} foi aprovada.`,\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    });\r\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n    \r\n    // Atualizar registro de ponto correspondente\r\n    const pontoRegistros = JSON.parse(localStorage.getItem('pontoRegistros') || '[]');\r\n    const registroCorrespondente = pontoRegistros.find(\r\n      registro => registro.funcionarioId === solicitacao.funcionarioId && registro.data === solicitacao.data\r\n    );\r\n    \r\n    if (registroCorrespondente) {\r\n      // Lógica similar à inserção de nova solicitação\r\n      let indiceRegistro = -1;\r\n      if (solicitacao.tipoRegistro === 'entrada') {\r\n        if (solicitacao.horaCorreta.split(':')[0] < '12') {\r\n          indiceRegistro = 0;\r\n        } else {\r\n          indiceRegistro = 2;\r\n        }\r\n      } else {\r\n        if (solicitacao.horaCorreta.split(':')[0] < '14') {\r\n          indiceRegistro = 1;\r\n        } else {\r\n          indiceRegistro = 3;\r\n        }\r\n      }\r\n      \r\n      if (indiceRegistro >= 0 && indiceRegistro < registroCorrespondente.registros.length) {\r\n        registroCorrespondente.registros[indiceRegistro].hora = solicitacao.horaCorreta;\r\n        registroCorrespondente.registros[indiceRegistro].status = 'ajustado';\r\n        \r\n        localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\r\n      }\r\n    }\r\n    \r\n    alert('Solicitação aprovada com sucesso!');\r\n  };\r\n  \r\n  // Abrir modal para rejeitar solicitação\r\n  const abrirModalRejeitar = (solicitacao) => {\r\n    setSolicitacaoSelecionada(solicitacao);\r\n    setObservacaoRejeicao('');\r\n    setModalRejeitarAberto(true);\r\n  };\r\n  \r\n  // Rejeitar solicitação\r\n  const rejeitarSolicitacao = () => {\r\n    if (!solicitacaoSelecionada) return;\r\n    \r\n    const solicitacoesAtualizadas = solicitacoes.map(s => {\r\n      if (s.id === solicitacaoSelecionada.id) {\r\n        return {\r\n          ...s,\r\n          status: 'rejeitado',\r\n          dataDecisao: new Date().toLocaleDateString('pt-BR'),\r\n          observacao: observacaoRejeicao\r\n        };\r\n      }\r\n      return s;\r\n    });\r\n    \r\n    setSolicitacoes(solicitacoesAtualizadas);\r\n    \r\n    // Notificar funcionário sobre rejeição\r\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    notificacoes.push({\r\n      id: Date.now(),\r\n      userId: solicitacaoSelecionada.funcionarioId,\r\n      message: `Sua solicitação de ajuste de ponto para ${solicitacaoSelecionada.data} foi rejeitada.`,\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    });\r\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n    \r\n    // Fechar modal\r\n    setModalRejeitarAberto(false);\r\n    setSolicitacaoSelecionada(null);\r\n    setObservacaoRejeicao('');\r\n    \r\n    alert('Solicitação rejeitada.');\r\n  };\r\n  \r\n  // Renderizar cor do status\r\n  const renderizarStatus = (status) => {\r\n    let corClasse = '';\r\n    \r\n    switch(status) {\r\n      case 'pendente':\r\n        corClasse = 'bg-yellow-600';\r\n        break;\r\n      case 'aprovado':\r\n        corClasse = 'bg-green-600';\r\n        break;\r\n      case 'rejeitado':\r\n        corClasse = 'bg-red-600';\r\n        break;\r\n      default:\r\n        corClasse = 'bg-gray-600';\r\n    }\r\n    \r\n    return (\r\n      <span className={`inline-block px-2 py-1 rounded-full text-xs ${corClasse}`}>\r\n        {status.toUpperCase()}\r\n      </span>\r\n    );\r\n  };\r\n  \r\n  // Se o usuário não estiver autenticado ou não for admin, não renderiza nada\r\n  if (!userData || !userData.authenticated || !userData.roles || !userData.roles.includes('ADMIN')) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Ajustes de Ponto</h1>\r\n      \r\n      {/* Botão para forçar atualização da lista */}\r\n      <div className=\"mb-4\">\r\n        <button \r\n          onClick={() => {\r\n            const latestFuncionarios = getLatestFuncionarios();\r\n            alert(`Lista atualizada! ${latestFuncionarios.length} funcionários encontrados.`);\r\n          }}\r\n          className=\"bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded-md text-sm\"\r\n        >\r\n          Atualizar Lista de Funcionários ({allFuncionarios.length})\r\n        </button>\r\n        <div className=\"text-xs text-purple-300 mt-1\">\r\n          Lista atualizada em: {new Date().toLocaleTimeString()}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Filtros */}\r\n      <div className=\"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Filtros</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Status</label>\r\n            <select \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.status}\r\n              onChange={(e) => setFiltros({...filtros, status: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os status</option>\r\n              <option value=\"pendente\">Pendente</option>\r\n              <option value=\"aprovado\">Aprovado</option>\r\n              <option value=\"rejeitado\">Rejeitado</option>\r\n            </select>\r\n          </div>\r\n          \r\n          {/* PRIMEIRA CAIXA DE SELEÇÃO (CORRIGIDA) */}\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Funcionário</label>\r\n            <select \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.funcionario}\r\n              onChange={(e) => setFiltros({...filtros, funcionario: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os funcionários</option>\r\n              {/* Usar todos os nomes de funcionários possíveis */}\r\n              {[...new Set([\r\n                ...allFuncionarios.map(f => f.nome),\r\n                ...solicitacoes.map(s => s.funcionarioNome)\r\n              ])].filter(Boolean).sort().map((nome, index) => (\r\n                <option key={index} value={nome}>{nome}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Período</label>\r\n            <select \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.periodo}\r\n              onChange={(e) => setFiltros({...filtros, periodo: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os períodos</option>\r\n              <option value=\"hoje\">Hoje</option>\r\n              <option value=\"semana\">Últimos 7 dias</option>\r\n              <option value=\"mes\">Este mês</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Nova Solicitação de Ajuste */}\r\n      <div className=\"mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Registrar Ajuste de Ponto</h2>\r\n        <form onSubmit={handleSubmitNovaSolicitacao} className=\"bg-purple-900 bg-opacity-40 rounded-lg p-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\">\r\n            {/* SEGUNDA CAIXA DE SELEÇÃO (CORRIGIDA) */}\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">\r\n                Funcionário * ({allFuncionarios.length} disponíveis)\r\n              </label>\r\n              <select \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={novaSolicitacao.funcionarioId}\r\n                onChange={handleSelecionarFuncionario}\r\n                required\r\n              >\r\n                <option value=\"\">Selecione</option>\r\n                {allFuncionarios.map(funcionario => (\r\n                  <option key={funcionario.id} value={funcionario.id}>\r\n                    {funcionario.nome} {funcionario.id ? `(ID: ${funcionario.id})` : ''}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Data *</label>\r\n              <input \r\n                type=\"date\" \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={novaSolicitacao.data}\r\n                onChange={(e) => setNovaSolicitacao({...novaSolicitacao, data: e.target.value})}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Tipo de Registro *</label>\r\n              <select \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={novaSolicitacao.tipoRegistro}\r\n                onChange={(e) => setNovaSolicitacao({...novaSolicitacao, tipoRegistro: e.target.value})}\r\n                required\r\n              >\r\n                <option value=\"entrada\">Entrada</option>\r\n                <option value=\"saída\">Saída</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Hora Original</label>\r\n              <input \r\n                type=\"time\" \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={novaSolicitacao.horaOriginal}\r\n                onChange={(e) => setNovaSolicitacao({...novaSolicitacao, horaOriginal: e.target.value})}\r\n              />\r\n              <small className=\"text-purple-300\">Deixe em branco se não houver registro</small>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Hora Correta *</label>\r\n              <input \r\n                type=\"time\" \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={novaSolicitacao.horaCorreta}\r\n                onChange={(e) => setNovaSolicitacao({...novaSolicitacao, horaCorreta: e.target.value})}\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Motivo *</label>\r\n              <input \r\n                type=\"text\" \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={novaSolicitacao.motivo}\r\n                onChange={(e) => setNovaSolicitacao({...novaSolicitacao, motivo: e.target.value})}\r\n                required\r\n                placeholder=\"Motivo do ajuste\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button \r\n            type=\"submit\"\r\n            className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\r\n          >\r\n            Registrar Ajuste\r\n          </button>\r\n        </form>\r\n      </div>\r\n      \r\n      {/* Tabela de Solicitações */}\r\n      <div>\r\n        <h2 className=\"text-xl font-semibold mb-4\">Solicitações de Ajuste</h2>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead>\r\n              <tr className=\"text-purple-300 text-sm border-b border-purple-700\">\r\n                <th className=\"px-4 py-2 text-left\">Funcionário</th>\r\n                <th className=\"px-4 py-2 text-left\">Data</th>\r\n                <th className=\"px-4 py-2 text-left\">Tipo</th>\r\n                <th className=\"px-4 py-2 text-left\">Original</th>\r\n                <th className=\"px-4 py-2 text-left\">Solicitado</th>\r\n                <th className=\"px-4 py-2 text-left\">Motivo</th>\r\n                <th className=\"px-4 py-2 text-left\">Status</th>\r\n                <th className=\"px-4 py-2 text-left\">Ações</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {solicitacoesOrdenadas.map((solicitacao) => (\r\n                <tr key={solicitacao.id} className=\"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-30\">\r\n                  <td className=\"px-4 py-3\">{solicitacao.funcionarioNome}</td>\r\n                  <td className=\"px-4 py-3\">{solicitacao.data}</td>\r\n                  <td className=\"px-4 py-3 capitalize\">{solicitacao.tipoRegistro}</td>\r\n                  <td className=\"px-4 py-3\">{solicitacao.horaOriginal}</td>\r\n                  <td className=\"px-4 py-3\">{solicitacao.horaCorreta}</td>\r\n                  <td className=\"px-4 py-3\">\r\n                    <div className=\"truncate max-w-xs\" title={solicitacao.motivo}>\r\n                      {solicitacao.motivo}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-4 py-3\">{renderizarStatus(solicitacao.status)}</td>\r\n                  <td className=\"px-4 py-3\">\r\n                    {solicitacao.status === 'pendente' ? (\r\n                      <div className=\"flex space-x-2\">\r\n                        <button \r\n                          onClick={() => aprovarSolicitacao(solicitacao.id)}\r\n                          className=\"bg-green-600 hover:bg-green-700 text-white text-xs px-2 py-1 rounded\"\r\n                        >\r\n                          Aprovar\r\n                        </button>\r\n                        <button \r\n                          onClick={() => abrirModalRejeitar(solicitacao)}\r\n                          className=\"bg-red-600 hover:bg-red-700 text-white text-xs px-2 py-1 rounded\"\r\n                        >\r\n                          Rejeitar\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        {solicitacao.observacao && (\r\n                          <div className=\"text-xs text-purple-300 mt-1\" title={solicitacao.observacao}>\r\n                            {solicitacao.observacao.length > 20 \r\n                              ? solicitacao.observacao.substring(0, 20) + '...' \r\n                              : solicitacao.observacao\r\n                            }\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              \r\n              {solicitacoesOrdenadas.length === 0 && (\r\n                <tr>\r\n                  <td colSpan=\"8\" className=\"px-4 py-6 text-center text-purple-300\">\r\n                    Nenhuma solicitação encontrada com os filtros selecionados.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Botões de ação */}\r\n      <div className=\"mt-6 flex flex-wrap gap-4\">\r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n          </svg>\r\n          Exportar Relatório\r\n        </button>\r\n        \r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n          </svg>\r\n          Processar Todas as Pendentes\r\n        </button>\r\n      </div>\r\n      \r\n      {/* Modal de Rejeição */}\r\n      {modalRejeitarAberto && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-purple-900 rounded-lg shadow-xl p-6 w-full max-w-md\">\r\n            <h3 className=\"text-xl font-bold mb-4\">Rejeitar Solicitação</h3>\r\n            <p className=\"mb-4\">\r\n              Você está rejeitando a solicitação de ajuste de ponto de <strong>{solicitacaoSelecionada?.funcionarioNome}</strong> para o dia <strong>{solicitacaoSelecionada?.data}</strong>.\r\n            </p>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Motivo da rejeição</label>\r\n              <textarea \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={observacaoRejeicao}\r\n                onChange={(e) => setObservacaoRejeicao(e.target.value)}\r\n                rows={3}\r\n                placeholder=\"Informe o motivo da rejeição\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button \r\n                onClick={() => setModalRejeitarAberto(false)}\r\n                className=\"bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button \r\n                onClick={rejeitarSolicitacao}\r\n                className=\"bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded\"\r\n              >\r\n                Rejeitar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Debug: Visualizar dados de funcionários */}\r\n      <div className=\"mt-6 bg-purple-900 bg-opacity-40 p-4 rounded-lg\">\r\n        <details>\r\n          <summary className=\"cursor-pointer text-purple-300 hover:text-white\">Dados de Funcionários para Debug</summary>\r\n          <div className=\"mt-2 overflow-auto max-h-64 text-xs\">\r\n            <h4 className=\"font-bold text-purple-300\">Funcionários do allFuncionarios ({allFuncionarios.length}):</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(allFuncionarios, null, 2)}\r\n            </pre>\r\n            \r\n            <h4 className=\"font-bold text-purple-300 mt-2\">Funcionários do Context ({funcionarios.length}):</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(funcionarios, null, 2)}\r\n            </pre>\r\n            \r\n            <h4 className=\"font-bold text-purple-300 mt-2\">Funcionários do localStorage ({localFuncionarios.length}):</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(localFuncionarios, null, 2)}\r\n            </pre>\r\n            \r\n            <h4 className=\"font-bold text-purple-300 mt-2\">Registros de Usuários:</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(JSON.parse(localStorage.getItem('registeredUsers') || '[]'), null, 2)}\r\n            </pre>\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AjustesPontoTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}