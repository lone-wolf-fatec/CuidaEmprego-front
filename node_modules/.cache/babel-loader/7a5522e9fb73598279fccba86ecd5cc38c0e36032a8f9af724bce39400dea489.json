{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Criação do contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\n// Provider que encapsula a aplicação\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  // Estado para armazenar todos os usuários\n  const [users, setUsers] = useState([]);\n  // Estado para o usuário atual logado\n  const [currentUser, setCurrentUser] = useState(null);\n  // Estado para rastrear carregamento\n  const [loading, setLoading] = useState(true);\n\n  // Efeito para carregar usuários do localStorage\n  useEffect(() => {\n    const fetchUsers = () => {\n      setLoading(true);\n      try {\n        // Buscando usuários registrados\n        const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n\n        // Formatando os dados para o formato esperado nas caixas de seleção\n        const formattedUsers = registeredUsers.map(user => {\n          var _user$email;\n          return {\n            id: user.id,\n            nome: user.name,\n            email: user.email,\n            // Adicionando informações adicionais que podem ser úteis\n            isAdmin: ((_user$email = user.email) === null || _user$email === void 0 ? void 0 : _user$email.toLowerCase().includes('admin')) || false\n          };\n        });\n        setUsers(formattedUsers);\n\n        // Verificar se existe um usuário logado\n        const loggedUser = JSON.parse(localStorage.getItem('user') || 'null');\n        if (loggedUser) {\n          setCurrentUser(loggedUser);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar usuários:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Função para atualizar a lista de usuários\n  const updateUsers = () => {\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n    const formattedUsers = registeredUsers.map(user => {\n      var _user$email2;\n      return {\n        id: user.id,\n        nome: user.name,\n        email: user.email,\n        isAdmin: ((_user$email2 = user.email) === null || _user$email2 === void 0 ? void 0 : _user$email2.toLowerCase().includes('admin')) || false\n      };\n    });\n    setUsers(formattedUsers);\n  };\n\n  // Função para adicionar um novo usuário\n  const addUser = user => {\n    var _user$email3;\n    const newUser = {\n      ...user,\n      isAdmin: ((_user$email3 = user.email) === null || _user$email3 === void 0 ? void 0 : _user$email3.toLowerCase().includes('admin')) || false\n    };\n\n    // Atualiza o estado local\n    setUsers([...users, newUser]);\n\n    // Opcional: também atualiza no localStorage se necessário\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n    localStorage.setItem('registeredUsers', JSON.stringify([...registeredUsers, {\n      id: newUser.id,\n      name: newUser.nome,\n      email: newUser.email,\n      password: newUser.password || '123456',\n      // senha padrão ou a fornecida\n      createdAt: new Date().toISOString()\n    }]));\n  };\n\n  // Função para definir o usuário atual\n  const setLoggedInUser = user => {\n    setCurrentUser(user);\n    localStorage.setItem('user', JSON.stringify(user));\n  };\n\n  // Função para logout\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  // Valor do contexto que será disponibilizado\n  const contextValue = {\n    users,\n    currentUser,\n    loading,\n    updateUsers,\n    addUser,\n    setLoggedInUser,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para facilitar o uso do contexto\n_s(UserProvider, \"aIU36oF/JRURuUssQPn1ctW0vag=\");\n_c = UserProvider;\nexport const useUserContext = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUserContext deve ser usado dentro de um UserProvider');\n  }\n  return context;\n};\n_s2(useUserContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","users","setUsers","currentUser","setCurrentUser","loading","setLoading","fetchUsers","registeredUsers","JSON","parse","localStorage","getItem","formattedUsers","map","user","_user$email","id","nome","name","email","isAdmin","toLowerCase","includes","loggedUser","error","console","updateUsers","_user$email2","addUser","_user$email3","newUser","setItem","stringify","password","createdAt","Date","toISOString","setLoggedInUser","logout","removeItem","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/context/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Criação do contexto\r\nexport const UserContext = createContext();\r\n\r\n// Provider que encapsula a aplicação\r\nexport const UserProvider = ({ children }) => {\r\n  // Estado para armazenar todos os usuários\r\n  const [users, setUsers] = useState([]);\r\n  // Estado para o usuário atual logado\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  // Estado para rastrear carregamento\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Efeito para carregar usuários do localStorage\r\n  useEffect(() => {\r\n    const fetchUsers = () => {\r\n      setLoading(true);\r\n      try {\r\n        // Buscando usuários registrados\r\n        const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n        \r\n        // Formatando os dados para o formato esperado nas caixas de seleção\r\n        const formattedUsers = registeredUsers.map(user => ({\r\n          id: user.id,\r\n          nome: user.name,\r\n          email: user.email,\r\n          // Adicionando informações adicionais que podem ser úteis\r\n          isAdmin: user.email?.toLowerCase().includes('admin') || false\r\n        }));\r\n        \r\n        setUsers(formattedUsers);\r\n        \r\n        // Verificar se existe um usuário logado\r\n        const loggedUser = JSON.parse(localStorage.getItem('user') || 'null');\r\n        if (loggedUser) {\r\n          setCurrentUser(loggedUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao carregar usuários:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Função para atualizar a lista de usuários\r\n  const updateUsers = () => {\r\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n    const formattedUsers = registeredUsers.map(user => ({\r\n      id: user.id,\r\n      nome: user.name,\r\n      email: user.email,\r\n      isAdmin: user.email?.toLowerCase().includes('admin') || false\r\n    }));\r\n    setUsers(formattedUsers);\r\n  };\r\n\r\n  // Função para adicionar um novo usuário\r\n  const addUser = (user) => {\r\n    const newUser = {\r\n      ...user,\r\n      isAdmin: user.email?.toLowerCase().includes('admin') || false\r\n    };\r\n    \r\n    // Atualiza o estado local\r\n    setUsers([...users, newUser]);\r\n    \r\n    // Opcional: também atualiza no localStorage se necessário\r\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n    localStorage.setItem('registeredUsers', JSON.stringify([...registeredUsers, {\r\n      id: newUser.id,\r\n      name: newUser.nome,\r\n      email: newUser.email,\r\n      password: newUser.password || '123456', // senha padrão ou a fornecida\r\n      createdAt: new Date().toISOString()\r\n    }]));\r\n  };\r\n\r\n  // Função para definir o usuário atual\r\n  const setLoggedInUser = (user) => {\r\n    setCurrentUser(user);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  };\r\n\r\n  // Função para logout\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  // Valor do contexto que será disponibilizado\r\n  const contextValue = {\r\n    users,\r\n    currentUser,\r\n    loading,\r\n    updateUsers,\r\n    addUser,\r\n    setLoggedInUser,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={contextValue}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook personalizado para facilitar o uso do contexto\r\nexport const useUserContext = () => {\r\n  const context = useContext(UserContext);\r\n  if (!context) {\r\n    throw new Error('useUserContext deve ser usado dentro de um UserProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}