{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(true); // Simula usuário admin\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [lastAction, setLastAction] = useState(null);\n  const [timeEntries, setTimeEntries] = useState([]);\n\n  // Carrega os registros de ponto do localStorage ao iniciar\n  useEffect(() => {\n    const savedEntries = JSON.parse(localStorage.getItem('timeEntries')) || [];\n    setTimeEntries(savedEntries);\n  }, []);\n\n  // Atualiza o relógio a cada segundo\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Formata a hora atual\n  const formatTime = date => {\n    return date.toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  // Registra entrada ou saída\n  const registerTimeEntry = type => {\n    const now = new Date();\n    const newEntry = {\n      type,\n      time: now.toLocaleTimeString('pt-BR', {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      date: now.toLocaleDateString('pt-BR')\n    };\n    const updatedEntries = [newEntry, ...timeEntries];\n    setTimeEntries(updatedEntries);\n    setLastAction(`${type.charAt(0).toUpperCase() + type.slice(1)} registrada às ${newEntry.time}`);\n    // Salva os registros atualizados no localStorage\n    localStorage.setItem('timeEntries', JSON.stringify(updatedEntries));\n  };\n\n  // O resto do componente permanece inalterado\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-purple-900 to-black text-white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"nRlL189/XTjElJIBcLCmlBYgr+Q=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DashboardPage","_s","isAdmin","setIsAdmin","showProfileMenu","setShowProfileMenu","currentTime","setCurrentTime","Date","lastAction","setLastAction","timeEntries","setTimeEntries","savedEntries","JSON","parse","localStorage","getItem","timer","setInterval","clearInterval","formatTime","date","toLocaleTimeString","hour","minute","second","registerTimeEntry","type","now","newEntry","time","toLocaleDateString","updatedEntries","charAt","toUpperCase","slice","setItem","stringify","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DashboardPage = () => {\r\n  const [isAdmin, setIsAdmin] = useState(true); // Simula usuário admin\r\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [lastAction, setLastAction] = useState(null);\r\n  const [timeEntries, setTimeEntries] = useState([]);\r\n\r\n  // Carrega os registros de ponto do localStorage ao iniciar\r\n  useEffect(() => {\r\n    const savedEntries = JSON.parse(localStorage.getItem('timeEntries')) || [];\r\n    setTimeEntries(savedEntries);\r\n  }, []);\r\n\r\n  // Atualiza o relógio a cada segundo\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Formata a hora atual\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('pt-BR', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit'\r\n    });\r\n  };\r\n\r\n  // Registra entrada ou saída\r\n  const registerTimeEntry = (type) => {\r\n    const now = new Date();\r\n    const newEntry = {\r\n      type,\r\n      time: now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }),\r\n      date: now.toLocaleDateString('pt-BR')\r\n    };\r\n    const updatedEntries = [newEntry, ...timeEntries];\r\n    setTimeEntries(updatedEntries);\r\n    setLastAction(`${type.charAt(0).toUpperCase() + type.slice(1)} registrada às ${newEntry.time}`);\r\n    // Salva os registros atualizados no localStorage\r\n    localStorage.setItem('timeEntries', JSON.stringify(updatedEntries));\r\n  };\r\n\r\n  // O resto do componente permanece inalterado\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 to-black text-white\">\r\n      {/* O conteúdo do return permanece exatamente o mesmo */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAIY,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE;IAC1EL,cAAc,CAACC,YAAY,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACd,MAAMqB,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BZ,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMY,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,UAAU,GAAIC,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtCC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAClC,MAAMC,GAAG,GAAG,IAAIrB,IAAI,CAAC,CAAC;IACtB,MAAMsB,QAAQ,GAAG;MACfF,IAAI;MACJG,IAAI,EAAEF,GAAG,CAACN,kBAAkB,CAAC,OAAO,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;MAC7EH,IAAI,EAAEO,GAAG,CAACG,kBAAkB,CAAC,OAAO;IACtC,CAAC;IACD,MAAMC,cAAc,GAAG,CAACH,QAAQ,EAAE,GAAGnB,WAAW,CAAC;IACjDC,cAAc,CAACqB,cAAc,CAAC;IAC9BvB,aAAa,CAAC,GAAGkB,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGP,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,kBAAkBN,QAAQ,CAACC,IAAI,EAAE,CAAC;IAC/F;IACAf,YAAY,CAACqB,OAAO,CAAC,aAAa,EAAEvB,IAAI,CAACwB,SAAS,CAACL,cAAc,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,oBACElC,OAAA;IAAKwC,SAAS,EAAC;EAAoE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9E,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAnDID,aAAa;AAAA4C,EAAA,GAAb5C,aAAa;AAqDnB,eAAeA,aAAa;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}