{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\components\\\\PontoBatidoTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PontoBatidoTab = () => {\n  _s();\n  // Constantes para status\n  const STATUS_APROVADO = 'aprovado';\n  const STATUS_REJEITADO = 'rejeitado';\n  const STATUS_PENDENTE = 'pendente';\n  const STATUS_AJUSTADO = 'ajustado';\n  const FUNCIONARIOS_KEY = 'funcionarios';\n\n  // Estados\n  const [pontoRegistros, setPontoRegistros] = useState(() => {\n    const storedRegistros = localStorage.getItem('pontoRegistros');\n    const registrosBase = storedRegistros ? JSON.parse(storedRegistros) : [{\n      id: 1,\n      funcionarioId: 101,\n      funcionarioNome: 'João Silva',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:05',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '12:00',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:10',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '--:--',\n        status: STATUS_PENDENTE\n      }]\n    }, {\n      id: 2,\n      funcionarioId: 102,\n      funcionarioNome: 'Maria Oliveira',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:15',\n        status: 'atrasado'\n      }, {\n        tipo: 'saída',\n        hora: '12:05',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:00',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '17:10',\n        status: 'regular'\n      }]\n    }, {\n      id: 3,\n      funcionarioId: 103,\n      funcionarioNome: 'Carlos Pereira',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '09:20',\n        status: 'atrasado'\n      }, {\n        tipo: 'saída',\n        hora: '12:15',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:10',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '18:35',\n        status: 'hora extra'\n      }]\n    }, {\n      id: 4,\n      funcionarioId: 104,\n      funcionarioNome: 'Ana Souza',\n      data: '19/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '--:--',\n        status: STATUS_PENDENTE\n      }, {\n        tipo: 'saída',\n        hora: '--:--',\n        status: STATUS_PENDENTE\n      }, {\n        tipo: 'entrada',\n        hora: '--:--',\n        status: STATUS_PENDENTE\n      }, {\n        tipo: 'saída',\n        hora: '--:--',\n        status: STATUS_PENDENTE\n      }]\n    }, {\n      id: 5,\n      funcionarioId: 101,\n      funcionarioNome: 'João Silva',\n      data: '18/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:00',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '12:00',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:00',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '17:05',\n        status: 'regular'\n      }]\n    }, {\n      id: 6,\n      funcionarioId: 102,\n      funcionarioNome: 'Maria Oliveira',\n      data: '18/03/2025',\n      registros: [{\n        tipo: 'entrada',\n        hora: '08:10',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '12:00',\n        status: 'regular'\n      }, {\n        tipo: 'entrada',\n        hora: '13:05',\n        status: 'regular'\n      }, {\n        tipo: 'saída',\n        hora: '17:00',\n        status: 'regular'\n      }]\n    }];\n\n    // Restaurar status salvos em chaves individuais\n    return registrosBase.map(registro => {\n      const registrosAtualizados = registro.registros.map((r, indice) => {\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\n        const statusSalvo = localStorage.getItem(statusKey);\n\n        // Se houver um status salvo separadamente, usá-lo\n        if (statusSalvo) {\n          return {\n            ...r,\n            status: statusSalvo\n          };\n        }\n\n        // Converter \"falta\" para \"pendente\" se necessário\n        if (r.status === 'falta') {\n          return {\n            ...r,\n            status: STATUS_PENDENTE\n          };\n        }\n        return r;\n      });\n      return {\n        ...registro,\n        registros: registrosAtualizados\n      };\n    });\n  });\n  const [filtros, setFiltros] = useState({\n    data: '',\n    funcionario: '',\n    status: ''\n  });\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\n  const [editandoRegistro, setEditandoRegistro] = useState(null);\n  const horaInputRefs = useRef({});\n\n  // Funções auxiliares\n  const getAllPossibleFuncionarios = () => {\n    try {\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n      const funcionariosFromUsers = registeredUsers.map(user => ({\n        id: user.id,\n        nome: user.name || user.nome\n      }));\n      const storedFuncionarios = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\n        id: registro.funcionarioId,\n        nome: registro.funcionarioNome\n      }));\n      const funcionariosMap = new Map();\n      [...funcionariosFromUsers, ...storedFuncionarios, ...funcionariosFromRegistros].forEach(func => {\n        if (func && func.id) {\n          funcionariosMap.set(func.id, func);\n        }\n      });\n      return Array.from(funcionariosMap.values());\n    } catch (error) {\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\n      return [];\n    }\n  };\n  const getLatestFuncionarios = () => {\n    try {\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n      const funcionariosStorage = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\n      const userStorage = JSON.parse(localStorage.getItem('user') || '{}');\n      const funcionariosFromUsers = registeredUsers.map(user => ({\n        id: user.id,\n        nome: user.name || user.nome\n      }));\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\n        id: registro.funcionarioId,\n        nome: registro.funcionarioNome\n      }));\n      const allFuncionarios = [...funcionariosStorage];\n      [...funcionariosFromUsers, ...funcionariosFromRegistros].forEach(func => {\n        if (!allFuncionarios.some(f => f.id === func.id)) {\n          allFuncionarios.push(func);\n        }\n      });\n      if (userStorage && userStorage.id && userStorage.name) {\n        if (!allFuncionarios.some(f => f.id === userStorage.id)) {\n          allFuncionarios.push({\n            id: userStorage.id,\n            nome: userStorage.name\n          });\n        }\n      }\n      localStorage.setItem(FUNCIONARIOS_KEY, JSON.stringify(allFuncionarios));\n      return allFuncionarios;\n    } catch (error) {\n      console.error(\"Erro ao buscar funcionários:\", error);\n      return [];\n    }\n  };\n\n  // Função simplificada para salvar status de forma consistente\n  const salvarStatus = (registroId, indice, novoStatus, novaHora = null) => {\n    // 1. Salvar na chave individualizada no localStorage\n    const statusKey = `pontoStatus_${registroId}_${indice}`;\n    localStorage.setItem(statusKey, novoStatus);\n\n    // 2. Atualizar o estado local\n    const novosRegistros = pontoRegistros.map(registro => {\n      if (registro.id === registroId) {\n        const novosRegistrosInternos = registro.registros.map((r, idx) => {\n          if (idx === indice) {\n            return {\n              ...r,\n              status: novoStatus,\n              hora: novaHora !== null ? novaHora : r.hora\n            };\n          }\n          return r;\n        });\n        return {\n          ...registro,\n          registros: novosRegistrosInternos\n        };\n      }\n      return registro;\n    });\n\n    // 3. Atualizar o estado e o localStorage\n    setPontoRegistros(novosRegistros);\n    localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\n\n    // 4. Adicionar notificação para o funcionário\n    const registro = pontoRegistros.find(r => r.id === registroId);\n    if (registro) {\n      const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n      notificacoes.push({\n        id: Date.now(),\n        userId: registro.funcionarioId,\n        message: `Seu registro de ponto do dia ${registro.data} foi ${novoStatus} pelo administrador.`,\n        date: new Date().toLocaleDateString('pt-BR'),\n        read: false\n      });\n      localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n\n      // 5. Mostrar confirmação\n      alert(`Ponto atualizado para ${registro.funcionarioNome} em ${registro.data}.`);\n    }\n  };\n  const adicionarRegistrosParaTodosFuncionarios = funcionarios => {\n    if (!funcionarios || funcionarios.length === 0) return;\n    const dataAtual = new Date().toLocaleDateString('pt-BR');\n    const todasDatas = [...new Set(pontoRegistros.map(registro => registro.data))];\n    let nextId = Math.max(...pontoRegistros.map(registro => registro.id), 0) + 1;\n\n    // Criar uma cópia para não modificar o estado diretamente\n    const novosRegistros = [...pontoRegistros];\n\n    // Mapear registros existentes para evitar duplicação\n    const registrosExistentes = new Map();\n    pontoRegistros.forEach(registro => {\n      const chave = `${registro.funcionarioId}-${registro.data}`;\n      registrosExistentes.set(chave, registro.id);\n    });\n\n    // Para cada funcionário, verificar e adicionar registros faltantes\n    let adicionados = false;\n    funcionarios.forEach(funcionario => {\n      // Para datas existentes\n      todasDatas.forEach(data => {\n        const chave = `${funcionario.id}-${data}`;\n        if (!registrosExistentes.has(chave)) {\n          novosRegistros.push({\n            id: nextId++,\n            funcionarioId: funcionario.id,\n            funcionarioNome: funcionario.nome,\n            data: data,\n            registros: [{\n              tipo: 'entrada',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }, {\n              tipo: 'entrada',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }]\n          });\n          registrosExistentes.set(chave, nextId - 1);\n          adicionados = true;\n        }\n      });\n\n      // Para a data atual, se necessário\n      if (!todasDatas.includes(dataAtual)) {\n        const chave = `${funcionario.id}-${dataAtual}`;\n        if (!registrosExistentes.has(chave)) {\n          novosRegistros.push({\n            id: nextId++,\n            funcionarioId: funcionario.id,\n            funcionarioNome: funcionario.nome,\n            data: dataAtual,\n            registros: [{\n              tipo: 'entrada',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }, {\n              tipo: 'entrada',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }, {\n              tipo: 'saída',\n              hora: '--:--',\n              status: STATUS_PENDENTE\n            }]\n          });\n          registrosExistentes.set(chave, nextId - 1);\n          adicionados = true;\n        }\n      }\n    });\n\n    // Só atualizar o estado se algo foi adicionado\n    if (adicionados) {\n      // Restaurar status salvos para os novos registros\n      const registrosAtualizados = novosRegistros.map(registro => {\n        const registrosComStatus = registro.registros.map((r, indice) => {\n          const statusKey = `pontoStatus_${registro.id}_${indice}`;\n          const statusSalvo = localStorage.getItem(statusKey);\n          if (statusSalvo) {\n            return {\n              ...r,\n              status: statusSalvo\n            };\n          }\n          return r;\n        });\n        return {\n          ...registro,\n          registros: registrosComStatus\n        };\n      });\n      setPontoRegistros(registrosAtualizados);\n      localStorage.setItem('pontoRegistros', JSON.stringify(registrosAtualizados));\n    }\n  };\n  const marcarFaltaJustificada = registroId => {\n    const registro = pontoRegistros.find(r => r.id === registroId);\n    if (!registro) return;\n    let mudancas = false;\n\n    // Atualizar todos os registros com status pendente\n    const novosRegistros = pontoRegistros.map(r => {\n      if (r.id === registroId) {\n        const registrosAtualizados = r.registros.map((reg, idx) => {\n          if (reg.status === STATUS_PENDENTE || reg.status === 'falta') {\n            // Salvar na chave individualizada\n            const statusKey = `pontoStatus_${registroId}_${idx}`;\n            localStorage.setItem(statusKey, 'falta justificada');\n            mudancas = true;\n            return {\n              ...reg,\n              status: 'falta justificada'\n            };\n          }\n          return reg;\n        });\n        return {\n          ...r,\n          registros: registrosAtualizados\n        };\n      }\n      return r;\n    });\n    if (mudancas) {\n      setPontoRegistros(novosRegistros);\n      localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\n      alert(`Falta justificada registrada para ${registro.funcionarioNome} em ${registro.data}.`);\n    }\n  };\n  const notificarFuncionario = (funcionarioId, funcionarioNome) => {\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    notificacoes.push({\n      id: Date.now(),\n      userId: funcionarioId,\n      message: 'Por favor, registre seu ponto pendente do dia de hoje.',\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    });\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n    alert(`Notificação enviada para ${funcionarioNome} sobre ponto pendente.`);\n  };\n  const iniciarEdicaoPonto = (registroId, indiceRegistro) => {\n    setEditandoRegistro({\n      registroId,\n      indiceRegistro\n    });\n    setTimeout(() => {\n      if (horaInputRefs.current[`${registroId}-${indiceRegistro}`]) {\n        horaInputRefs.current[`${registroId}-${indiceRegistro}`].focus();\n      }\n    }, 100);\n  };\n  const salvarEdicaoPonto = (registroId, indiceRegistro, statusSelecionado = STATUS_AJUSTADO) => {\n    const inputRef = horaInputRefs.current[`${registroId}-${indiceRegistro}`];\n    if (inputRef && inputRef.value) {\n      salvarStatus(registroId, indiceRegistro, statusSelecionado, inputRef.value);\n    }\n    setEditandoRegistro(null);\n  };\n  const cancelarEdicaoPonto = () => {\n    setEditandoRegistro(null);\n  };\n  const renderizarStatus = status => {\n    let corClasse = '';\n    let texto = status.toUpperCase();\n    switch (status) {\n      case 'regular':\n        corClasse = 'bg-green-600';\n        break;\n      case 'atrasado':\n        corClasse = 'bg-yellow-600';\n        break;\n      case 'hora extra':\n        corClasse = 'bg-blue-600';\n        break;\n      case STATUS_PENDENTE:\n      case 'falta':\n        corClasse = 'bg-purple-600';\n        texto = 'PENDENTE';\n        break;\n      case 'falta justificada':\n        corClasse = 'bg-orange-600';\n        texto = 'JUSTIFICADA';\n        break;\n      case STATUS_AJUSTADO:\n        corClasse = 'bg-indigo-600';\n        break;\n      case STATUS_APROVADO:\n        corClasse = 'bg-green-700';\n        break;\n      case STATUS_REJEITADO:\n        corClasse = 'bg-red-700';\n        break;\n      default:\n        corClasse = 'bg-gray-600';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-block px-2 py-1 rounded-full text-xs ${corClasse}`,\n      children: texto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Inicialização e carregamento de dados\n  useEffect(() => {\n    // Carregar funcionários e atualizar registros\n    const funcionarios = getLatestFuncionarios();\n    setAllFuncionarios(funcionarios);\n    adicionarRegistrosParaTodosFuncionarios(funcionarios);\n\n    // Timer para atualizar a lista de funcionários periodicamente\n    const interval = setInterval(() => {\n      const updatedFuncionarios = getLatestFuncionarios();\n      // Só atualizar se a lista mudou\n      if (JSON.stringify(updatedFuncionarios) !== JSON.stringify(allFuncionarios)) {\n        setAllFuncionarios(updatedFuncionarios);\n        adicionarRegistrosParaTodosFuncionarios(updatedFuncionarios);\n      }\n    }, 15000); // Reduzido para evitar conflitos\n\n    // Event listener para mudanças no localStorage\n    const handleStorageChange = e => {\n      // Reagir a mudanças em funcionários\n      if (e.key === FUNCIONARIOS_KEY || e.key === 'registeredUsers' || e.key === 'user') {\n        const updatedFuncionarios = getAllPossibleFuncionarios();\n        setAllFuncionarios(updatedFuncionarios);\n        adicionarRegistrosParaTodosFuncionarios(updatedFuncionarios);\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      clearInterval(interval);\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []); // Executar apenas na montagem do componente\n\n  // Persistir mudanças no estado\n  useEffect(() => {\n    localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\n  }, [pontoRegistros]);\n\n  // Listas e filtros\n  const funcionarios = [...new Set([...allFuncionarios.map(f => f.nome), ...pontoRegistros.map(registro => registro.funcionarioNome)])].filter(Boolean).sort();\n  const datas = [...new Set(pontoRegistros.map(registro => registro.data))];\n  const registrosFiltrados = pontoRegistros.filter(registro => {\n    return (filtros.data === '' || registro.data === filtros.data) && (filtros.funcionario === '' || registro.funcionarioNome === filtros.funcionario) && (filtros.status === '' || registro.registros.some(r => r.status === filtros.status));\n  });\n  const registrosOrdenados = [...registrosFiltrados].sort((a, b) => {\n    const [diaA, mesA, anoA] = a.data.split('/').map(Number);\n    const [diaB, mesB, anoB] = b.data.split('/').map(Number);\n    const dateA = new Date(anoA, mesA - 1, diaA);\n    const dateB = new Date(anoB, mesB - 1, diaB);\n    return dateB - dateA;\n  });\n\n  // Início do JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Registros de Ponto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const latestFuncionarios = getLatestFuncionarios();\n          setAllFuncionarios(latestFuncionarios);\n          adicionarRegistrosParaTodosFuncionarios(latestFuncionarios);\n          alert(`Lista atualizada! ${latestFuncionarios.length} funcionários encontrados.`);\n        },\n        className: \"bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded-md text-sm\",\n        children: [\"Atualizar Lista de Funcion\\xE1rios (\", allFuncionarios.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-purple-300 mt-1\",\n        children: [\"Lista atualizada em: \", new Date().toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex flex-wrap gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), \"Exportar Relat\\xF3rio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), \"Notificar Todos com Pend\\xEAncias\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 mr-2\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), \"Gerar Espelho de Ponto\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6 mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.data,\n            onChange: e => setFiltros({\n              ...filtros,\n              data: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todas as datas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this), datas.map((data, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: data,\n              children: data\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: [\"Funcion\\xE1rio (\", funcionarios.length, \" dispon\\xEDveis)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.funcionario,\n            onChange: e => setFiltros({\n              ...filtros,\n              funcionario: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os funcion\\xE1rios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this), funcionarios.map((funcionario, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: funcionario,\n              children: funcionario\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.status,\n            onChange: e => setFiltros({\n              ...filtros,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"regular\",\n              children: \"Regular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"atrasado\",\n              children: \"Atrasado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hora extra\",\n              children: \"Hora Extra\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: STATUS_PENDENTE,\n              children: \"Pendente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"falta justificada\",\n              children: \"Falta Justificada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: STATUS_AJUSTADO,\n              children: \"Ajustado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: STATUS_APROVADO,\n              children: \"Aprovado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: STATUS_REJEITADO,\n              children: \"Rejeitado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-purple-300 text-sm border-b border-purple-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Funcion\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Entrada 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Sa\\xEDda 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Entrada 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"Sa\\xEDda 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 text-left\",\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [registrosOrdenados.map(registro => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-30\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: registro.funcionarioNome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: registro.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), registro.registros.map((r, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: editandoRegistro && editandoRegistro.registroId === registro.id && editandoRegistro.indiceRegistro === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  defaultValue: r.hora !== '--:--' ? r.hora : '',\n                  className: \"bg-purple-800 border border-purple-600 rounded-md p-1 text-white w-24\",\n                  ref: el => horaInputRefs.current[`${registro.id}-${index}`] = el\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => salvarEdicaoPonto(registro.id, index, STATUS_APROVADO),\n                    className: \"text-green-500 hover:text-green-400\",\n                    title: \"Aprovar registro\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M5 13l4 4L19 7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 634,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => salvarEdicaoPonto(registro.id, index, STATUS_REJEITADO),\n                    className: \"text-red-500 hover:text-red-400\",\n                    title: \"Rejeitar registro\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 643,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => salvarEdicaoPonto(registro.id, index, STATUS_AJUSTADO),\n                    className: \"text-blue-500 hover:text-blue-400\",\n                    title: \"Ajustar registro\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 652,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: cancelarEdicaoPonto,\n                    className: \"text-gray-400 hover:text-white\",\n                    title: \"Cancelar\",\n                    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      className: \"h-5 w-5\",\n                      fill: \"none\",\n                      viewBox: \"0 0 24 24\",\n                      stroke: \"currentColor\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        strokeLinecap: \"round\",\n                        strokeLinejoin: \"round\",\n                        strokeWidth: 2,\n                        d: \"M6 18L18 6M6 6l12 12\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 661,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: r.status === STATUS_PENDENTE || r.status === 'falta' ? 'text-red-400' : '',\n                  children: r.hora\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-2\",\n                  children: renderizarStatus(r.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => iniciarEdicaoPonto(registro.id, index),\n                  className: \"text-purple-300 hover:text-white ml-auto\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2 items-center\",\n                children: [registro.registros.some(r => r.status === STATUS_PENDENTE) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => notificarFuncionario(registro.funcionarioId, registro.funcionarioNome),\n                  className: \"bg-purple-600 hover:bg-purple-700 text-white rounded p-1 text-xs flex items-center\",\n                  title: \"Notificar funcion\\xE1rio\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 693,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 692,\n                    columnNumber: 25\n                  }, this), \"Notificar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 23\n                }, this), registro.registros.some(r => r.status === STATUS_PENDENTE) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => marcarFaltaJustificada(registro.id),\n                  className: \"bg-orange-600 hover:bg-orange-700 text-white rounded p-1 text-xs flex items-center\",\n                  title: \"Marcar falta como justificada\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 25\n                  }, this), \"Justificar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-600 hover:bg-blue-700 text-white rounded p-1 text-xs flex items-center\",\n                  title: \"Exportar registro\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"h-4 w-4 mr-1\",\n                    fill: \"none\",\n                    viewBox: \"0 0 24 24\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 23\n                  }, this), \"Exportar\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this)]\n          }, registro.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this)), registrosOrdenados.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              className: \"px-4 py-6 text-center text-purple-300\",\n              children: \"Nenhum registro encontrado com os filtros selecionados.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 5\n  }, this);\n};\n_s(PontoBatidoTab, \"nRc8jkT6RTagOFgAmajyHVH1oiM=\");\n_c = PontoBatidoTab;\nexport default PontoBatidoTab;\nvar _c;\n$RefreshReg$(_c, \"PontoBatidoTab\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","PontoBatidoTab","_s","STATUS_APROVADO","STATUS_REJEITADO","STATUS_PENDENTE","STATUS_AJUSTADO","FUNCIONARIOS_KEY","pontoRegistros","setPontoRegistros","storedRegistros","localStorage","getItem","registrosBase","JSON","parse","id","funcionarioId","funcionarioNome","data","registros","tipo","hora","status","map","registro","registrosAtualizados","r","indice","statusKey","statusSalvo","filtros","setFiltros","funcionario","allFuncionarios","setAllFuncionarios","editandoRegistro","setEditandoRegistro","horaInputRefs","getAllPossibleFuncionarios","registeredUsers","funcionariosFromUsers","user","nome","name","storedFuncionarios","funcionariosFromRegistros","funcionariosMap","Map","forEach","func","set","Array","from","values","error","console","getLatestFuncionarios","funcionariosStorage","userStorage","some","f","push","setItem","stringify","salvarStatus","registroId","novoStatus","novaHora","novosRegistros","novosRegistrosInternos","idx","find","notificacoes","Date","now","userId","message","date","toLocaleDateString","read","alert","adicionarRegistrosParaTodosFuncionarios","funcionarios","length","dataAtual","todasDatas","Set","nextId","Math","max","registrosExistentes","chave","adicionados","has","includes","registrosComStatus","marcarFaltaJustificada","mudancas","reg","notificarFuncionario","iniciarEdicaoPonto","indiceRegistro","setTimeout","current","focus","salvarEdicaoPonto","statusSelecionado","inputRef","value","cancelarEdicaoPonto","renderizarStatus","corClasse","texto","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","interval","setInterval","updatedFuncionarios","handleStorageChange","e","key","window","addEventListener","clearInterval","removeEventListener","filter","Boolean","sort","datas","registrosFiltrados","registrosOrdenados","a","b","diaA","mesA","anoA","split","Number","diaB","mesB","anoB","dateA","dateB","onClick","latestFuncionarios","toLocaleTimeString","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onChange","target","index","type","defaultValue","ref","el","title","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/components/PontoBatidoTab.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst PontoBatidoTab = () => {\r\n  // Constantes para status\r\n  const STATUS_APROVADO = 'aprovado';\r\n  const STATUS_REJEITADO = 'rejeitado';\r\n  const STATUS_PENDENTE = 'pendente';\r\n  const STATUS_AJUSTADO = 'ajustado';\r\n  const FUNCIONARIOS_KEY = 'funcionarios';\r\n  \r\n  // Estados\r\n  const [pontoRegistros, setPontoRegistros] = useState(() => {\r\n    const storedRegistros = localStorage.getItem('pontoRegistros');\r\n    const registrosBase = storedRegistros ? JSON.parse(storedRegistros) : [\r\n      {\r\n        id: 1,\r\n        funcionarioId: 101,\r\n        funcionarioNome: 'João Silva',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:05', status: 'regular' },\r\n          { tipo: 'saída', hora: '12:00', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:10', status: 'regular' },\r\n          { tipo: 'saída', hora: '--:--', status: STATUS_PENDENTE }\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        funcionarioId: 102,\r\n        funcionarioNome: 'Maria Oliveira',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:15', status: 'atrasado' },\r\n          { tipo: 'saída', hora: '12:05', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:00', status: 'regular' },\r\n          { tipo: 'saída', hora: '17:10', status: 'regular' }\r\n        ]\r\n      },\r\n      {\r\n        id: 3,\r\n        funcionarioId: 103,\r\n        funcionarioNome: 'Carlos Pereira',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '09:20', status: 'atrasado' },\r\n          { tipo: 'saída', hora: '12:15', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:10', status: 'regular' },\r\n          { tipo: 'saída', hora: '18:35', status: 'hora extra' }\r\n        ]\r\n      },\r\n      {\r\n        id: 4,\r\n        funcionarioId: 104,\r\n        funcionarioNome: 'Ana Souza',\r\n        data: '19/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '--:--', status: STATUS_PENDENTE },\r\n          { tipo: 'saída', hora: '--:--', status: STATUS_PENDENTE },\r\n          { tipo: 'entrada', hora: '--:--', status: STATUS_PENDENTE },\r\n          { tipo: 'saída', hora: '--:--', status: STATUS_PENDENTE }\r\n        ]\r\n      },\r\n      {\r\n        id: 5,\r\n        funcionarioId: 101,\r\n        funcionarioNome: 'João Silva',\r\n        data: '18/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:00', status: 'regular' },\r\n          { tipo: 'saída', hora: '12:00', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:00', status: 'regular' },\r\n          { tipo: 'saída', hora: '17:05', status: 'regular' }\r\n        ]\r\n      },\r\n      {\r\n        id: 6,\r\n        funcionarioId: 102,\r\n        funcionarioNome: 'Maria Oliveira',\r\n        data: '18/03/2025',\r\n        registros: [\r\n          { tipo: 'entrada', hora: '08:10', status: 'regular' },\r\n          { tipo: 'saída', hora: '12:00', status: 'regular' },\r\n          { tipo: 'entrada', hora: '13:05', status: 'regular' },\r\n          { tipo: 'saída', hora: '17:00', status: 'regular' }\r\n        ]\r\n      }\r\n    ];\r\n    \r\n    // Restaurar status salvos em chaves individuais\r\n    return registrosBase.map(registro => {\r\n      const registrosAtualizados = registro.registros.map((r, indice) => {\r\n        const statusKey = `pontoStatus_${registro.id}_${indice}`;\r\n        const statusSalvo = localStorage.getItem(statusKey);\r\n        \r\n        // Se houver um status salvo separadamente, usá-lo\r\n        if (statusSalvo) {\r\n          return { ...r, status: statusSalvo };\r\n        }\r\n        \r\n        // Converter \"falta\" para \"pendente\" se necessário\r\n        if (r.status === 'falta') {\r\n          return { ...r, status: STATUS_PENDENTE };\r\n        }\r\n        \r\n        return r;\r\n      });\r\n      \r\n      return { ...registro, registros: registrosAtualizados };\r\n    });\r\n  });\r\n\r\n  const [filtros, setFiltros] = useState({\r\n    data: '',\r\n    funcionario: '',\r\n    status: ''\r\n  });\r\n\r\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\r\n  const [editandoRegistro, setEditandoRegistro] = useState(null);\r\n  const horaInputRefs = useRef({});\r\n  \r\n  // Funções auxiliares\r\n  const getAllPossibleFuncionarios = () => {\r\n    try {\r\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n      const funcionariosFromUsers = registeredUsers.map(user => ({\r\n        id: user.id,\r\n        nome: user.name || user.nome\r\n      }));\r\n      \r\n      const storedFuncionarios = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\r\n      \r\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\r\n        id: registro.funcionarioId,\r\n        nome: registro.funcionarioNome\r\n      }));\r\n\r\n      const funcionariosMap = new Map();\r\n      \r\n      [...funcionariosFromUsers, ...storedFuncionarios, ...funcionariosFromRegistros]\r\n        .forEach(func => {\r\n          if (func && func.id) {\r\n            funcionariosMap.set(func.id, func);\r\n          }\r\n        });\r\n\r\n      return Array.from(funcionariosMap.values());\r\n    } catch (error) {\r\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getLatestFuncionarios = () => {\r\n    try {\r\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n      const funcionariosStorage = JSON.parse(localStorage.getItem(FUNCIONARIOS_KEY) || '[]');\r\n      const userStorage = JSON.parse(localStorage.getItem('user') || '{}');\r\n\r\n      const funcionariosFromUsers = registeredUsers.map(user => ({\r\n        id: user.id,\r\n        nome: user.name || user.nome\r\n      }));\r\n\r\n      const funcionariosFromRegistros = pontoRegistros.map(registro => ({\r\n        id: registro.funcionarioId,\r\n        nome: registro.funcionarioNome\r\n      }));\r\n\r\n      const allFuncionarios = [...funcionariosStorage];\r\n      \r\n      [...funcionariosFromUsers, ...funcionariosFromRegistros].forEach(func => {\r\n        if (!allFuncionarios.some(f => f.id === func.id)) {\r\n          allFuncionarios.push(func);\r\n        }\r\n      });\r\n\r\n      if (userStorage && userStorage.id && userStorage.name) {\r\n        if (!allFuncionarios.some(f => f.id === userStorage.id)) {\r\n          allFuncionarios.push({\r\n            id: userStorage.id,\r\n            nome: userStorage.name\r\n          });\r\n        }\r\n      }\r\n\r\n      localStorage.setItem(FUNCIONARIOS_KEY, JSON.stringify(allFuncionarios));\r\n      return allFuncionarios;\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar funcionários:\", error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Função simplificada para salvar status de forma consistente\r\n  const salvarStatus = (registroId, indice, novoStatus, novaHora = null) => {\r\n    // 1. Salvar na chave individualizada no localStorage\r\n    const statusKey = `pontoStatus_${registroId}_${indice}`;\r\n    localStorage.setItem(statusKey, novoStatus);\r\n    \r\n    // 2. Atualizar o estado local\r\n    const novosRegistros = pontoRegistros.map(registro => {\r\n      if (registro.id === registroId) {\r\n        const novosRegistrosInternos = registro.registros.map((r, idx) => {\r\n          if (idx === indice) {\r\n            return { \r\n              ...r, \r\n              status: novoStatus,\r\n              hora: novaHora !== null ? novaHora : r.hora \r\n            };\r\n          }\r\n          return r;\r\n        });\r\n        \r\n        return { ...registro, registros: novosRegistrosInternos };\r\n      }\r\n      return registro;\r\n    });\r\n    \r\n    // 3. Atualizar o estado e o localStorage\r\n    setPontoRegistros(novosRegistros);\r\n    localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\r\n    \r\n    // 4. Adicionar notificação para o funcionário\r\n    const registro = pontoRegistros.find(r => r.id === registroId);\r\n    if (registro) {\r\n      const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n      notificacoes.push({\r\n        id: Date.now(),\r\n        userId: registro.funcionarioId,\r\n        message: `Seu registro de ponto do dia ${registro.data} foi ${novoStatus} pelo administrador.`,\r\n        date: new Date().toLocaleDateString('pt-BR'),\r\n        read: false\r\n      });\r\n      localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n      \r\n      // 5. Mostrar confirmação\r\n      alert(`Ponto atualizado para ${registro.funcionarioNome} em ${registro.data}.`);\r\n    }\r\n  };\r\n\r\n  const adicionarRegistrosParaTodosFuncionarios = (funcionarios) => {\r\n    if (!funcionarios || funcionarios.length === 0) return;\r\n    \r\n    const dataAtual = new Date().toLocaleDateString('pt-BR');\r\n    const todasDatas = [...new Set(pontoRegistros.map(registro => registro.data))];\r\n    let nextId = Math.max(...pontoRegistros.map(registro => registro.id), 0) + 1;\r\n    \r\n    // Criar uma cópia para não modificar o estado diretamente\r\n    const novosRegistros = [...pontoRegistros];\r\n    \r\n    // Mapear registros existentes para evitar duplicação\r\n    const registrosExistentes = new Map();\r\n    pontoRegistros.forEach(registro => {\r\n      const chave = `${registro.funcionarioId}-${registro.data}`;\r\n      registrosExistentes.set(chave, registro.id);\r\n    });\r\n    \r\n    // Para cada funcionário, verificar e adicionar registros faltantes\r\n    let adicionados = false;\r\n    \r\n    funcionarios.forEach(funcionario => {\r\n      // Para datas existentes\r\n      todasDatas.forEach(data => {\r\n        const chave = `${funcionario.id}-${data}`;\r\n        if (!registrosExistentes.has(chave)) {\r\n          novosRegistros.push({\r\n            id: nextId++,\r\n            funcionarioId: funcionario.id,\r\n            funcionarioNome: funcionario.nome,\r\n            data: data,\r\n            registros: [\r\n              { tipo: 'entrada', hora: '--:--', status: STATUS_PENDENTE },\r\n              { tipo: 'saída', hora: '--:--', status: STATUS_PENDENTE },\r\n              { tipo: 'entrada', hora: '--:--', status: STATUS_PENDENTE },\r\n              { tipo: 'saída', hora: '--:--', status: STATUS_PENDENTE }\r\n            ]\r\n          });\r\n          registrosExistentes.set(chave, nextId - 1);\r\n          adicionados = true;\r\n        }\r\n      });\r\n      \r\n      // Para a data atual, se necessário\r\n      if (!todasDatas.includes(dataAtual)) {\r\n        const chave = `${funcionario.id}-${dataAtual}`;\r\n        if (!registrosExistentes.has(chave)) {\r\n          novosRegistros.push({\r\n            id: nextId++,\r\n            funcionarioId: funcionario.id,\r\n            funcionarioNome: funcionario.nome,\r\n            data: dataAtual,\r\n            registros: [\r\n              { tipo: 'entrada', hora: '--:--', status: STATUS_PENDENTE },\r\n              { tipo: 'saída', hora: '--:--', status: STATUS_PENDENTE },\r\n              { tipo: 'entrada', hora: '--:--', status: STATUS_PENDENTE },\r\n              { tipo: 'saída', hora: '--:--', status: STATUS_PENDENTE }\r\n            ]\r\n          });\r\n          registrosExistentes.set(chave, nextId - 1);\r\n          adicionados = true;\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Só atualizar o estado se algo foi adicionado\r\n    if (adicionados) {\r\n      // Restaurar status salvos para os novos registros\r\n      const registrosAtualizados = novosRegistros.map(registro => {\r\n        const registrosComStatus = registro.registros.map((r, indice) => {\r\n          const statusKey = `pontoStatus_${registro.id}_${indice}`;\r\n          const statusSalvo = localStorage.getItem(statusKey);\r\n          \r\n          if (statusSalvo) {\r\n            return { ...r, status: statusSalvo };\r\n          }\r\n          return r;\r\n        });\r\n        \r\n        return { ...registro, registros: registrosComStatus };\r\n      });\r\n      \r\n      setPontoRegistros(registrosAtualizados);\r\n      localStorage.setItem('pontoRegistros', JSON.stringify(registrosAtualizados));\r\n    }\r\n  };\r\n\r\n  const marcarFaltaJustificada = (registroId) => {\r\n    const registro = pontoRegistros.find(r => r.id === registroId);\r\n    if (!registro) return;\r\n    \r\n    let mudancas = false;\r\n    \r\n    // Atualizar todos os registros com status pendente\r\n    const novosRegistros = pontoRegistros.map(r => {\r\n      if (r.id === registroId) {\r\n        const registrosAtualizados = r.registros.map((reg, idx) => {\r\n          if (reg.status === STATUS_PENDENTE || reg.status === 'falta') {\r\n            // Salvar na chave individualizada\r\n            const statusKey = `pontoStatus_${registroId}_${idx}`;\r\n            localStorage.setItem(statusKey, 'falta justificada');\r\n            mudancas = true;\r\n            return { ...reg, status: 'falta justificada' };\r\n          }\r\n          return reg;\r\n        });\r\n        \r\n        return { ...r, registros: registrosAtualizados };\r\n      }\r\n      return r;\r\n    });\r\n    \r\n    if (mudancas) {\r\n      setPontoRegistros(novosRegistros);\r\n      localStorage.setItem('pontoRegistros', JSON.stringify(novosRegistros));\r\n      alert(`Falta justificada registrada para ${registro.funcionarioNome} em ${registro.data}.`);\r\n    }\r\n  };\r\n\r\n  const notificarFuncionario = (funcionarioId, funcionarioNome) => {\r\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    notificacoes.push({\r\n      id: Date.now(),\r\n      userId: funcionarioId,\r\n      message: 'Por favor, registre seu ponto pendente do dia de hoje.',\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    });\r\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n    alert(`Notificação enviada para ${funcionarioNome} sobre ponto pendente.`);\r\n  };\r\n\r\n  const iniciarEdicaoPonto = (registroId, indiceRegistro) => {\r\n    setEditandoRegistro({ registroId, indiceRegistro });\r\n    setTimeout(() => {\r\n      if (horaInputRefs.current[`${registroId}-${indiceRegistro}`]) {\r\n        horaInputRefs.current[`${registroId}-${indiceRegistro}`].focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const salvarEdicaoPonto = (registroId, indiceRegistro, statusSelecionado = STATUS_AJUSTADO) => {\r\n    const inputRef = horaInputRefs.current[`${registroId}-${indiceRegistro}`];\r\n    if (inputRef && inputRef.value) {\r\n      salvarStatus(registroId, indiceRegistro, statusSelecionado, inputRef.value);\r\n    }\r\n    setEditandoRegistro(null);\r\n  };\r\n\r\n  const cancelarEdicaoPonto = () => {\r\n    setEditandoRegistro(null);\r\n  };\r\n\r\n  const renderizarStatus = (status) => {\r\n    let corClasse = '';\r\n    let texto = status.toUpperCase();\r\n    switch(status) {\r\n      case 'regular':\r\n        corClasse = 'bg-green-600';\r\n        break;\r\n      case 'atrasado':\r\n        corClasse = 'bg-yellow-600';\r\n        break;\r\n      case 'hora extra':\r\n        corClasse = 'bg-blue-600';\r\n        break;\r\n      case STATUS_PENDENTE:\r\n      case 'falta':\r\n        corClasse = 'bg-purple-600';\r\n        texto = 'PENDENTE';\r\n        break;\r\n      case 'falta justificada':\r\n        corClasse = 'bg-orange-600';\r\n        texto = 'JUSTIFICADA';\r\n        break;\r\n      case STATUS_AJUSTADO:\r\n        corClasse = 'bg-indigo-600';\r\n        break;\r\n      case STATUS_APROVADO:\r\n        corClasse = 'bg-green-700';\r\n        break;\r\n      case STATUS_REJEITADO:\r\n        corClasse = 'bg-red-700';\r\n        break;\r\n      default:\r\n        corClasse = 'bg-gray-600';\r\n    }\r\n    return (\r\n      <span className={`inline-block px-2 py-1 rounded-full text-xs ${corClasse}`}>\r\n        {texto}\r\n      </span>\r\n    );\r\n  };\r\n  \r\n  // Inicialização e carregamento de dados\r\n  useEffect(() => {\r\n    // Carregar funcionários e atualizar registros\r\n    const funcionarios = getLatestFuncionarios();\r\n    setAllFuncionarios(funcionarios);\r\n    adicionarRegistrosParaTodosFuncionarios(funcionarios);\r\n    \r\n    // Timer para atualizar a lista de funcionários periodicamente\r\n    const interval = setInterval(() => {\r\n      const updatedFuncionarios = getLatestFuncionarios();\r\n      // Só atualizar se a lista mudou\r\n      if (JSON.stringify(updatedFuncionarios) !== JSON.stringify(allFuncionarios)) {\r\n        setAllFuncionarios(updatedFuncionarios);\r\n        adicionarRegistrosParaTodosFuncionarios(updatedFuncionarios);\r\n      }\r\n    }, 15000); // Reduzido para evitar conflitos\r\n    \r\n    // Event listener para mudanças no localStorage\r\n    const handleStorageChange = (e) => {\r\n      // Reagir a mudanças em funcionários\r\n      if (e.key === FUNCIONARIOS_KEY || e.key === 'registeredUsers' || e.key === 'user') {\r\n        const updatedFuncionarios = getAllPossibleFuncionarios();\r\n        setAllFuncionarios(updatedFuncionarios);\r\n        adicionarRegistrosParaTodosFuncionarios(updatedFuncionarios);\r\n      }\r\n    };\r\n    window.addEventListener('storage', handleStorageChange);\r\n    \r\n    return () => {\r\n      clearInterval(interval);\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n  }, []); // Executar apenas na montagem do componente\r\n\r\n  // Persistir mudanças no estado\r\n  useEffect(() => {\r\n    localStorage.setItem('pontoRegistros', JSON.stringify(pontoRegistros));\r\n  }, [pontoRegistros]);\r\n\r\n  // Listas e filtros\r\n  const funcionarios = [\r\n    ...new Set([\r\n      ...allFuncionarios.map(f => f.nome),\r\n      ...pontoRegistros.map(registro => registro.funcionarioNome)\r\n    ])\r\n  ].filter(Boolean).sort();\r\n\r\n  const datas = [...new Set(pontoRegistros.map(registro => registro.data))];\r\n\r\n  const registrosFiltrados = pontoRegistros.filter(registro => {\r\n    return (\r\n      (filtros.data === '' || registro.data === filtros.data) &&\r\n      (filtros.funcionario === '' || registro.funcionarioNome === filtros.funcionario) &&\r\n      (filtros.status === '' || registro.registros.some(r => r.status === filtros.status))\r\n    );\r\n  });\r\n\r\n  const registrosOrdenados = [...registrosFiltrados].sort((a, b) => {\r\n    const [diaA, mesA, anoA] = a.data.split('/').map(Number);\r\n    const [diaB, mesB, anoB] = b.data.split('/').map(Number);\r\n    const dateA = new Date(anoA, mesA - 1, diaA);\r\n    const dateB = new Date(anoB, mesB - 1, diaB);\r\n    return dateB - dateA;\r\n  });\r\n\r\n  // Início do JSX\r\n  return (\r\n    <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Registros de Ponto</h1>\r\n      \r\n      {/* Botão para forçar atualização da lista */}\r\n      <div className=\"mb-4\">\r\n        <button\r\n          onClick={() => {\r\n            const latestFuncionarios = getLatestFuncionarios();\r\n            setAllFuncionarios(latestFuncionarios);\r\n            adicionarRegistrosParaTodosFuncionarios(latestFuncionarios);\r\n            alert(`Lista atualizada! ${latestFuncionarios.length} funcionários encontrados.`);\r\n          }}\r\n          className=\"bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded-md text-sm\"\r\n        >\r\n          Atualizar Lista de Funcionários ({allFuncionarios.length})\r\n        </button>\r\n        <div className=\"text-xs text-purple-300 mt-1\">\r\n          Lista atualizada em: {new Date().toLocaleTimeString()}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Botões de ação */}\r\n      <div className=\"mt-6 flex flex-wrap gap-4\">\r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n          </svg>\r\n          Exportar Relatório\r\n        </button>\r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n          </svg>\r\n          Notificar Todos com Pendências\r\n        </button>\r\n        <button className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-2 px-4 rounded flex items-center\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n          </svg>\r\n          Gerar Espelho de Ponto\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      <div className=\"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6 mt-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Filtros</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Data</label>\r\n            <select\r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.data}\r\n              onChange={(e) => setFiltros({...filtros, data: e.target.value})}\r\n            >\r\n              <option value=\"\">Todas as datas</option>\r\n              {datas.map((data, index) => (\r\n                <option key={index} value={data}>{data}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">\r\n              Funcionário ({funcionarios.length} disponíveis)\r\n            </label>\r\n            <select\r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.funcionario}\r\n              onChange={(e) => setFiltros({...filtros, funcionario: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os funcionários</option>\r\n              {funcionarios.map((funcionario, index) => (\r\n                <option key={index} value={funcionario}>{funcionario}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Status</label>\r\n            <select\r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.status}\r\n              onChange={(e) => setFiltros({...filtros, status: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os status</option>\r\n              <option value=\"regular\">Regular</option>\r\n              <option value=\"atrasado\">Atrasado</option>\r\n              <option value=\"hora extra\">Hora Extra</option>\r\n              <option value={STATUS_PENDENTE}>Pendente</option>\r\n              <option value=\"falta justificada\">Falta Justificada</option>\r\n              <option value={STATUS_AJUSTADO}>Ajustado</option>\r\n              <option value={STATUS_APROVADO}>Aprovado</option>\r\n              <option value={STATUS_REJEITADO}>Rejeitado</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Tabela de Registros */}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full\">\r\n          <thead>\r\n            <tr className=\"text-purple-300 text-sm border-b border-purple-700\">\r\n              <th className=\"px-4 py-2 text-left\">Funcionário</th>\r\n              <th className=\"px-4 py-2 text-left\">Data</th>\r\n              <th className=\"px-4 py-2 text-left\">Entrada 1</th>\r\n              <th className=\"px-4 py-2 text-left\">Saída 1</th>\r\n              <th className=\"px-4 py-2 text-left\">Entrada 2</th>\r\n              <th className=\"px-4 py-2 text-left\">Saída 2</th>\r\n              <th className=\"px-4 py-2 text-left\">Ações</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {registrosOrdenados.map((registro) => (\r\n              <tr key={registro.id} className=\"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-30\">\r\n                <td className=\"px-4 py-3\">{registro.funcionarioNome}</td>\r\n                <td className=\"px-4 py-3\">{registro.data}</td>\r\n                {registro.registros.map((r, index) => (\r\n                  <td key={index} className=\"px-4 py-3\">\r\n                    {editandoRegistro && editandoRegistro.registroId === registro.id && editandoRegistro.indiceRegistro === index ? (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <input\r\n                          type=\"time\"\r\n                          defaultValue={r.hora !== '--:--' ? r.hora : ''}\r\n                          className=\"bg-purple-800 border border-purple-600 rounded-md p-1 text-white w-24\"\r\n                          ref={el => horaInputRefs.current[`${registro.id}-${index}`] = el}\r\n                        />\r\n                        <div className=\"flex space-x-1\">\r\n                          <button\r\n                            onClick={() => salvarEdicaoPonto(registro.id, index, STATUS_APROVADO)}\r\n                            className=\"text-green-500 hover:text-green-400\"\r\n                            title=\"Aprovar registro\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={() => salvarEdicaoPonto(registro.id, index, STATUS_REJEITADO)}\r\n                            className=\"text-red-500 hover:text-red-400\"\r\n                            title=\"Rejeitar registro\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={() => salvarEdicaoPonto(registro.id, index, STATUS_AJUSTADO)}\r\n                            className=\"text-blue-500 hover:text-blue-400\"\r\n                            title=\"Ajustar registro\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            onClick={cancelarEdicaoPonto}\r\n                            className=\"text-gray-400 hover:text-white\"\r\n                            title=\"Cancelar\"\r\n                          >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span className={r.status === STATUS_PENDENTE || r.status === 'falta' ? 'text-red-400' : ''}>\r\n                          {r.hora}\r\n                        </span>\r\n                        <div className=\"ml-2\">{renderizarStatus(r.status)}</div>\r\n                        <button\r\n                          onClick={() => iniciarEdicaoPonto(registro.id, index)}\r\n                          className=\"text-purple-300 hover:text-white ml-auto\"\r\n                        >\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                ))}\r\n                <td className=\"px-4 py-3\">\r\n                  <div className=\"flex space-x-2 items-center\">\r\n                    {registro.registros.some(r => r.status === STATUS_PENDENTE) && (\r\n                      <button\r\n                        onClick={() => notificarFuncionario(registro.funcionarioId, registro.funcionarioNome)}\r\n                        className=\"bg-purple-600 hover:bg-purple-700 text-white rounded p-1 text-xs flex items-center\"\r\n                        title=\"Notificar funcionário\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n                        </svg>\r\n                        Notificar\r\n                      </button>\r\n                    )}\r\n                    {registro.registros.some(r => r.status === STATUS_PENDENTE) && (\r\n                      <button\r\n                        onClick={() => marcarFaltaJustificada(registro.id)}\r\n                        className=\"bg-orange-600 hover:bg-orange-700 text-white rounded p-1 text-xs flex items-center\"\r\n                        title=\"Marcar falta como justificada\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                        </svg>\r\n                        Justificar\r\n                      </button>\r\n                    )}\r\n                    <button\r\n                      className=\"bg-blue-600 hover:bg-blue-700 text-white rounded p-1 text-xs flex items-center\"\r\n                      title=\"Exportar registro\"\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" />\r\n                      </svg>\r\n                      Exportar\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            {registrosOrdenados.length === 0 && (\r\n              <tr>\r\n                <td colSpan=\"7\" className=\"px-4 py-6 text-center text-purple-300\">\r\n                  Nenhum registro encontrado com os filtros selecionados.\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PontoBatidoTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}