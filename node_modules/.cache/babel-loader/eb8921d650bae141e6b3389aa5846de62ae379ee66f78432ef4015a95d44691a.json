{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport LoginRegisterPage from \"./pages/LoginRegisterPage\";\nimport UserDashboard from \"./pages/UserDashboard\";\nimport AdminDashboard from \"./pages/AdminDashboard\";\n\n// Componente para proteger rotas com base no papel do usuário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  var _user$roles, _user$roles2;\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n\n  // Verificar se o usuário está autenticado\n  if (!(user !== null && user !== void 0 && user.authenticated)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Verificar se o usuário tem o papel necessário para acessar a rota\n  if (requiredRole === \"ADMIN\" && !((_user$roles = user.roles) !== null && _user$roles !== void 0 && _user$roles.includes(\"ADMIN\"))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRole === \"FUNCIONARIO\" && !((_user$roles2 = user.roles) !== null && _user$roles2 !== void 0 && _user$roles2.includes(\"FUNCIONARIO\"))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nconst App = () => {\n  return (\n    /*#__PURE__*/\n    // Certifique-se de que WorkshiftProvider está importado corretamente\n    _jsxDEV(WorkshiftProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LoginRegisterPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"FUNCIONARIO\",\n              children: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"ADMIN\",\n              children: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","LoginRegisterPage","UserDashboard","AdminDashboard","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_user$roles","_user$roles2","user","JSON","parse","localStorage","getItem","authenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","roles","includes","_c","App","WorkshiftProvider","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LoginRegisterPage from \"./pages/LoginRegisterPage\";\r\nimport UserDashboard from \"./pages/UserDashboard\";\r\nimport AdminDashboard from \"./pages/AdminDashboard\";\r\n\r\n// Componente para proteger rotas com base no papel do usuário\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n\r\n  // Verificar se o usuário está autenticado\r\n  if (!user?.authenticated) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Verificar se o usuário tem o papel necessário para acessar a rota\r\n  if (requiredRole === \"ADMIN\" && !user.roles?.includes(\"ADMIN\")) {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  if (requiredRole === \"FUNCIONARIO\" && !user.roles?.includes(\"FUNCIONARIO\")) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    // Certifique-se de que WorkshiftProvider está importado corretamente\r\n    <WorkshiftProvider>\r\n      <Router>\r\n        <Routes>\r\n          {/* Página inicial (login e registro) */}\r\n          <Route path=\"/\" element={<LoginRegisterPage />} />\r\n\r\n          {/* Rota protegida do Dashboard para funcionários */}\r\n          <Route\r\n            path=\"/dashboard\"\r\n            element={\r\n              <ProtectedRoute requiredRole=\"FUNCIONARIO\">\r\n                <UserDashboard />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n\r\n          {/* Rota protegida da Administração apenas para admins */}\r\n          <Route\r\n            path=\"/admin\"\r\n            element={\r\n              <ProtectedRoute requiredRole=\"ADMIN\">\r\n                <AdminDashboard />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n\r\n          {/* Redirecionamento para a página inicial caso a rota não exista */}\r\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n        </Routes>\r\n      </Router>\r\n    </WorkshiftProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}