{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport LoginRegisterPage from \"./pages/LoginRegisterPage\";\nimport UserDashboard from \"./pages/UserDashboard\";\nimport AdminDashboard from \"./pages/AdminDashboard\"; // Corrigindo o caminho\n\n// Componente para proteger rotas com base no papel do usuário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n\n  // Verificar se o usuário está autenticado corretamente\n  if (!(user !== null && user !== void 0 && user.authenticated)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Garante que `roles` é sempre um array\n  const userRoles = Array.isArray(user.roles) ? user.roles : [];\n\n  // Verificar se o usuário tem o papel necessário para acessar a rota\n  if (requiredRole && !userRoles.includes(requiredRole)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginRegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          requiredRole: \"FUNCIONARIO\",\n          children: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          requiredRole: \"ADMIN\",\n          children: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","LoginRegisterPage","UserDashboard","AdminDashboard","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","user","JSON","parse","localStorage","getItem","authenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","userRoles","Array","isArray","roles","includes","_c","App","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LoginRegisterPage from \"./pages/LoginRegisterPage\";\r\nimport UserDashboard from \"./pages/UserDashboard\";\r\nimport AdminDashboard from \"./pages/AdminDashboard\"; // Corrigindo o caminho\r\n\r\n// Componente para proteger rotas com base no papel do usuário\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n\r\n  // Verificar se o usuário está autenticado corretamente\r\n  if (!user?.authenticated) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Garante que `roles` é sempre um array\r\n  const userRoles = Array.isArray(user.roles) ? user.roles : [];\r\n\r\n  // Verificar se o usuário tem o papel necessário para acessar a rota\r\n  if (requiredRole && !userRoles.includes(requiredRole)) {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Página inicial (login e registro) */}\r\n        <Route path=\"/\" element={<LoginRegisterPage />} />\r\n\r\n        {/* Rota protegida do Dashboard para funcionários */}\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={\r\n            <ProtectedRoute requiredRole=\"FUNCIONARIO\">\r\n              <UserDashboard />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n\r\n        {/* Rota protegida da Administração apenas para admins */}\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            <ProtectedRoute requiredRole=\"ADMIN\">\r\n              <AdminDashboard />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n\r\n        {/* Redirecionamento para a página inicial caso a rota não exista */}\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}