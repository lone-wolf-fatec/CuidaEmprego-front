{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\contexts\\\\PontoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// contexts/PontoContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Criar o contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PontoContext = /*#__PURE__*/createContext();\n\n// Criar o Provider\nexport const PontoProvider = ({\n  children\n}) => {\n  _s();\n  // Estado para as solicitações de ajuste\n  const [solicitacoesAjuste, setSolicitacoesAjuste] = useState(() => {\n    const storedSolicitacoes = localStorage.getItem('ajustePontoSolicitacoes');\n    return storedSolicitacoes ? JSON.parse(storedSolicitacoes) : [];\n  });\n\n  // Estado para os registros de ponto\n  const [timeEntries, setTimeEntries] = useState(() => {\n    const storedEntries = localStorage.getItem('timeEntries');\n    return storedEntries ? JSON.parse(storedEntries) : [];\n  });\n\n  // Efeito para atualizar o localStorage quando as solicitações mudarem\n  useEffect(() => {\n    localStorage.setItem('ajustePontoSolicitacoes', JSON.stringify(solicitacoesAjuste));\n  }, [solicitacoesAjuste]);\n\n  // Efeito para atualizar o localStorage quando os registros mudarem\n  useEffect(() => {\n    localStorage.setItem('timeEntries', JSON.stringify(timeEntries));\n  }, [timeEntries]);\n\n  // Função para adicionar uma nova solicitação de ajuste\n  const adicionarSolicitacaoAjuste = solicitacao => {\n    const novaSolicitacao = {\n      ...solicitacao,\n      id: Date.now(),\n      status: 'pendente',\n      dataSolicitacao: new Date().toLocaleDateString('pt-BR')\n    };\n    setSolicitacoesAjuste(solicitacoesAntigas => [novaSolicitacao, ...solicitacoesAntigas]);\n    return novaSolicitacao;\n  };\n\n  // Função para aprovar uma solicitação\n  const aprovarSolicitacao = id => {\n    const solicitacao = solicitacoesAjuste.find(s => s.id === id);\n    if (!solicitacao || solicitacao.status !== 'pendente') return null;\n    const solicitacoesAtualizadas = solicitacoesAjuste.map(s => {\n      if (s.id === id) {\n        return {\n          ...s,\n          status: 'aprovado',\n          dataDecisao: new Date().toLocaleDateString('pt-BR')\n        };\n      }\n      return s;\n    });\n    setSolicitacoesAjuste(solicitacoesAtualizadas);\n\n    // Retorna a solicitação aprovada\n    return solicitacoesAtualizadas.find(s => s.id === id);\n  };\n\n  // Função para rejeitar uma solicitação\n  const rejeitarSolicitacao = (id, observacao) => {\n    const solicitacao = solicitacoesAjuste.find(s => s.id === id);\n    if (!solicitacao || solicitacao.status !== 'pendente') return null;\n    const solicitacoesAtualizadas = solicitacoesAjuste.map(s => {\n      if (s.id === id) {\n        return {\n          ...s,\n          status: 'rejeitado',\n          dataDecisao: new Date().toLocaleDateString('pt-BR'),\n          observacao\n        };\n      }\n      return s;\n    });\n    setSolicitacoesAjuste(solicitacoesAtualizadas);\n\n    // Retorna a solicitação rejeitada\n    return solicitacoesAtualizadas.find(s => s.id === id);\n  };\n\n  // Função para registrar entrada/saída\n  const registrarPonto = (tipo, userData) => {\n    const now = new Date();\n    const newEntry = {\n      type: tipo,\n      time: now.toLocaleTimeString('pt-BR', {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      date: now.toLocaleDateString('pt-BR'),\n      user: userData.name,\n      status: 'pendente',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    };\n    setTimeEntries(entries => [newEntry, ...entries]);\n    return newEntry;\n  };\n\n  // Valores e funções disponibilizados pelo contexto\n  const value = {\n    solicitacoesAjuste,\n    timeEntries,\n    adicionarSolicitacaoAjuste,\n    aprovarSolicitacao,\n    rejeitarSolicitacao,\n    registrarPonto,\n    setTimeEntries\n  };\n  return /*#__PURE__*/_jsxDEV(PontoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 10\n  }, this);\n};\n\n// Hook personalizado para usar o contexto\n_s(PontoProvider, \"IYm40Mapn5JB4y9KFVYNI3gnDmI=\");\n_c = PontoProvider;\nexport const usePonto = () => {\n  _s2();\n  const context = useContext(PontoContext);\n  if (!context) {\n    throw new Error('usePonto deve ser usado dentro de um PontoProvider');\n  }\n  return context;\n};\n_s2(usePonto, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"PontoProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","PontoContext","PontoProvider","children","_s","solicitacoesAjuste","setSolicitacoesAjuste","storedSolicitacoes","localStorage","getItem","JSON","parse","timeEntries","setTimeEntries","storedEntries","setItem","stringify","adicionarSolicitacaoAjuste","solicitacao","novaSolicitacao","id","Date","now","status","dataSolicitacao","toLocaleDateString","solicitacoesAntigas","aprovarSolicitacao","find","s","solicitacoesAtualizadas","map","dataDecisao","rejeitarSolicitacao","observacao","registrarPonto","tipo","userData","newEntry","type","time","toLocaleTimeString","hour","minute","date","user","name","employeeId","employeeName","registeredBy","entries","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePonto","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/contexts/PontoContext.js"],"sourcesContent":["// contexts/PontoContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Criar o contexto\r\nexport const PontoContext = createContext();\r\n\r\n// Criar o Provider\r\nexport const PontoProvider = ({ children }) => {\r\n  // Estado para as solicitações de ajuste\r\n  const [solicitacoesAjuste, setSolicitacoesAjuste] = useState(() => {\r\n    const storedSolicitacoes = localStorage.getItem('ajustePontoSolicitacoes');\r\n    return storedSolicitacoes ? JSON.parse(storedSolicitacoes) : [];\r\n  });\r\n\r\n  // Estado para os registros de ponto\r\n  const [timeEntries, setTimeEntries] = useState(() => {\r\n    const storedEntries = localStorage.getItem('timeEntries');\r\n    return storedEntries ? JSON.parse(storedEntries) : [];\r\n  });\r\n\r\n  // Efeito para atualizar o localStorage quando as solicitações mudarem\r\n  useEffect(() => {\r\n    localStorage.setItem('ajustePontoSolicitacoes', JSON.stringify(solicitacoesAjuste));\r\n  }, [solicitacoesAjuste]);\r\n\r\n  // Efeito para atualizar o localStorage quando os registros mudarem\r\n  useEffect(() => {\r\n    localStorage.setItem('timeEntries', JSON.stringify(timeEntries));\r\n  }, [timeEntries]);\r\n\r\n  // Função para adicionar uma nova solicitação de ajuste\r\n  const adicionarSolicitacaoAjuste = (solicitacao) => {\r\n    const novaSolicitacao = {\r\n      ...solicitacao,\r\n      id: Date.now(),\r\n      status: 'pendente',\r\n      dataSolicitacao: new Date().toLocaleDateString('pt-BR')\r\n    };\r\n    \r\n    setSolicitacoesAjuste(solicitacoesAntigas => [novaSolicitacao, ...solicitacoesAntigas]);\r\n    return novaSolicitacao;\r\n  };\r\n\r\n  // Função para aprovar uma solicitação\r\n  const aprovarSolicitacao = (id) => {\r\n    const solicitacao = solicitacoesAjuste.find(s => s.id === id);\r\n    \r\n    if (!solicitacao || solicitacao.status !== 'pendente') return null;\r\n    \r\n    const solicitacoesAtualizadas = solicitacoesAjuste.map(s => {\r\n      if (s.id === id) {\r\n        return {\r\n          ...s,\r\n          status: 'aprovado',\r\n          dataDecisao: new Date().toLocaleDateString('pt-BR')\r\n        };\r\n      }\r\n      return s;\r\n    });\r\n    \r\n    setSolicitacoesAjuste(solicitacoesAtualizadas);\r\n    \r\n    // Retorna a solicitação aprovada\r\n    return solicitacoesAtualizadas.find(s => s.id === id);\r\n  };\r\n\r\n  // Função para rejeitar uma solicitação\r\n  const rejeitarSolicitacao = (id, observacao) => {\r\n    const solicitacao = solicitacoesAjuste.find(s => s.id === id);\r\n    \r\n    if (!solicitacao || solicitacao.status !== 'pendente') return null;\r\n    \r\n    const solicitacoesAtualizadas = solicitacoesAjuste.map(s => {\r\n      if (s.id === id) {\r\n        return {\r\n          ...s,\r\n          status: 'rejeitado',\r\n          dataDecisao: new Date().toLocaleDateString('pt-BR'),\r\n          observacao\r\n        };\r\n      }\r\n      return s;\r\n    });\r\n    \r\n    setSolicitacoesAjuste(solicitacoesAtualizadas);\r\n    \r\n    // Retorna a solicitação rejeitada\r\n    return solicitacoesAtualizadas.find(s => s.id === id);\r\n  };\r\n\r\n  // Função para registrar entrada/saída\r\n  const registrarPonto = (tipo, userData) => {\r\n    const now = new Date();\r\n    const newEntry = {\r\n      type: tipo,\r\n      time: now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }),\r\n      date: now.toLocaleDateString('pt-BR'),\r\n      user: userData.name,\r\n      status: 'pendente',\r\n      employeeId: userData.id,\r\n      employeeName: userData.name,\r\n      registeredBy: userData.name\r\n    };\r\n    \r\n    setTimeEntries(entries => [newEntry, ...entries]);\r\n    return newEntry;\r\n  };\r\n\r\n  // Valores e funções disponibilizados pelo contexto\r\n  const value = {\r\n    solicitacoesAjuste,\r\n    timeEntries,\r\n    adicionarSolicitacaoAjuste,\r\n    aprovarSolicitacao,\r\n    rejeitarSolicitacao,\r\n    registrarPonto,\r\n    setTimeEntries\r\n  };\r\n\r\n  return <PontoContext.Provider value={value}>{children}</PontoContext.Provider>;\r\n};\r\n\r\n// Hook personalizado para usar o contexto\r\nexport const usePonto = () => {\r\n  const context = useContext(PontoContext);\r\n  if (!context) {\r\n    throw new Error('usePonto deve ser usado dentro de um PontoProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}