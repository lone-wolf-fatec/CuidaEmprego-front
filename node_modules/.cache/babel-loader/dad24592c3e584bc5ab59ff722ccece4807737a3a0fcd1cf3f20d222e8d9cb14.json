{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\context\\\\PontoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Criar o Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PontoContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para facilitar o uso do context\nexport const usePonto = () => {\n  _s();\n  return useContext(PontoContext);\n};\n\n// Provider Component\n_s(usePonto, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst PontoProvider = ({\n  children\n}) => {\n  _s2();\n  // Obter dados do usuário logado do localStorage\n  const [userData, setUserData] = useState(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user') || '{}');\n    return {\n      id: storedUser.id || 1,\n      name: storedUser.name || 'Usuário',\n      email: storedUser.email || '',\n      initials: getInitials(storedUser.name) || 'U',\n      isAdmin: storedUser.isAdmin || false\n    };\n  });\n\n  // Registros de ponto\n  const [timeEntries, setTimeEntries] = useState(() => {\n    const storedEntries = localStorage.getItem('timeEntries');\n    if (storedEntries) {\n      try {\n        const parsedEntries = JSON.parse(storedEntries);\n        const validEntries = Array.isArray(parsedEntries) ? parsedEntries.filter(entry => entry && typeof entry === 'object' && entry.type && typeof entry.type === 'string' && entry.time && entry.date) : [];\n        if (validEntries.length > 0) {\n          return validEntries;\n        }\n      } catch (error) {\n        console.error('Erro ao carregar registros de ponto:', error);\n      }\n    }\n    return [{\n      type: 'entrada',\n      time: '08:03',\n      date: '12/03/2025',\n      user: userData.name,\n      status: 'aprovado',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    }, {\n      type: 'saída',\n      time: '12:00',\n      date: '12/03/2025',\n      user: userData.name,\n      status: 'aprovado',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    }, {\n      type: 'entrada',\n      time: '13:05',\n      date: '12/03/2025',\n      user: userData.name,\n      status: 'aprovado',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    }, {\n      type: 'saída',\n      time: '17:30',\n      date: '12/03/2025',\n      user: userData.name,\n      status: 'aprovado',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    }, {\n      type: 'entrada',\n      time: '08:00',\n      date: '13/03/2025',\n      user: userData.name,\n      status: 'aprovado',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    }];\n  });\n\n  // Solicitações de ajuste\n  const [solicitacoesAjuste, setSolicitacoesAjuste] = useState(() => {\n    const storedSolicitacoes = localStorage.getItem('ajustePontoSolicitacoes');\n    return storedSolicitacoes ? JSON.parse(storedSolicitacoes) : [{\n      id: 1,\n      funcionarioId: 102,\n      funcionarioNome: 'Maria Oliveira',\n      data: '19/03/2025',\n      tipoRegistro: 'entrada',\n      horaOriginal: '08:15',\n      horaCorreta: '08:00',\n      motivo: 'Problema no sistema de ponto',\n      status: 'pendente',\n      dataSolicitacao: '19/03/2025'\n    }, {\n      id: 2,\n      funcionarioId: 103,\n      funcionarioNome: 'Carlos Pereira',\n      data: '18/03/2025',\n      tipoRegistro: 'saída',\n      horaOriginal: '17:45',\n      horaCorreta: '18:30',\n      motivo: 'Reunião que se estendeu além do horário',\n      status: 'pendente',\n      dataSolicitacao: '18/03/2025'\n    }, {\n      id: 3,\n      funcionarioId: 104,\n      funcionarioNome: 'Ana Souza',\n      data: '17/03/2025',\n      tipoRegistro: 'entrada',\n      horaOriginal: '--:--',\n      horaCorreta: '08:05',\n      motivo: 'Esqueci de registrar o ponto na entrada',\n      status: 'aprovado',\n      dataSolicitacao: '17/03/2025',\n      dataDecisao: '18/03/2025'\n    }, {\n      id: 4,\n      funcionarioId: 101,\n      funcionarioNome: 'João Silva',\n      data: '15/03/2025',\n      tipoRegistro: 'saída',\n      horaOriginal: '16:30',\n      horaCorreta: '17:00',\n      motivo: 'Ajuste incorreto de ponto',\n      status: 'rejeitado',\n      dataSolicitacao: '15/03/2025',\n      dataDecisao: '16/03/2025',\n      observacao: 'Sem evidências que comprovem o horário correto'\n    }];\n  });\n\n  // Atualiza os registros timeEntries quando o userData mudar\n  useEffect(() => {\n    if (userData.name !== 'Usuário') {\n      setTimeEntries(prevEntries => prevEntries.map(entry => ({\n        ...entry,\n        user: userData.name,\n        employeeName: userData.name,\n        registeredBy: userData.name\n      })));\n    }\n  }, [userData.name]);\n\n  // Efeito para salvar solicitações no localStorage quando elas mudarem\n  useEffect(() => {\n    localStorage.setItem('ajustePontoSolicitacoes', JSON.stringify(solicitacoesAjuste));\n  }, [solicitacoesAjuste]);\n\n  // Efeito para salvar time entries no localStorage quando elas mudarem\n  useEffect(() => {\n    localStorage.setItem('timeEntries', JSON.stringify(timeEntries));\n  }, [timeEntries]);\n\n  // Função para enviar uma solicitação de correção\n  const enviarSolicitacaoCorrecao = dadosCorrecao => {\n    // Formatar a data no padrão brasileiro se vier no formato ISO\n    let dataFormatada = dadosCorrecao.date;\n    if (dadosCorrecao.date && dadosCorrecao.date.includes('-')) {\n      const [ano, mes, dia] = dadosCorrecao.date.split('-');\n      dataFormatada = `${dia}/${mes}/${ano}`;\n    }\n\n    // Converter o formato da correção para o formato das solicitações de ajuste\n    const novaSolicitacao = {\n      id: Date.now(),\n      funcionarioId: userData.id,\n      funcionarioNome: userData.name,\n      data: dataFormatada,\n      tipoRegistro: dadosCorrecao.type || 'entrada',\n      horaOriginal: dadosCorrecao.originalTime || '--:--',\n      horaCorreta: dadosCorrecao.newTime,\n      motivo: dadosCorrecao.reason,\n      status: 'pendente',\n      dataSolicitacao: new Date().toLocaleDateString('pt-BR')\n    };\n\n    // Adicionar à lista de solicitações\n    const novasSolicitacoes = [novaSolicitacao, ...solicitacoesAjuste];\n    setSolicitacoesAjuste(novasSolicitacoes);\n\n    // Criar notificação para o admin\n    const adminNotification = {\n      id: Date.now() + Math.random(),\n      message: `${userData.name} solicitou correção de ponto para ${dataFormatada}`,\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    };\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\n    localStorage.setItem('adminNotifications', JSON.stringify([adminNotification, ...currentAdminNotifications]));\n    return novaSolicitacao;\n  };\n\n  // Função para registrar entrada ou saída de ponto\n  const registrarPonto = tipo => {\n    const now = new Date();\n    const newEntry = {\n      type: tipo,\n      time: now.toLocaleTimeString('pt-BR', {\n        hour: '2-digit',\n        minute: '2-digit'\n      }),\n      date: now.toLocaleDateString('pt-BR'),\n      user: userData.name,\n      status: 'pendente',\n      employeeId: userData.id,\n      employeeName: userData.name,\n      registeredBy: userData.name\n    };\n    const updatedEntries = [newEntry, ...timeEntries];\n    setTimeEntries(updatedEntries);\n\n    // Criar notificação para o admin\n    const adminNotification = {\n      id: Date.now() + Math.random(),\n      message: `${userData.name} registrou ${tipo} às ${newEntry.time}`,\n      date: now.toLocaleDateString('pt-BR'),\n      read: false\n    };\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\n    localStorage.setItem('adminNotifications', JSON.stringify([adminNotification, ...currentAdminNotifications]));\n    return newEntry;\n  };\n\n  // Função auxiliar para pegar iniciais do nome\n  function getInitials(name) {\n    if (!name) return 'U';\n    const nameParts = name.split(' ');\n    if (nameParts.length === 1) return nameParts[0].charAt(0).toUpperCase();\n    return (nameParts[0].charAt(0) + nameParts[nameParts.length - 1].charAt(0)).toUpperCase();\n  }\n\n  // Valores a serem disponibilizados através do Context\n  const value = {\n    userData,\n    setUserData,\n    timeEntries,\n    setTimeEntries,\n    solicitacoesAjuste,\n    setSolicitacoesAjuste,\n    enviarSolicitacaoCorrecao,\n    registrarPonto\n  };\n  return /*#__PURE__*/_jsxDEV(PontoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 10\n  }, this);\n};\n_s2(PontoProvider, \"38qL27o2/W7N8pUcv144hQPC1Ls=\");\n_c = PontoProvider;\nexport default PontoContext;\nvar _c;\n$RefreshReg$(_c, \"PontoProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","PontoContext","usePonto","_s","PontoProvider","children","_s2","userData","setUserData","storedUser","JSON","parse","localStorage","getItem","id","name","email","initials","getInitials","isAdmin","timeEntries","setTimeEntries","storedEntries","parsedEntries","validEntries","Array","isArray","filter","entry","type","time","date","length","error","console","user","status","employeeId","employeeName","registeredBy","solicitacoesAjuste","setSolicitacoesAjuste","storedSolicitacoes","funcionarioId","funcionarioNome","data","tipoRegistro","horaOriginal","horaCorreta","motivo","dataSolicitacao","dataDecisao","observacao","prevEntries","map","setItem","stringify","enviarSolicitacaoCorrecao","dadosCorrecao","dataFormatada","includes","ano","mes","dia","split","novaSolicitacao","Date","now","originalTime","newTime","reason","toLocaleDateString","novasSolicitacoes","adminNotification","Math","random","message","read","currentAdminNotifications","registrarPonto","tipo","newEntry","toLocaleTimeString","hour","minute","updatedEntries","nameParts","charAt","toUpperCase","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/context/PontoContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\n// Criar o Context\r\nconst PontoContext = createContext();\r\n\r\n// Hook personalizado para facilitar o uso do context\r\nexport const usePonto = () => useContext(PontoContext);\r\n\r\n// Provider Component\r\nconst PontoProvider = ({ children }) => {\r\n  // Obter dados do usuário logado do localStorage\r\n  const [userData, setUserData] = useState(() => {\r\n    const storedUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n    return {\r\n      id: storedUser.id || 1,\r\n      name: storedUser.name || 'Usuário',\r\n      email: storedUser.email || '',\r\n      initials: getInitials(storedUser.name) || 'U',\r\n      isAdmin: storedUser.isAdmin || false\r\n    };\r\n  });\r\n\r\n  // Registros de ponto\r\n  const [timeEntries, setTimeEntries] = useState(() => {\r\n    const storedEntries = localStorage.getItem('timeEntries');\r\n    if (storedEntries) {\r\n      try {\r\n        const parsedEntries = JSON.parse(storedEntries);\r\n        const validEntries = Array.isArray(parsedEntries) ? \r\n          parsedEntries.filter(entry => \r\n            entry && typeof entry === 'object' && \r\n            entry.type && typeof entry.type === 'string' &&\r\n            entry.time && entry.date\r\n          ) : [];\r\n          \r\n        if (validEntries.length > 0) {\r\n          return validEntries;\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao carregar registros de ponto:', error);\r\n      }\r\n    }\r\n    \r\n    return [\r\n      { type: 'entrada', time: '08:03', date: '12/03/2025', user: userData.name, status: 'aprovado', employeeId: userData.id, employeeName: userData.name, registeredBy: userData.name },\r\n      { type: 'saída', time: '12:00', date: '12/03/2025', user: userData.name, status: 'aprovado', employeeId: userData.id, employeeName: userData.name, registeredBy: userData.name },\r\n      { type: 'entrada', time: '13:05', date: '12/03/2025', user: userData.name, status: 'aprovado', employeeId: userData.id, employeeName: userData.name, registeredBy: userData.name },\r\n      { type: 'saída', time: '17:30', date: '12/03/2025', user: userData.name, status: 'aprovado', employeeId: userData.id, employeeName: userData.name, registeredBy: userData.name },\r\n      { type: 'entrada', time: '08:00', date: '13/03/2025', user: userData.name, status: 'aprovado', employeeId: userData.id, employeeName: userData.name, registeredBy: userData.name },\r\n    ];\r\n  });\r\n\r\n  // Solicitações de ajuste\r\n  const [solicitacoesAjuste, setSolicitacoesAjuste] = useState(() => {\r\n    const storedSolicitacoes = localStorage.getItem('ajustePontoSolicitacoes');\r\n    return storedSolicitacoes ? JSON.parse(storedSolicitacoes) : [\r\n      { \r\n        id: 1, \r\n        funcionarioId: 102, \r\n        funcionarioNome: 'Maria Oliveira', \r\n        data: '19/03/2025', \r\n        tipoRegistro: 'entrada',\r\n        horaOriginal: '08:15',\r\n        horaCorreta: '08:00',\r\n        motivo: 'Problema no sistema de ponto',\r\n        status: 'pendente',\r\n        dataSolicitacao: '19/03/2025'\r\n      },\r\n      { \r\n        id: 2, \r\n        funcionarioId: 103, \r\n        funcionarioNome: 'Carlos Pereira', \r\n        data: '18/03/2025', \r\n        tipoRegistro: 'saída',\r\n        horaOriginal: '17:45',\r\n        horaCorreta: '18:30',\r\n        motivo: 'Reunião que se estendeu além do horário',\r\n        status: 'pendente',\r\n        dataSolicitacao: '18/03/2025'\r\n      },\r\n      { \r\n        id: 3, \r\n        funcionarioId: 104, \r\n        funcionarioNome: 'Ana Souza', \r\n        data: '17/03/2025', \r\n        tipoRegistro: 'entrada',\r\n        horaOriginal: '--:--',\r\n        horaCorreta: '08:05',\r\n        motivo: 'Esqueci de registrar o ponto na entrada',\r\n        status: 'aprovado',\r\n        dataSolicitacao: '17/03/2025',\r\n        dataDecisao: '18/03/2025'\r\n      },\r\n      { \r\n        id: 4, \r\n        funcionarioId: 101, \r\n        funcionarioNome: 'João Silva', \r\n        data: '15/03/2025', \r\n        tipoRegistro: 'saída',\r\n        horaOriginal: '16:30',\r\n        horaCorreta: '17:00',\r\n        motivo: 'Ajuste incorreto de ponto',\r\n        status: 'rejeitado',\r\n        dataSolicitacao: '15/03/2025',\r\n        dataDecisao: '16/03/2025',\r\n        observacao: 'Sem evidências que comprovem o horário correto'\r\n      }\r\n    ];\r\n  });\r\n\r\n  // Atualiza os registros timeEntries quando o userData mudar\r\n  useEffect(() => {\r\n    if (userData.name !== 'Usuário') {\r\n      setTimeEntries(prevEntries => \r\n        prevEntries.map(entry => ({\r\n          ...entry,\r\n          user: userData.name,\r\n          employeeName: userData.name,\r\n          registeredBy: userData.name\r\n        }))\r\n      );\r\n    }\r\n  }, [userData.name]);\r\n\r\n  // Efeito para salvar solicitações no localStorage quando elas mudarem\r\n  useEffect(() => {\r\n    localStorage.setItem('ajustePontoSolicitacoes', JSON.stringify(solicitacoesAjuste));\r\n  }, [solicitacoesAjuste]);\r\n\r\n  // Efeito para salvar time entries no localStorage quando elas mudarem\r\n  useEffect(() => {\r\n    localStorage.setItem('timeEntries', JSON.stringify(timeEntries));\r\n  }, [timeEntries]);\r\n\r\n  // Função para enviar uma solicitação de correção\r\n  const enviarSolicitacaoCorrecao = (dadosCorrecao) => {\r\n    // Formatar a data no padrão brasileiro se vier no formato ISO\r\n    let dataFormatada = dadosCorrecao.date;\r\n    if (dadosCorrecao.date && dadosCorrecao.date.includes('-')) {\r\n      const [ano, mes, dia] = dadosCorrecao.date.split('-');\r\n      dataFormatada = `${dia}/${mes}/${ano}`;\r\n    }\r\n\r\n    // Converter o formato da correção para o formato das solicitações de ajuste\r\n    const novaSolicitacao = {\r\n      id: Date.now(), \r\n      funcionarioId: userData.id,\r\n      funcionarioNome: userData.name,\r\n      data: dataFormatada,\r\n      tipoRegistro: dadosCorrecao.type || 'entrada',\r\n      horaOriginal: dadosCorrecao.originalTime || '--:--',\r\n      horaCorreta: dadosCorrecao.newTime,\r\n      motivo: dadosCorrecao.reason,\r\n      status: 'pendente',\r\n      dataSolicitacao: new Date().toLocaleDateString('pt-BR')\r\n    };\r\n\r\n    // Adicionar à lista de solicitações\r\n    const novasSolicitacoes = [novaSolicitacao, ...solicitacoesAjuste];\r\n    setSolicitacoesAjuste(novasSolicitacoes);\r\n    \r\n    // Criar notificação para o admin\r\n    const adminNotification = {\r\n      id: Date.now() + Math.random(),\r\n      message: `${userData.name} solicitou correção de ponto para ${dataFormatada}`,\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    };\r\n    \r\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\r\n    localStorage.setItem('adminNotifications', JSON.stringify([adminNotification, ...currentAdminNotifications]));\r\n\r\n    return novaSolicitacao;\r\n  };\r\n\r\n  // Função para registrar entrada ou saída de ponto\r\n  const registrarPonto = (tipo) => {\r\n    const now = new Date();\r\n    const newEntry = {\r\n      type: tipo,\r\n      time: now.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' }),\r\n      date: now.toLocaleDateString('pt-BR'),\r\n      user: userData.name,\r\n      status: 'pendente',\r\n      employeeId: userData.id,\r\n      employeeName: userData.name,\r\n      registeredBy: userData.name\r\n    };\r\n    \r\n    const updatedEntries = [newEntry, ...timeEntries];\r\n    setTimeEntries(updatedEntries);\r\n    \r\n    // Criar notificação para o admin\r\n    const adminNotification = {\r\n      id: Date.now() + Math.random(),\r\n      message: `${userData.name} registrou ${tipo} às ${newEntry.time}`,\r\n      date: now.toLocaleDateString('pt-BR'),\r\n      read: false\r\n    };\r\n    \r\n    const currentAdminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\r\n    localStorage.setItem('adminNotifications', JSON.stringify([adminNotification, ...currentAdminNotifications]));\r\n    \r\n    return newEntry;\r\n  };\r\n\r\n  // Função auxiliar para pegar iniciais do nome\r\n  function getInitials(name) {\r\n    if (!name) return 'U';\r\n    const nameParts = name.split(' ');\r\n    if (nameParts.length === 1) return nameParts[0].charAt(0).toUpperCase();\r\n    return (nameParts[0].charAt(0) + nameParts[nameParts.length - 1].charAt(0)).toUpperCase();\r\n  }\r\n\r\n  // Valores a serem disponibilizados através do Context\r\n  const value = {\r\n    userData,\r\n    setUserData,\r\n    timeEntries,\r\n    setTimeEntries,\r\n    solicitacoesAjuste,\r\n    setSolicitacoesAjuste,\r\n    enviarSolicitacaoCorrecao,\r\n    registrarPonto\r\n  };\r\n\r\n  return <PontoContext.Provider value={value}>{children}</PontoContext.Provider>;\r\n};\r\n\r\nexport default PontoContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}