{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Criando o contexto de autenticação\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para usar o contexto\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Provedor do contexto de autenticação\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  // Estado para armazenar os dados do usuário\n  const [user, setUser] = useState(null);\n  // Estado para armazenar todos os funcionários registrados\n  const [allUsers, setAllUsers] = useState([]);\n  // Estado para verificar se está carregando\n  const [loading, setLoading] = useState(true);\n\n  // Efeito para carregar os dados do usuário do localStorage\n  useEffect(() => {\n    const loadUserData = () => {\n      try {\n        // Carrega o usuário atual\n        const userData = JSON.parse(localStorage.getItem('user') || '{}');\n\n        // Carrega todos os usuários registrados\n        const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n\n        // Formata os usuários para serem usados nos seletores\n        const formattedUsers = registeredUsers.map(user => ({\n          id: user.id,\n          nome: user.name\n        }));\n\n        // Atualiza os estados\n        setUser(userData);\n        setAllUsers(formattedUsers);\n      } catch (error) {\n        console.error('Erro ao carregar dados de usuário:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUserData();\n  }, []);\n\n  // Função para fazer login\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // Função para fazer registro\n  const register = userData => {\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n\n    // Adiciona novo usuário\n    const newUser = {\n      ...userData,\n      id: registeredUsers.length + 1,\n      createdAt: new Date().toISOString()\n    };\n\n    // Atualiza lista de usuários\n    const updatedUsers = [...registeredUsers, newUser];\n    localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n\n    // Atualiza a lista de todos os usuários no estado\n    setAllUsers([...allUsers, {\n      id: newUser.id,\n      nome: newUser.name\n    }]);\n    return newUser;\n  };\n\n  // Função para fazer logout\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  // Valor a ser disponibilizado pelo contexto\n  const value = {\n    user,\n    allUsers,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"s89ADY7IVWCke2TurzbLPcekTcE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","allUsers","setAllUsers","loading","setLoading","loadUserData","userData","JSON","parse","localStorage","getItem","registeredUsers","formattedUsers","map","id","nome","name","error","console","login","setItem","stringify","register","newUser","length","createdAt","Date","toISOString","updatedUsers","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Criando o contexto de autenticação\r\nconst AuthContext = createContext();\r\n\r\n// Hook personalizado para usar o contexto\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// Provedor do contexto de autenticação\r\nexport const AuthProvider = ({ children }) => {\r\n  // Estado para armazenar os dados do usuário\r\n  const [user, setUser] = useState(null);\r\n  // Estado para armazenar todos os funcionários registrados\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  // Estado para verificar se está carregando\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Efeito para carregar os dados do usuário do localStorage\r\n  useEffect(() => {\r\n    const loadUserData = () => {\r\n      try {\r\n        // Carrega o usuário atual\r\n        const userData = JSON.parse(localStorage.getItem('user') || '{}');\r\n        \r\n        // Carrega todos os usuários registrados\r\n        const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n        \r\n        // Formata os usuários para serem usados nos seletores\r\n        const formattedUsers = registeredUsers.map(user => ({\r\n          id: user.id,\r\n          nome: user.name\r\n        }));\r\n        \r\n        // Atualiza os estados\r\n        setUser(userData);\r\n        setAllUsers(formattedUsers);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados de usuário:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUserData();\r\n  }, []);\r\n\r\n  // Função para fazer login\r\n  const login = (userData) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  // Função para fazer registro\r\n  const register = (userData) => {\r\n    const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n    \r\n    // Adiciona novo usuário\r\n    const newUser = {\r\n      ...userData,\r\n      id: registeredUsers.length + 1,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    // Atualiza lista de usuários\r\n    const updatedUsers = [...registeredUsers, newUser];\r\n    localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\r\n    \r\n    // Atualiza a lista de todos os usuários no estado\r\n    setAllUsers([...allUsers, { id: newUser.id, nome: newUser.name }]);\r\n    \r\n    return newUser;\r\n  };\r\n\r\n  // Função para fazer logout\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  // Valor a ser disponibilizado pelo contexto\r\n  const value = {\r\n    user,\r\n    allUsers,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}