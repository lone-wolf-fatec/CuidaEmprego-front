{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\components\\\\FolgaTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolgaTab = () => {\n  _s();\n  // Estado para os registros de folgas\n  const [folgaEntries, setFolgaEntries] = useState(() => {\n    const storedFolgas = localStorage.getItem('folgaEntries');\n    return storedFolgas ? JSON.parse(storedFolgas) : [{\n      id: 1,\n      funcionarioId: 101,\n      funcionarioNome: 'João Silva',\n      data: '22/03/2025',\n      tipo: 'compensação',\n      periodo: 'dia',\n      status: 'aprovado',\n      motivo: 'Compensação por hora extra'\n    }, {\n      id: 2,\n      funcionarioId: 102,\n      funcionarioNome: 'Maria Oliveira',\n      data: '25/03/2025',\n      tipo: 'abono',\n      periodo: 'dia',\n      status: 'pendente',\n      motivo: 'Consulta médica'\n    }, {\n      id: 3,\n      funcionarioId: 103,\n      funcionarioNome: 'Carlos Pereira',\n      data: '28/03/2025',\n      tipo: 'banco de horas',\n      periodo: 'tarde',\n      status: 'rejeitado',\n      motivo: 'Assuntos pessoais',\n      observacao_rejeicao: 'Período com reunião importante agendada'\n    }];\n  });\n\n  // Estados para nova folga\n  const [newFolga, setNewFolga] = useState({\n    funcionarioId: '',\n    funcionarioNome: '',\n    data: '',\n    tipo: 'abono',\n    periodo: 'dia',\n    motivo: ''\n  });\n\n  // Estado para armazenar funcionários do localStorage\n  const [localFuncionarios, setLocalFuncionarios] = useState([]);\n\n  // Estado para armazenar todos os funcionários possíveis consolidados\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\n\n  // Estado para modal de rejeição\n  const [modalRejeitarAberto, setModalRejeitarAberto] = useState(false);\n  const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\n  const [observacaoRejeicao, setObservacaoRejeicao] = useState('');\n\n  // Estado para filtros\n  const [filtros, setFiltros] = useState({\n    status: '',\n    funcionario: '',\n    tipo: '',\n    periodo: ''\n  });\n\n  // Função para obter todos os funcionários possíveis de todas as fontes\n  const getAllPossibleFuncionarios = () => {\n    try {\n      // 1. Obter do registeredUsers\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\n      const funcionariosFromUsers = registeredUsers.map(user => ({\n        id: user.id,\n        nome: user.name || user.nome,\n        bancoHoras: user.bancoHoras || 0,\n        abonos: user.abonos || 0,\n        diasFeriasDisponiveis: user.diasFeriasDisponiveis || 30\n      }));\n\n      // 2. Obter do localStorage \"funcionarios\"\n      const storedFuncionarios = JSON.parse(localStorage.getItem('funcionarios') || '[]');\n\n      // 3. Obter do localFuncionarios\n      const localFuncs = localFuncionarios || [];\n\n      // 4. Obter funcionários únicos de folgaEntries\n      const folgaFuncionarios = folgaEntries.map(folga => ({\n        id: folga.funcionarioId,\n        nome: folga.funcionarioNome\n      }));\n\n      // 5. Buscar usuário atual do localStorage (se existir)\n      let currentUser = null;\n      try {\n        const userJson = localStorage.getItem('user');\n        if (userJson) {\n          const user = JSON.parse(userJson);\n          if (user && user.id) {\n            currentUser = {\n              id: user.id,\n              nome: user.name || user.displayName || user.nome,\n              bancoHoras: user.bancoHoras || 0,\n              abonos: user.abonos || 0,\n              diasFeriasDisponiveis: user.diasFeriasDisponiveis || 30\n            };\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao obter usuário atual:', error);\n      }\n\n      // 6. Buscar dados de ajustes de ponto para extrair funcionários\n      const ajustesData = JSON.parse(localStorage.getItem('ajustePontoSolicitacoes') || '[]');\n      const ajustesFuncionarios = ajustesData.map(ajuste => ({\n        id: ajuste.funcionarioId,\n        nome: ajuste.funcionarioNome\n      }));\n\n      // 7. Criar um mapa para eliminar duplicatas por ID\n      const funcionariosMap = new Map();\n\n      // Adicionar de todas as fontes\n      [...funcionariosFromUsers, ...storedFuncionarios, ...localFuncs, ...folgaFuncionarios, ...ajustesFuncionarios, ...(currentUser ? [currentUser] : [])].forEach(func => {\n        if (func && func.id) {\n          // Se o funcionário já existe no mapa, manter valores não-nulos\n          if (funcionariosMap.has(func.id)) {\n            const existingFunc = funcionariosMap.get(func.id);\n            funcionariosMap.set(func.id, {\n              id: func.id,\n              nome: func.nome || existingFunc.nome,\n              bancoHoras: func.bancoHoras !== undefined ? func.bancoHoras : existingFunc.bancoHoras,\n              abonos: func.abonos !== undefined ? func.abonos : existingFunc.abonos,\n              diasFeriasDisponiveis: func.diasFeriasDisponiveis !== undefined ? func.diasFeriasDisponiveis : existingFunc.diasFeriasDisponiveis\n            });\n          } else {\n            // Garantir valores padrão para propriedades ausentes\n            funcionariosMap.set(func.id, {\n              id: func.id,\n              nome: func.nome,\n              bancoHoras: func.bancoHoras !== undefined ? func.bancoHoras : 0,\n              abonos: func.abonos !== undefined ? func.abonos : 0,\n              diasFeriasDisponiveis: func.diasFeriasDisponiveis !== undefined ? func.diasFeriasDisponiveis : 30\n            });\n          }\n        }\n      });\n\n      // Converter de volta para array\n      return Array.from(funcionariosMap.values());\n    } catch (error) {\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\n      return [];\n    }\n  };\n\n  // useEffect para manter a lista atualizada\n  useEffect(() => {\n    const updateAllFuncionarios = () => {\n      const allPossible = getAllPossibleFuncionarios();\n      setAllFuncionarios(allPossible);\n      console.log('Lista completa de funcionários atualizada:', allPossible);\n    };\n\n    // Atualizar logo no início\n    updateAllFuncionarios();\n\n    // E a cada 2 segundos\n    const interval = setInterval(updateAllFuncionarios, 2000);\n    return () => clearInterval(interval);\n  }, [localFuncionarios, folgaEntries]);\n\n  // SOLUÇÃO 3: Obter dados diretamente do localStorage e sincronizar com o estado\n  useEffect(() => {\n    const getFuncionariosFromLocalStorage = () => {\n      try {\n        const stored = localStorage.getItem('funcionarios');\n        return stored ? JSON.parse(stored) : [];\n      } catch (error) {\n        console.error(\"Erro ao ler funcionários do localStorage:\", error);\n        return [];\n      }\n    };\n    setLocalFuncionarios(getFuncionariosFromLocalStorage());\n\n    // Atualizar a cada 5 segundos\n    const interval = setInterval(() => {\n      setLocalFuncionarios(getFuncionariosFromLocalStorage());\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // SOLUÇÃO 4: Adicionar evento de armazenamento para sincronização entre abas\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === 'funcionarios') {\n        setLocalFuncionarios(JSON.parse(e.newValue || '[]'));\n      }\n\n      // Verificar também outras mudanças relevantes\n      if (['registeredUsers', 'user', 'ajustePontoSolicitacoes'].includes(e.key)) {\n        const allPossible = getAllPossibleFuncionarios();\n        setAllFuncionarios(allPossible);\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Verificar notificações de admin\n  useEffect(() => {\n    const checkAdminNotifications = () => {\n      const adminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\n      const unreadNotifications = adminNotifications.filter(n => !n.read && n.type === 'novoFuncionario');\n      if (unreadNotifications.length > 0) {\n        console.log(\"FolgaTab - Notificações não lidas de novos funcionários:\", unreadNotifications);\n        // Marcar como lidas\n        const updatedNotifications = adminNotifications.map(n => {\n          if (n.type === 'novoFuncionario' && !n.read) {\n            return {\n              ...n,\n              read: true\n            };\n          }\n          return n;\n        });\n        localStorage.setItem('adminNotifications', JSON.stringify(updatedNotifications));\n      }\n    };\n\n    // Verificar notificações ao montar e a cada 10 segundos\n    checkAdminNotifications();\n    const notifInterval = setInterval(checkAdminNotifications, 10000);\n    return () => clearInterval(notifInterval);\n  }, []);\n\n  // Salvar folgas no localStorage quando mudar\n  useEffect(() => {\n    localStorage.setItem('folgaEntries', JSON.stringify(folgaEntries));\n  }, [folgaEntries]);\n\n  // Filtrar folgas\n  const folgasFiltradas = folgaEntries.filter(folga => {\n    const matchStatus = filtros.status === '' || folga.status === filtros.status;\n    const matchFuncionario = filtros.funcionario === '' || folga.funcionarioNome === filtros.funcionario;\n    const matchTipo = filtros.tipo === '' || folga.tipo === filtros.tipo;\n\n    // Implementação básica do filtro de período\n    let matchPeriodo = true;\n    if (filtros.periodo === 'semana') {\n      const hoje = new Date();\n      const dataLimite = new Date();\n      dataLimite.setDate(hoje.getDate() + 7);\n      const partesData = folga.data.split('/');\n      const dataFolga = new Date(parseInt(partesData[2]), parseInt(partesData[1]) - 1, parseInt(partesData[0]));\n      matchPeriodo = dataFolga <= dataLimite && dataFolga >= hoje;\n    }\n    return matchStatus && matchFuncionario && matchTipo && matchPeriodo;\n  });\n\n  // Ordenar por data (mais próximas primeiro)\n  const folgasOrdenadas = [...folgasFiltradas].sort((a, b) => {\n    // Converter datas do formato DD/MM/YYYY para objetos Date para comparação\n    const [diaA, mesA, anoA] = a.data.split('/').map(Number);\n    const [diaB, mesB, anoB] = b.data.split('/').map(Number);\n    const dateA = new Date(anoA, mesA - 1, diaA);\n    const dateB = new Date(anoB, mesB - 1, diaB);\n    return dateA - dateB; // Ordem crescente (mais próxima primeiro)\n  });\n\n  // Selecionar funcionário para nova folga - FUNÇÃO CORRIGIDA\n  const handleSelecionarFuncionario = e => {\n    const funcionarioId = parseInt(e.target.value);\n    if (funcionarioId) {\n      // Procurar em allFuncionarios em vez da lista original\n      const funcionarioSelecionado = allFuncionarios.find(f => f.id === funcionarioId);\n      if (funcionarioSelecionado) {\n        console.log(\"Funcionário selecionado:\", funcionarioSelecionado);\n        setNewFolga({\n          ...newFolga,\n          funcionarioId: funcionarioId,\n          funcionarioNome: funcionarioSelecionado.nome\n        });\n      } else {\n        console.warn(\"Funcionário não encontrado para ID:\", funcionarioId);\n      }\n    } else {\n      setNewFolga({\n        ...newFolga,\n        funcionarioId: '',\n        funcionarioNome: ''\n      });\n    }\n  };\n\n  // Formatar data para DD/MM/YYYY\n  const formatarData = data => {\n    if (!data || data.includes('/')) return data;\n    const [ano, mes, dia] = data.split('-');\n    return `${dia}/${mes}/${ano}`;\n  };\n\n  // Adicionar nova folga\n  const handleAddFolga = e => {\n    e.preventDefault();\n    if (!newFolga.funcionarioId || !newFolga.data || !newFolga.motivo) {\n      alert('Por favor, preencha todos os campos obrigatórios');\n      return;\n    }\n\n    // Verificar se já existe uma folga para esta data\n    const dataFormatada = newFolga.data.includes('-') ? formatarData(newFolga.data) : newFolga.data;\n    const folgaExistente = folgaEntries.find(f => f.funcionarioId === newFolga.funcionarioId && f.data === dataFormatada && (f.status === 'aprovado' || f.status === 'pendente'));\n    if (folgaExistente) {\n      alert('Este funcionário já possui uma folga registrada para esta data');\n      return;\n    }\n\n    // Verificar disponibilidade conforme o tipo de folga\n    const funcionario = allFuncionarios.find(f => f.id === newFolga.funcionarioId);\n    if (!funcionario) {\n      alert('Funcionário não encontrado na base de dados');\n      return;\n    }\n    if (newFolga.tipo === 'abono' && funcionario.abonos <= 0) {\n      alert('Este funcionário não possui abonos disponíveis');\n      return;\n    }\n    if (newFolga.tipo === 'banco de horas') {\n      const horasNecessarias = newFolga.periodo === 'dia' ? 8 : 4;\n      if (funcionario.bancoHoras < horasNecessarias) {\n        alert(`Este funcionário não possui horas suficientes no banco de horas (${funcionario.bancoHoras}h disponíveis, ${horasNecessarias}h necessárias)`);\n        return;\n      }\n    }\n    const folga = {\n      id: Date.now(),\n      funcionarioId: newFolga.funcionarioId,\n      funcionarioNome: newFolga.funcionarioNome,\n      data: dataFormatada,\n      tipo: newFolga.tipo,\n      periodo: newFolga.periodo,\n      motivo: newFolga.motivo,\n      status: 'pendente' // Por padrão, a folga fica pendente de aprovação\n    };\n    setFolgaEntries([...folgaEntries, folga]);\n\n    // Atualizar banco de horas ou abonos caso seja aprovado diretamente\n    if (folga.status === 'aprovado') {\n      atualizarRecursosAposAprovacao(folga);\n    }\n\n    // Notificar funcionário sobre a solicitação\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    notificacoes.push({\n      id: Date.now(),\n      userId: folga.funcionarioId,\n      message: `Sua solicitação de folga para ${folga.data} (${folga.periodo}) foi registrada e está aguardando aprovação.`,\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    });\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n\n    // Resetar formulário\n    setNewFolga({\n      funcionarioId: '',\n      funcionarioNome: '',\n      data: '',\n      tipo: 'abono',\n      periodo: 'dia',\n      motivo: ''\n    });\n    alert('Solicitação de folga registrada com sucesso!');\n  };\n\n  // Atualizar recursos do funcionário após aprovação\n  const atualizarRecursosAposAprovacao = folga => {\n    // Obter a lista mais atualizada de funcionários antes de fazer alterações\n    const latestFuncionarios = getAllPossibleFuncionarios();\n\n    // Apenas atualiza se for abono ou banco de horas\n    if (folga.tipo === 'abono' || folga.tipo === 'banco de horas') {\n      const updatedFuncionarios = latestFuncionarios.map(f => {\n        if (f.id === folga.funcionarioId) {\n          const newF = {\n            ...f\n          };\n          if (folga.tipo === 'abono') {\n            newF.abonos = Math.max(0, newF.abonos - 1);\n          } else if (folga.tipo === 'banco de horas') {\n            const horasUsadas = folga.periodo === 'dia' ? 8 : 4;\n            newF.bancoHoras = Math.max(0, newF.bancoHoras - horasUsadas);\n          }\n          return newF;\n        }\n        return f;\n      });\n\n      // Atualizar apenas no localStorage, o estado será atualizado pelo efeito\n      localStorage.setItem('funcionarios', JSON.stringify(updatedFuncionarios));\n    }\n  };\n\n  // Função para alterar status (aprovação/rejeição)\n  const changeStatus = (id, newStatus) => {\n    const entryIndex = folgaEntries.findIndex(entry => entry.id === id);\n    if (entryIndex === -1) return;\n    const updatedEntries = [...folgaEntries];\n    const folga = {\n      ...updatedEntries[entryIndex]\n    };\n\n    // Guardar status antigo para verificar mudanças\n    const oldStatus = folga.status;\n\n    // Atualizar status\n    folga.status = newStatus;\n\n    // Adicionar observação se for rejeição\n    if (newStatus === 'rejeitado' && observacaoRejeicao) {\n      folga.observacao_rejeicao = observacaoRejeicao;\n    }\n    updatedEntries[entryIndex] = folga;\n    setFolgaEntries(updatedEntries);\n\n    // Atualizar recursos do funcionário se for aprovação\n    if (newStatus === 'aprovado' && oldStatus !== 'aprovado') {\n      atualizarRecursosAposAprovacao(folga);\n    }\n\n    // Notificar funcionário sobre mudança de status\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\n    notificacoes.push({\n      id: Date.now(),\n      userId: folga.funcionarioId,\n      message: `Sua solicitação de folga para ${folga.data} foi ${newStatus === 'aprovado' ? 'aprovada' : 'rejeitada'}.`,\n      date: new Date().toLocaleDateString('pt-BR'),\n      read: false\n    });\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\n    if (newStatus === 'rejeitado') {\n      setModalRejeitarAberto(false);\n      setSolicitacaoSelecionada(null);\n      setObservacaoRejeicao('');\n    }\n  };\n\n  // Função para abrir modal de rejeição\n  const abrirModalRejeitar = folga => {\n    setSolicitacaoSelecionada(folga);\n    setObservacaoRejeicao('');\n    setModalRejeitarAberto(true);\n  };\n\n  // Renderizar cor do status\n  const renderizarStatus = status => {\n    let corClasse = '';\n    let texto = status.toUpperCase();\n    switch (status) {\n      case 'aprovado':\n        corClasse = 'bg-green-600';\n        break;\n      case 'pendente':\n        corClasse = 'bg-yellow-600';\n        break;\n      case 'rejeitado':\n        corClasse = 'bg-red-600';\n        break;\n      default:\n        corClasse = 'bg-gray-600';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `inline-block px-2 py-1 rounded-full text-xs text-white ${corClasse}`,\n      children: texto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Renderizar tipo de folga\n  const renderizarTipo = (tipo, periodo) => {\n    let label = '';\n    let corClasse = '';\n    switch (tipo) {\n      case 'abono':\n        label = 'ABONO';\n        corClasse = 'bg-blue-600';\n        break;\n      case 'banco de horas':\n        label = 'BANCO DE HORAS';\n        corClasse = 'bg-purple-600';\n        break;\n      case 'compensação':\n        label = 'COMPENSAÇÃO';\n        corClasse = 'bg-indigo-600';\n        break;\n      default:\n        label = tipo.toUpperCase();\n        corClasse = 'bg-gray-600';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `inline-block px-2 py-1 rounded-full text-xs text-white ${corClasse}`,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-xs mt-1 text-gray-300\",\n        children: periodo === 'dia' ? 'Dia inteiro' : periodo === 'manhã' ? 'Manhã' : 'Tarde'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Calcular estatísticas de folgas\n  const calcularEstatisticas = () => {\n    const hoje = new Date();\n    const folgasMes = folgaEntries.filter(folga => {\n      const [dia, mes, ano] = folga.data.split('/').map(Number);\n      const dataFolga = new Date(ano, mes - 1, dia);\n      return dataFolga.getMonth() === hoje.getMonth() && dataFolga.getFullYear() === hoje.getFullYear();\n    });\n    return {\n      totalMes: folgasMes.length,\n      aprovadas: folgasMes.filter(f => f.status === 'aprovado').length,\n      pendentes: folgasMes.filter(f => f.status === 'pendente').length,\n      rejeitadas: folgasMes.filter(f => f.status === 'rejeitado').length\n    };\n  };\n  const estatisticas = calcularEstatisticas();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Gerenciamento de Folgas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Filtros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.status,\n            onChange: e => setFiltros({\n              ...filtros,\n              status: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pendente\",\n              children: \"Pendente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"aprovado\",\n              children: \"Aprovado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"rejeitado\",\n              children: \"Rejeitado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Funcion\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.funcionario,\n            onChange: e => setFiltros({\n              ...filtros,\n              funcionario: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os funcion\\xE1rios\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), [...new Set([...allFuncionarios.map(f => f.nome), ...folgaEntries.map(entry => entry.funcionarioNome)])].filter(Boolean).sort().map((nome, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: nome,\n              children: nome\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.tipo,\n            onChange: e => setFiltros({\n              ...filtros,\n              tipo: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os tipos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"abono\",\n              children: \"Abono\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"banco de horas\",\n              children: \"Banco de horas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"compensa\\xE7\\xE3o\",\n              children: \"Compensa\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Per\\xEDodo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            value: filtros.periodo,\n            onChange: e => setFiltros({\n              ...filtros,\n              periodo: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Todos os per\\xEDodos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"semana\",\n              children: \"Pr\\xF3xima semana\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mes\",\n              children: \"Este m\\xEAs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 grid grid-cols-1 md:grid-cols-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-purple-600 p-2 rounded-full mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: \"Total do M\\xEAs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold\",\n          children: estatisticas.totalMes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-600 p-2 rounded-full mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M5 13l4 4L19 7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: \"Aprovadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold\",\n          children: estatisticas.aprovadas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-yellow-600 p-2 rounded-full mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: \"Pendentes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold\",\n          children: estatisticas.pendentes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-600 p-2 rounded-full mr-2\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-5 w-5\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: \"Rejeitadas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold\",\n          children: estatisticas.rejeitadas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Solicita\\xE7\\xF5es de Folga\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-b border-purple-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4 text-left\",\n                children: \"Funcion\\xE1rio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4 text-left\",\n                children: \"Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4 text-left\",\n                children: \"Tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4 text-left\",\n                children: \"Motivo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4 text-left\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"py-3 px-4 text-right\",\n                children: \"A\\xE7\\xF5es\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [folgasOrdenadas.map(folga => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: folga.funcionarioNome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: folga.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: renderizarTipo(folga.tipo, folga.periodo)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"max-w-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"truncate\",\n                    children: folga.motivo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 23\n                  }, this), folga.observacao_rejeicao && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs mt-1 text-red-400 italic\",\n                    children: [\"Motivo da rejei\\xE7\\xE3o: \", folga.observacao_rejeicao]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 719,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4\",\n                children: renderizarStatus(folga.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"py-3 px-4 text-right\",\n                children: folga.status === 'pendente' && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-end space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => changeStatus(folga.id, 'aprovado'),\n                    className: \"bg-green-600 hover:bg-green-700 text-white py-1 px-2 rounded text-xs\",\n                    children: \"Aprovar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => abrirModalRejeitar(folga),\n                    className: \"bg-red-600 hover:bg-red-700 text-white py-1 px-2 rounded text-xs\",\n                    children: \"Rejeitar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this)]\n            }, folga.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 17\n            }, this)), folgasOrdenadas.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"6\",\n                className: \"py-6 px-4 text-center text-gray-400\",\n                children: \"Nenhuma folga encontrada com os filtros selecionados.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-purple-900 bg-opacity-40 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Registrar Nova Folga\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddFolga,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: [\"Funcion\\xE1rio* (\", allFuncionarios.length, \" dispon\\xEDveis)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: newFolga.funcionarioId,\n              onChange: handleSelecionarFuncionario,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecione um funcion\\xE1rio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 17\n              }, this), allFuncionarios.map(funcionario => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: funcionario.id,\n                children: [funcionario.nome, \" (\", funcionario.bancoHoras, \"h banco / \", funcionario.abonos, \" abonos)\"]\n              }, funcionario.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Data*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: newFolga.data,\n              onChange: e => setNewFolga({\n                ...newFolga,\n                data: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Tipo*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: newFolga.tipo,\n              onChange: e => setNewFolga({\n                ...newFolga,\n                tipo: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"abono\",\n                children: \"Abono\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"banco de horas\",\n                children: \"Banco de Horas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"compensa\\xE7\\xE3o\",\n                children: \"Compensa\\xE7\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-purple-300 mb-1\",\n              children: \"Per\\xEDodo*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n              value: newFolga.periodo,\n              onChange: e => setNewFolga({\n                ...newFolga,\n                periodo: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"dia\",\n                children: \"Dia inteiro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"manh\\xE3\",\n                children: \"Manh\\xE3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"tarde\",\n                children: \"Tarde\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Motivo*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            rows: \"3\",\n            value: newFolga.motivo,\n            onChange: e => setNewFolga({\n              ...newFolga,\n              motivo: e.target.value\n            }),\n            placeholder: \"Informe o motivo da folga\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-md font-medium\",\n            children: \"Registrar Folga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 7\n    }, this), modalRejeitarAberto && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-900 rounded-lg p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Rejeitar Solicita\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: [\"Voc\\xEA est\\xE1 rejeitando a folga de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: solicitacaoSelecionada === null || solicitacaoSelecionada === void 0 ? void 0 : solicitacaoSelecionada.funcionarioNome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 47\n          }, this), \" para o dia \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: solicitacaoSelecionada === null || solicitacaoSelecionada === void 0 ? void 0 : solicitacaoSelecionada.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 117\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm text-purple-300 mb-1\",\n            children: \"Motivo da Rejei\\xE7\\xE3o*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\",\n            rows: \"3\",\n            value: observacaoRejeicao,\n            onChange: e => setObservacaoRejeicao(e.target.value),\n            placeholder: \"Informe o motivo da rejei\\xE7\\xE3o\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setModalRejeitarAberto(false),\n            className: \"bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded-md font-medium\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeStatus(solicitacaoSelecionada === null || solicitacaoSelecionada === void 0 ? void 0 : solicitacaoSelecionada.id, 'rejeitado'),\n            className: \"bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-md font-medium\",\n            disabled: !observacaoRejeicao,\n            children: \"Confirmar Rejei\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 bg-purple-900 bg-opacity-40 p-4 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          className: \"cursor-pointer text-purple-300 hover:text-white\",\n          children: \"Dados de Funcion\\xE1rios para Debug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 overflow-auto max-h-64 text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300\",\n            children: [\"Funcion\\xE1rios Consolidados (\", allFuncionarios.length, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(allFuncionarios, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300 mt-2\",\n            children: [\"Funcion\\xE1rios do localStorage (\", localFuncionarios.length, \"):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(localFuncionarios, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300 mt-2\",\n            children: \"Registros de Usu\\xE1rios:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(JSON.parse(localStorage.getItem('registeredUsers') || '[]'), null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300 mt-2\",\n            children: \"Funcion\\xE1rios de Ajustes de Ponto:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(JSON.parse(localStorage.getItem('ajustePontoSolicitacoes') || '[]').map(a => ({\n              id: a.funcionarioId,\n              nome: a.funcionarioNome\n            })).filter((v, i, a) => a.findIndex(t => t.id === v.id) === i), null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-bold text-purple-300 mt-2\",\n            children: \"Usu\\xE1rio Atual:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-purple-950 p-2 rounded\",\n            children: JSON.stringify(JSON.parse(localStorage.getItem('user') || '{}'), null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 574,\n    columnNumber: 5\n  }, this);\n};\n_s(FolgaTab, \"QX1PLL1YKer3H2f8rrJYNwEMy/g=\");\n_c = FolgaTab;\nexport default FolgaTab;\nvar _c;\n$RefreshReg$(_c, \"FolgaTab\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FolgaTab","_s","folgaEntries","setFolgaEntries","storedFolgas","localStorage","getItem","JSON","parse","id","funcionarioId","funcionarioNome","data","tipo","periodo","status","motivo","observacao_rejeicao","newFolga","setNewFolga","localFuncionarios","setLocalFuncionarios","allFuncionarios","setAllFuncionarios","modalRejeitarAberto","setModalRejeitarAberto","solicitacaoSelecionada","setSolicitacaoSelecionada","observacaoRejeicao","setObservacaoRejeicao","filtros","setFiltros","funcionario","getAllPossibleFuncionarios","registeredUsers","funcionariosFromUsers","map","user","nome","name","bancoHoras","abonos","diasFeriasDisponiveis","storedFuncionarios","localFuncs","folgaFuncionarios","folga","currentUser","userJson","displayName","error","console","ajustesData","ajustesFuncionarios","ajuste","funcionariosMap","Map","forEach","func","has","existingFunc","get","set","undefined","Array","from","values","updateAllFuncionarios","allPossible","log","interval","setInterval","clearInterval","getFuncionariosFromLocalStorage","stored","handleStorageChange","e","key","newValue","includes","window","addEventListener","removeEventListener","checkAdminNotifications","adminNotifications","unreadNotifications","filter","n","read","type","length","updatedNotifications","setItem","stringify","notifInterval","folgasFiltradas","matchStatus","matchFuncionario","matchTipo","matchPeriodo","hoje","Date","dataLimite","setDate","getDate","partesData","split","dataFolga","parseInt","folgasOrdenadas","sort","a","b","diaA","mesA","anoA","Number","diaB","mesB","anoB","dateA","dateB","handleSelecionarFuncionario","target","value","funcionarioSelecionado","find","f","warn","formatarData","ano","mes","dia","handleAddFolga","preventDefault","alert","dataFormatada","folgaExistente","horasNecessarias","now","atualizarRecursosAposAprovacao","notificacoes","push","userId","message","date","toLocaleDateString","latestFuncionarios","updatedFuncionarios","newF","Math","max","horasUsadas","changeStatus","newStatus","entryIndex","findIndex","entry","updatedEntries","oldStatus","abrirModalRejeitar","renderizarStatus","corClasse","texto","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderizarTipo","label","calcularEstatisticas","folgasMes","getMonth","getFullYear","totalMes","aprovadas","pendentes","rejeitadas","estatisticas","onChange","Set","Boolean","index","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","colSpan","onSubmit","required","rows","placeholder","disabled","v","i","t","_c","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/components/FolgaTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst FolgaTab = () => {\r\n  // Estado para os registros de folgas\r\n  const [folgaEntries, setFolgaEntries] = useState(() => {\r\n    const storedFolgas = localStorage.getItem('folgaEntries');\r\n    return storedFolgas ? JSON.parse(storedFolgas) : [\r\n      { \r\n        id: 1,\r\n        funcionarioId: 101,\r\n        funcionarioNome: 'João Silva',\r\n        data: '22/03/2025', \r\n        tipo: 'compensação',\r\n        periodo: 'dia',\r\n        status: 'aprovado', \r\n        motivo: 'Compensação por hora extra' \r\n      },\r\n      { \r\n        id: 2,\r\n        funcionarioId: 102,\r\n        funcionarioNome: 'Maria Oliveira',\r\n        data: '25/03/2025', \r\n        tipo: 'abono',\r\n        periodo: 'dia',\r\n        status: 'pendente', \r\n        motivo: 'Consulta médica' \r\n      },\r\n      {\r\n        id: 3,\r\n        funcionarioId: 103,\r\n        funcionarioNome: 'Carlos Pereira',\r\n        data: '28/03/2025',\r\n        tipo: 'banco de horas',\r\n        periodo: 'tarde',\r\n        status: 'rejeitado',\r\n        motivo: 'Assuntos pessoais',\r\n        observacao_rejeicao: 'Período com reunião importante agendada'\r\n      }\r\n    ];\r\n  });\r\n  \r\n  // Estados para nova folga\r\n  const [newFolga, setNewFolga] = useState({\r\n    funcionarioId: '',\r\n    funcionarioNome: '',\r\n    data: '',\r\n    tipo: 'abono',\r\n    periodo: 'dia',\r\n    motivo: ''\r\n  });\r\n  \r\n  // Estado para armazenar funcionários do localStorage\r\n  const [localFuncionarios, setLocalFuncionarios] = useState([]);\r\n  \r\n  // Estado para armazenar todos os funcionários possíveis consolidados\r\n  const [allFuncionarios, setAllFuncionarios] = useState([]);\r\n  \r\n  // Estado para modal de rejeição\r\n  const [modalRejeitarAberto, setModalRejeitarAberto] = useState(false);\r\n  const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\r\n  const [observacaoRejeicao, setObservacaoRejeicao] = useState('');\r\n  \r\n  // Estado para filtros\r\n  const [filtros, setFiltros] = useState({\r\n    status: '',\r\n    funcionario: '',\r\n    tipo: '',\r\n    periodo: ''\r\n  });\r\n  \r\n  // Função para obter todos os funcionários possíveis de todas as fontes\r\n  const getAllPossibleFuncionarios = () => {\r\n    try {\r\n      // 1. Obter do registeredUsers\r\n      const registeredUsers = JSON.parse(localStorage.getItem('registeredUsers') || '[]');\r\n      const funcionariosFromUsers = registeredUsers.map(user => ({\r\n        id: user.id,\r\n        nome: user.name || user.nome,\r\n        bancoHoras: user.bancoHoras || 0,\r\n        abonos: user.abonos || 0,\r\n        diasFeriasDisponiveis: user.diasFeriasDisponiveis || 30\r\n      }));\r\n      \r\n      // 2. Obter do localStorage \"funcionarios\"\r\n      const storedFuncionarios = JSON.parse(localStorage.getItem('funcionarios') || '[]');\r\n      \r\n      // 3. Obter do localFuncionarios\r\n      const localFuncs = localFuncionarios || [];\r\n      \r\n      // 4. Obter funcionários únicos de folgaEntries\r\n      const folgaFuncionarios = folgaEntries.map(folga => ({\r\n        id: folga.funcionarioId,\r\n        nome: folga.funcionarioNome\r\n      }));\r\n      \r\n      // 5. Buscar usuário atual do localStorage (se existir)\r\n      let currentUser = null;\r\n      try {\r\n        const userJson = localStorage.getItem('user');\r\n        if (userJson) {\r\n          const user = JSON.parse(userJson);\r\n          if (user && user.id) {\r\n            currentUser = {\r\n              id: user.id,\r\n              nome: user.name || user.displayName || user.nome,\r\n              bancoHoras: user.bancoHoras || 0,\r\n              abonos: user.abonos || 0,\r\n              diasFeriasDisponiveis: user.diasFeriasDisponiveis || 30\r\n            };\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao obter usuário atual:', error);\r\n      }\r\n      \r\n      // 6. Buscar dados de ajustes de ponto para extrair funcionários\r\n      const ajustesData = JSON.parse(localStorage.getItem('ajustePontoSolicitacoes') || '[]');\r\n      const ajustesFuncionarios = ajustesData.map(ajuste => ({\r\n        id: ajuste.funcionarioId,\r\n        nome: ajuste.funcionarioNome\r\n      }));\r\n      \r\n      // 7. Criar um mapa para eliminar duplicatas por ID\r\n      const funcionariosMap = new Map();\r\n      \r\n      // Adicionar de todas as fontes\r\n      [\r\n        ...funcionariosFromUsers, \r\n        ...storedFuncionarios, \r\n        ...localFuncs,\r\n        ...folgaFuncionarios,\r\n        ...ajustesFuncionarios,\r\n        ...(currentUser ? [currentUser] : [])\r\n      ].forEach(func => {\r\n        if (func && func.id) {\r\n          // Se o funcionário já existe no mapa, manter valores não-nulos\r\n          if (funcionariosMap.has(func.id)) {\r\n            const existingFunc = funcionariosMap.get(func.id);\r\n            funcionariosMap.set(func.id, {\r\n              id: func.id,\r\n              nome: func.nome || existingFunc.nome,\r\n              bancoHoras: func.bancoHoras !== undefined ? func.bancoHoras : existingFunc.bancoHoras,\r\n              abonos: func.abonos !== undefined ? func.abonos : existingFunc.abonos,\r\n              diasFeriasDisponiveis: func.diasFeriasDisponiveis !== undefined ? func.diasFeriasDisponiveis : existingFunc.diasFeriasDisponiveis\r\n            });\r\n          } else {\r\n            // Garantir valores padrão para propriedades ausentes\r\n            funcionariosMap.set(func.id, {\r\n              id: func.id,\r\n              nome: func.nome,\r\n              bancoHoras: func.bancoHoras !== undefined ? func.bancoHoras : 0,\r\n              abonos: func.abonos !== undefined ? func.abonos : 0,\r\n              diasFeriasDisponiveis: func.diasFeriasDisponiveis !== undefined ? func.diasFeriasDisponiveis : 30\r\n            });\r\n          }\r\n        }\r\n      });\r\n      \r\n      // Converter de volta para array\r\n      return Array.from(funcionariosMap.values());\r\n    } catch (error) {\r\n      console.error('Erro ao obter funcionários de todas as fontes:', error);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  // useEffect para manter a lista atualizada\r\n  useEffect(() => {\r\n    const updateAllFuncionarios = () => {\r\n      const allPossible = getAllPossibleFuncionarios();\r\n      setAllFuncionarios(allPossible);\r\n      console.log('Lista completa de funcionários atualizada:', allPossible);\r\n    };\r\n    \r\n    // Atualizar logo no início\r\n    updateAllFuncionarios();\r\n    \r\n    // E a cada 2 segundos\r\n    const interval = setInterval(updateAllFuncionarios, 2000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [localFuncionarios, folgaEntries]);\r\n  \r\n  // SOLUÇÃO 3: Obter dados diretamente do localStorage e sincronizar com o estado\r\n  useEffect(() => {\r\n    const getFuncionariosFromLocalStorage = () => {\r\n      try {\r\n        const stored = localStorage.getItem('funcionarios');\r\n        return stored ? JSON.parse(stored) : [];\r\n      } catch (error) {\r\n        console.error(\"Erro ao ler funcionários do localStorage:\", error);\r\n        return [];\r\n      }\r\n    };\r\n    \r\n    setLocalFuncionarios(getFuncionariosFromLocalStorage());\r\n    \r\n    // Atualizar a cada 5 segundos\r\n    const interval = setInterval(() => {\r\n      setLocalFuncionarios(getFuncionariosFromLocalStorage());\r\n    }, 5000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  \r\n  // SOLUÇÃO 4: Adicionar evento de armazenamento para sincronização entre abas\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'funcionarios') {\r\n        setLocalFuncionarios(JSON.parse(e.newValue || '[]'));\r\n      }\r\n      \r\n      // Verificar também outras mudanças relevantes\r\n      if (['registeredUsers', 'user', 'ajustePontoSolicitacoes'].includes(e.key)) {\r\n        const allPossible = getAllPossibleFuncionarios();\r\n        setAllFuncionarios(allPossible);\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, []);\r\n  \r\n  // Verificar notificações de admin\r\n  useEffect(() => {\r\n    const checkAdminNotifications = () => {\r\n      const adminNotifications = JSON.parse(localStorage.getItem('adminNotifications') || '[]');\r\n      const unreadNotifications = adminNotifications.filter(n => !n.read && n.type === 'novoFuncionario');\r\n      \r\n      if (unreadNotifications.length > 0) {\r\n        console.log(\"FolgaTab - Notificações não lidas de novos funcionários:\", unreadNotifications);\r\n        // Marcar como lidas\r\n        const updatedNotifications = adminNotifications.map(n => {\r\n          if (n.type === 'novoFuncionario' && !n.read) {\r\n            return { ...n, read: true };\r\n          }\r\n          return n;\r\n        });\r\n        \r\n        localStorage.setItem('adminNotifications', JSON.stringify(updatedNotifications));\r\n      }\r\n    };\r\n    \r\n    // Verificar notificações ao montar e a cada 10 segundos\r\n    checkAdminNotifications();\r\n    const notifInterval = setInterval(checkAdminNotifications, 10000);\r\n    \r\n    return () => clearInterval(notifInterval);\r\n  }, []);\r\n  \r\n  // Salvar folgas no localStorage quando mudar\r\n  useEffect(() => {\r\n    localStorage.setItem('folgaEntries', JSON.stringify(folgaEntries));\r\n  }, [folgaEntries]);\r\n  \r\n  // Filtrar folgas\r\n  const folgasFiltradas = folgaEntries.filter(folga => {\r\n    const matchStatus = filtros.status === '' || folga.status === filtros.status;\r\n    const matchFuncionario = filtros.funcionario === '' || folga.funcionarioNome === filtros.funcionario;\r\n    const matchTipo = filtros.tipo === '' || folga.tipo === filtros.tipo;\r\n    \r\n    // Implementação básica do filtro de período\r\n    let matchPeriodo = true;\r\n    if (filtros.periodo === 'semana') {\r\n      const hoje = new Date();\r\n      const dataLimite = new Date();\r\n      dataLimite.setDate(hoje.getDate() + 7);\r\n      \r\n      const partesData = folga.data.split('/');\r\n      const dataFolga = new Date(\r\n        parseInt(partesData[2]), \r\n        parseInt(partesData[1]) - 1, \r\n        parseInt(partesData[0])\r\n      );\r\n      \r\n      matchPeriodo = dataFolga <= dataLimite && dataFolga >= hoje;\r\n    }\r\n    \r\n    return matchStatus && matchFuncionario && matchTipo && matchPeriodo;\r\n  });\r\n  \r\n  // Ordenar por data (mais próximas primeiro)\r\n  const folgasOrdenadas = [...folgasFiltradas].sort((a, b) => {\r\n    // Converter datas do formato DD/MM/YYYY para objetos Date para comparação\r\n    const [diaA, mesA, anoA] = a.data.split('/').map(Number);\r\n    const [diaB, mesB, anoB] = b.data.split('/').map(Number);\r\n    \r\n    const dateA = new Date(anoA, mesA - 1, diaA);\r\n    const dateB = new Date(anoB, mesB - 1, diaB);\r\n    \r\n    return dateA - dateB; // Ordem crescente (mais próxima primeiro)\r\n  });\r\n  \r\n  // Selecionar funcionário para nova folga - FUNÇÃO CORRIGIDA\r\n  const handleSelecionarFuncionario = (e) => {\r\n    const funcionarioId = parseInt(e.target.value);\r\n    if (funcionarioId) {\r\n      // Procurar em allFuncionarios em vez da lista original\r\n      const funcionarioSelecionado = allFuncionarios.find(f => f.id === funcionarioId);\r\n      if (funcionarioSelecionado) {\r\n        console.log(\"Funcionário selecionado:\", funcionarioSelecionado);\r\n        setNewFolga({\r\n          ...newFolga,\r\n          funcionarioId: funcionarioId,\r\n          funcionarioNome: funcionarioSelecionado.nome\r\n        });\r\n      } else {\r\n        console.warn(\"Funcionário não encontrado para ID:\", funcionarioId);\r\n      }\r\n    } else {\r\n      setNewFolga({\r\n        ...newFolga,\r\n        funcionarioId: '',\r\n        funcionarioNome: ''\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Formatar data para DD/MM/YYYY\r\n  const formatarData = (data) => {\r\n    if (!data || data.includes('/')) return data;\r\n    \r\n    const [ano, mes, dia] = data.split('-');\r\n    return `${dia}/${mes}/${ano}`;\r\n  };\r\n  \r\n  // Adicionar nova folga\r\n  const handleAddFolga = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newFolga.funcionarioId || !newFolga.data || !newFolga.motivo) {\r\n      alert('Por favor, preencha todos os campos obrigatórios');\r\n      return;\r\n    }\r\n    \r\n    // Verificar se já existe uma folga para esta data\r\n    const dataFormatada = newFolga.data.includes('-') ? formatarData(newFolga.data) : newFolga.data;\r\n    \r\n    const folgaExistente = folgaEntries.find(\r\n      f => f.funcionarioId === newFolga.funcionarioId && \r\n           f.data === dataFormatada && \r\n           (f.status === 'aprovado' || f.status === 'pendente')\r\n    );\r\n    \r\n    if (folgaExistente) {\r\n      alert('Este funcionário já possui uma folga registrada para esta data');\r\n      return;\r\n    }\r\n    \r\n    // Verificar disponibilidade conforme o tipo de folga\r\n    const funcionario = allFuncionarios.find(f => f.id === newFolga.funcionarioId);\r\n    \r\n    if (!funcionario) {\r\n      alert('Funcionário não encontrado na base de dados');\r\n      return;\r\n    }\r\n    \r\n    if (newFolga.tipo === 'abono' && funcionario.abonos <= 0) {\r\n      alert('Este funcionário não possui abonos disponíveis');\r\n      return;\r\n    }\r\n    \r\n    if (newFolga.tipo === 'banco de horas') {\r\n      const horasNecessarias = newFolga.periodo === 'dia' ? 8 : 4;\r\n      if (funcionario.bancoHoras < horasNecessarias) {\r\n        alert(`Este funcionário não possui horas suficientes no banco de horas (${funcionario.bancoHoras}h disponíveis, ${horasNecessarias}h necessárias)`);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    const folga = {\r\n      id: Date.now(),\r\n      funcionarioId: newFolga.funcionarioId,\r\n      funcionarioNome: newFolga.funcionarioNome,\r\n      data: dataFormatada,\r\n      tipo: newFolga.tipo,\r\n      periodo: newFolga.periodo,\r\n      motivo: newFolga.motivo,\r\n      status: 'pendente' // Por padrão, a folga fica pendente de aprovação\r\n    };\r\n    \r\n    setFolgaEntries([...folgaEntries, folga]);\r\n    \r\n    // Atualizar banco de horas ou abonos caso seja aprovado diretamente\r\n    if (folga.status === 'aprovado') {\r\n      atualizarRecursosAposAprovacao(folga);\r\n    }\r\n    \r\n    // Notificar funcionário sobre a solicitação\r\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    notificacoes.push({\r\n      id: Date.now(),\r\n      userId: folga.funcionarioId,\r\n      message: `Sua solicitação de folga para ${folga.data} (${folga.periodo}) foi registrada e está aguardando aprovação.`,\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    });\r\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n    \r\n    // Resetar formulário\r\n    setNewFolga({\r\n      funcionarioId: '',\r\n      funcionarioNome: '',\r\n      data: '',\r\n      tipo: 'abono',\r\n      periodo: 'dia',\r\n      motivo: ''\r\n    });\r\n    \r\n    alert('Solicitação de folga registrada com sucesso!');\r\n  };\r\n  \r\n  // Atualizar recursos do funcionário após aprovação\r\n  const atualizarRecursosAposAprovacao = (folga) => {\r\n    // Obter a lista mais atualizada de funcionários antes de fazer alterações\r\n    const latestFuncionarios = getAllPossibleFuncionarios();\r\n    \r\n    // Apenas atualiza se for abono ou banco de horas\r\n    if (folga.tipo === 'abono' || folga.tipo === 'banco de horas') {\r\n      const updatedFuncionarios = latestFuncionarios.map(f => {\r\n        if (f.id === folga.funcionarioId) {\r\n          const newF = { ...f };\r\n          \r\n          if (folga.tipo === 'abono') {\r\n            newF.abonos = Math.max(0, newF.abonos - 1);\r\n          } else if (folga.tipo === 'banco de horas') {\r\n            const horasUsadas = folga.periodo === 'dia' ? 8 : 4;\r\n            newF.bancoHoras = Math.max(0, newF.bancoHoras - horasUsadas);\r\n          }\r\n          \r\n          return newF;\r\n        }\r\n        return f;\r\n      });\r\n      \r\n      // Atualizar apenas no localStorage, o estado será atualizado pelo efeito\r\n      localStorage.setItem('funcionarios', JSON.stringify(updatedFuncionarios));\r\n    }\r\n  };\r\n  \r\n  // Função para alterar status (aprovação/rejeição)\r\n  const changeStatus = (id, newStatus) => {\r\n    const entryIndex = folgaEntries.findIndex(entry => entry.id === id);\r\n    if (entryIndex === -1) return;\r\n    \r\n    const updatedEntries = [...folgaEntries];\r\n    const folga = { ...updatedEntries[entryIndex] };\r\n    \r\n    // Guardar status antigo para verificar mudanças\r\n    const oldStatus = folga.status;\r\n    \r\n    // Atualizar status\r\n    folga.status = newStatus;\r\n    \r\n    // Adicionar observação se for rejeição\r\n    if (newStatus === 'rejeitado' && observacaoRejeicao) {\r\n      folga.observacao_rejeicao = observacaoRejeicao;\r\n    }\r\n    \r\n    updatedEntries[entryIndex] = folga;\r\n    setFolgaEntries(updatedEntries);\r\n    \r\n    // Atualizar recursos do funcionário se for aprovação\r\n    if (newStatus === 'aprovado' && oldStatus !== 'aprovado') {\r\n      atualizarRecursosAposAprovacao(folga);\r\n    }\r\n    \r\n    // Notificar funcionário sobre mudança de status\r\n    const notificacoes = JSON.parse(localStorage.getItem('userNotifications') || '[]');\r\n    notificacoes.push({\r\n      id: Date.now(),\r\n      userId: folga.funcionarioId,\r\n      message: `Sua solicitação de folga para ${folga.data} foi ${newStatus === 'aprovado' ? 'aprovada' : 'rejeitada'}.`,\r\n      date: new Date().toLocaleDateString('pt-BR'),\r\n      read: false\r\n    });\r\n    localStorage.setItem('userNotifications', JSON.stringify(notificacoes));\r\n    \r\n    if (newStatus === 'rejeitado') {\r\n      setModalRejeitarAberto(false);\r\n      setSolicitacaoSelecionada(null);\r\n      setObservacaoRejeicao('');\r\n    }\r\n  };\r\n  \r\n  // Função para abrir modal de rejeição\r\n  const abrirModalRejeitar = (folga) => {\r\n    setSolicitacaoSelecionada(folga);\r\n    setObservacaoRejeicao('');\r\n    setModalRejeitarAberto(true);\r\n  };\r\n  \r\n  // Renderizar cor do status\r\n  const renderizarStatus = (status) => {\r\n    let corClasse = '';\r\n    let texto = status.toUpperCase();\r\n    \r\n    switch(status) {\r\n      case 'aprovado':\r\n        corClasse = 'bg-green-600';\r\n        break;\r\n      case 'pendente':\r\n        corClasse = 'bg-yellow-600';\r\n        break;\r\n      case 'rejeitado':\r\n        corClasse = 'bg-red-600';\r\n        break;\r\n      default:\r\n        corClasse = 'bg-gray-600';\r\n    }\r\n    \r\n    return (\r\n      <span className={`inline-block px-2 py-1 rounded-full text-xs text-white ${corClasse}`}>\r\n        {texto}\r\n      </span>\r\n    );\r\n  };\r\n  \r\n  // Renderizar tipo de folga\r\n  const renderizarTipo = (tipo, periodo) => {\r\n    let label = '';\r\n    let corClasse = '';\r\n    \r\n    switch(tipo) {\r\n      case 'abono':\r\n        label = 'ABONO';\r\n        corClasse = 'bg-blue-600';\r\n        break;\r\n      case 'banco de horas':\r\n        label = 'BANCO DE HORAS';\r\n        corClasse = 'bg-purple-600';\r\n        break;\r\n      case 'compensação':\r\n        label = 'COMPENSAÇÃO';\r\n        corClasse = 'bg-indigo-600';\r\n        break;\r\n      default:\r\n        label = tipo.toUpperCase();\r\n        corClasse = 'bg-gray-600';\r\n    }\r\n    \r\n    return (\r\n      <div className=\"flex flex-col\">\r\n        <span className={`inline-block px-2 py-1 rounded-full text-xs text-white ${corClasse}`}>\r\n          {label}\r\n        </span>\r\n        <span className=\"text-xs mt-1 text-gray-300\">\r\n          {periodo === 'dia' ? 'Dia inteiro' : periodo === 'manhã' ? 'Manhã' : 'Tarde'}\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Calcular estatísticas de folgas\r\n  const calcularEstatisticas = () => {\r\n    const hoje = new Date();\r\n    const folgasMes = folgaEntries.filter(folga => {\r\n      const [dia, mes, ano] = folga.data.split('/').map(Number);\r\n      const dataFolga = new Date(ano, mes - 1, dia);\r\n      return dataFolga.getMonth() === hoje.getMonth() && dataFolga.getFullYear() === hoje.getFullYear();\r\n    });\r\n    \r\n    return {\r\n      totalMes: folgasMes.length,\r\n      aprovadas: folgasMes.filter(f => f.status === 'aprovado').length,\r\n      pendentes: folgasMes.filter(f => f.status === 'pendente').length,\r\n      rejeitadas: folgasMes.filter(f => f.status === 'rejeitado').length\r\n    };\r\n  };\r\n  \r\n  const estatisticas = calcularEstatisticas();\r\n  \r\n  return (\r\n    <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Gerenciamento de Folgas</h1>\r\n      \r\n      {/* Filtros */}\r\n      <div className=\"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Filtros</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Status</label>\r\n            <select \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.status}\r\n              onChange={(e) => setFiltros({...filtros, status: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os status</option>\r\n              <option value=\"pendente\">Pendente</option>\r\n              <option value=\"aprovado\">Aprovado</option>\r\n              <option value=\"rejeitado\">Rejeitado</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Funcionário</label>\r\n            <select \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.funcionario}\r\n              onChange={(e) => setFiltros({...filtros, funcionario: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os funcionários</option>\r\n              {/* Usar consolidação de todos os nomes de funcionários */}\r\n              {[...new Set([\r\n                ...allFuncionarios.map(f => f.nome),\r\n                ...folgaEntries.map(entry => entry.funcionarioNome)\r\n              ])].filter(Boolean).sort().map((nome, index) => (\r\n                <option key={index} value={nome}>{nome}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Tipo</label>\r\n            <select \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.tipo}\r\n              onChange={(e) => setFiltros({...filtros, tipo: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os tipos</option>\r\n              <option value=\"abono\">Abono</option>\r\n              <option value=\"banco de horas\">Banco de horas</option>\r\n              <option value=\"compensação\">Compensação</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Período</label>\r\n            <select \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              value={filtros.periodo}\r\n              onChange={(e) => setFiltros({...filtros, periodo: e.target.value})}\r\n            >\r\n              <option value=\"\">Todos os períodos</option>\r\n              <option value=\"semana\">Próxima semana</option>\r\n              <option value=\"mes\">Este mês</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Dashboard de folgas */}\r\n      <div className=\"mb-6 grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        {/* Total do mês */}\r\n        <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"bg-purple-600 p-2 rounded-full mr-2\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-lg font-semibold\">Total do Mês</h2>\r\n          </div>\r\n          <p className=\"text-2xl font-bold\">{estatisticas.totalMes}</p>\r\n        </div>\r\n        \r\n        {/* Aprovadas */}\r\n        <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"bg-green-600 p-2 rounded-full mr-2\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-lg font-semibold\">Aprovadas</h2>\r\n          </div>\r\n          <p className=\"text-2xl font-bold\">{estatisticas.aprovadas}</p>\r\n        </div>\r\n        \r\n        {/* Pendentes */}\r\n        <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"bg-yellow-600 p-2 rounded-full mr-2\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-lg font-semibold\">Pendentes</h2>\r\n          </div>\r\n          <p className=\"text-2xl font-bold\">{estatisticas.pendentes}</p>\r\n        </div>\r\n        \r\n        {/* Rejeitadas */}\r\n        <div className=\"bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg shadow-lg p-4\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"bg-red-600 p-2 rounded-full mr-2\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-lg font-semibold\">Rejeitadas</h2>\r\n          </div>\r\n          <p className=\"text-2xl font-bold\">{estatisticas.rejeitadas}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Tabela de Folgas */}\r\n      <div className=\"bg-purple-900 bg-opacity-40 rounded-lg p-4 mb-6\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Solicitações de Folga</h2>\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full bg-purple-800 bg-opacity-40 backdrop-blur-sm rounded-lg\">\r\n            <thead>\r\n              <tr className=\"border-b border-purple-700\">\r\n                <th className=\"py-3 px-4 text-left\">Funcionário</th>\r\n                <th className=\"py-3 px-4 text-left\">Data</th>\r\n                <th className=\"py-3 px-4 text-left\">Tipo</th>\r\n                <th className=\"py-3 px-4 text-left\">Motivo</th>\r\n                <th className=\"py-3 px-4 text-left\">Status</th>\r\n                <th className=\"py-3 px-4 text-right\">Ações</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {folgasOrdenadas.map((folga) => (\r\n                <tr key={folga.id} className=\"border-b border-purple-700 hover:bg-purple-700 hover:bg-opacity-50\">\r\n                  <td className=\"py-3 px-4\">{folga.funcionarioNome}</td>\r\n                  <td className=\"py-3 px-4\">{folga.data}</td>\r\n                  <td className=\"py-3 px-4\">{renderizarTipo(folga.tipo, folga.periodo)}</td>\r\n                  <td className=\"py-3 px-4\">\r\n                    <div className=\"max-w-xs\">\r\n                      <div className=\"truncate\">{folga.motivo}</div>\r\n                      {folga.observacao_rejeicao && (\r\n                        <div className=\"text-xs mt-1 text-red-400 italic\">\r\n                          Motivo da rejeição: {folga.observacao_rejeicao}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"py-3 px-4\">{renderizarStatus(folga.status)}</td>\r\n                  <td className=\"py-3 px-4 text-right\">\r\n                    {folga.status === 'pendente' && (\r\n                      <div className=\"flex justify-end space-x-2\">\r\n                        <button \r\n                          onClick={() => changeStatus(folga.id, 'aprovado')}\r\n                          className=\"bg-green-600 hover:bg-green-700 text-white py-1 px-2 rounded text-xs\"\r\n                        >\r\n                          Aprovar\r\n                        </button>\r\n                        <button \r\n                          onClick={() => abrirModalRejeitar(folga)}\r\n                          className=\"bg-red-600 hover:bg-red-700 text-white py-1 px-2 rounded text-xs\"\r\n                        >\r\n                          Rejeitar\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n              {folgasOrdenadas.length === 0 && (\r\n                <tr>\r\n                  <td colSpan=\"6\" className=\"py-6 px-4 text-center text-gray-400\">\r\n                    Nenhuma folga encontrada com os filtros selecionados.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Formulário para adicionar nova folga */}\r\n      <div className=\"bg-purple-900 bg-opacity-40 rounded-lg p-4\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">Registrar Nova Folga</h2>\r\n        <form onSubmit={handleAddFolga}>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">\r\n                Funcionário* ({allFuncionarios.length} disponíveis)\r\n              </label>\r\n              <select \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={newFolga.funcionarioId}\r\n                onChange={handleSelecionarFuncionario}\r\n                required\r\n              >\r\n                <option value=\"\">Selecione um funcionário</option>\r\n                {allFuncionarios.map(funcionario => (\r\n                  <option key={funcionario.id} value={funcionario.id}>\r\n                    {funcionario.nome} ({funcionario.bancoHoras}h banco / {funcionario.abonos} abonos)\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Data*</label>\r\n              <input \r\n                type=\"date\" \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={newFolga.data}\r\n                onChange={(e) => setNewFolga({...newFolga, data: e.target.value})}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Tipo*</label>\r\n              <select \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={newFolga.tipo}\r\n                onChange={(e) => setNewFolga({...newFolga, tipo: e.target.value})}\r\n                required\r\n              >\r\n                <option value=\"abono\">Abono</option>\r\n                <option value=\"banco de horas\">Banco de Horas</option>\r\n                <option value=\"compensação\">Compensação</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Período*</label>\r\n              <select \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                value={newFolga.periodo}\r\n                onChange={(e) => setNewFolga({...newFolga, periodo: e.target.value})}\r\n                required\r\n              >\r\n                <option value=\"dia\">Dia inteiro</option>\r\n                <option value=\"manhã\">Manhã</option>\r\n                <option value=\"tarde\">Tarde</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-sm text-purple-300 mb-1\">Motivo*</label>\r\n            <textarea \r\n              className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n              rows=\"3\"\r\n              value={newFolga.motivo}\r\n              onChange={(e) => setNewFolga({...newFolga, motivo: e.target.value})}\r\n              placeholder=\"Informe o motivo da folga\"\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div className=\"flex justify-end\">\r\n            <button \r\n              type=\"submit\" \r\n              className=\"bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-md font-medium\"\r\n            >\r\n              Registrar Folga\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n      {/* Modal de Rejeição */}\r\n      {modalRejeitarAberto && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-purple-900 rounded-lg p-6 w-full max-w-md\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Rejeitar Solicitação</h3>\r\n            <p className=\"mb-4\">\r\n              Você está rejeitando a folga de <strong>{solicitacaoSelecionada?.funcionarioNome}</strong> para o dia <strong>{solicitacaoSelecionada?.data}</strong>.\r\n            </p>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-sm text-purple-300 mb-1\">Motivo da Rejeição*</label>\r\n              <textarea \r\n                className=\"w-full bg-purple-800 border border-purple-700 rounded-md p-2 text-white\"\r\n                rows=\"3\"\r\n                value={observacaoRejeicao}\r\n                onChange={(e) => setObservacaoRejeicao(e.target.value)}\r\n                placeholder=\"Informe o motivo da rejeição\"\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"flex justify-end space-x-2\">\r\n              <button \r\n                onClick={() => setModalRejeitarAberto(false)}\r\n                className=\"bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded-md font-medium\"\r\n              >\r\n                Cancelar\r\n              </button>\r\n              <button \r\n                onClick={() => changeStatus(solicitacaoSelecionada?.id, 'rejeitado')}\r\n                className=\"bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-md font-medium\"\r\n                disabled={!observacaoRejeicao}\r\n              >\r\n                Confirmar Rejeição\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Debug: Visualizar dados de funcionários */}\r\n      <div className=\"mt-6 bg-purple-900 bg-opacity-40 p-4 rounded-lg\">\r\n        <details>\r\n          <summary className=\"cursor-pointer text-purple-300 hover:text-white\">Dados de Funcionários para Debug</summary>\r\n          <div className=\"mt-2 overflow-auto max-h-64 text-xs\">\r\n            <h4 className=\"font-bold text-purple-300\">Funcionários Consolidados ({allFuncionarios.length}):</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(allFuncionarios, null, 2)}\r\n            </pre>\r\n            \r\n            <h4 className=\"font-bold text-purple-300 mt-2\">Funcionários do localStorage ({localFuncionarios.length}):</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(localFuncionarios, null, 2)}\r\n            </pre>\r\n            \r\n            <h4 className=\"font-bold text-purple-300 mt-2\">Registros de Usuários:</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(JSON.parse(localStorage.getItem('registeredUsers') || '[]'), null, 2)}\r\n            </pre>\r\n            \r\n            <h4 className=\"font-bold text-purple-300 mt-2\">Funcionários de Ajustes de Ponto:</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(\r\n                (JSON.parse(localStorage.getItem('ajustePontoSolicitacoes') || '[]'))\r\n                  .map(a => ({id: a.funcionarioId, nome: a.funcionarioNome}))\r\n                  .filter((v, i, a) => a.findIndex(t => t.id === v.id) === i),\r\n                null, 2\r\n              )}\r\n            </pre>\r\n            \r\n            <h4 className=\"font-bold text-purple-300 mt-2\">Usuário Atual:</h4>\r\n            <pre className=\"bg-purple-950 p-2 rounded\">\r\n              {JSON.stringify(JSON.parse(localStorage.getItem('user') || '{}'), null, 2)}\r\n            </pre>\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolgaTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}