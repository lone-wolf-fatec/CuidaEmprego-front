{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carlos\\\\Desktop\\\\API SOZINHO 2\\\\alone-front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport LoginRegisterPage from \"./pages/LoginRegisterPage\";\nimport UserDashboard from \"./pages/UserDashboard\";\nimport AdminDashboard from \"./pages/AdminDashboard\";\nimport { UserProvider } from \"./context/UserContext\";\nimport WorkshiftProvider from \"./context/WorkshiftContext\";\nimport AusenciasTab from \"./components/AusenciasTab\";\nimport DadosColaborador from \"./components/DadosColaborador\";\nimport HorasExtrasTab from \"./components/HorasExtrasTab\";\nimport FeriasTab from \"./components/FeriasTab\";\nimport FolgaTab from \"./components/FolgaTab\";\n\n// Componente para proteger rotas com base no papel do usuário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  var _user$roles, _user$roles2, _user$roles3;\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n\n  // Verificar se o usuário está autenticado\n  if (!(user !== null && user !== void 0 && user.authenticated)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Se for uma rota que requer ADMIN, verificar se o usuário é admin\n  if (requiredRole === \"ADMIN\" && !((_user$roles = user.roles) !== null && _user$roles !== void 0 && _user$roles.includes(\"ADMIN\"))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Se for uma rota que requer FUNCIONARIO, permitir também ADMIN (pois admin pode acessar tudo)\n  if (requiredRole === \"FUNCIONARIO\" && !((_user$roles2 = user.roles) !== null && _user$roles2 !== void 0 && _user$roles2.includes(\"FUNCIONARIO\")) && !((_user$roles3 = user.roles) !== null && _user$roles3 !== void 0 && _user$roles3.includes(\"ADMIN\"))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n\n// Componente para inicializar dados de exemplo para o sistema de ausências\n_c = ProtectedRoute;\nconst InitializeData = () => {\n  _s();\n  React.useEffect(() => {\n    // Verificar se já existem dados no localStorage\n    if (!localStorage.getItem('employees')) {\n      // Inicializar funcionários apenas se não existirem\n      const initialEmployees = [{\n        id: 1,\n        name: 'João Silva',\n        email: 'joao.silva@empresa.com',\n        department: 'TI'\n      }, {\n        id: 2,\n        name: 'Maria Oliveira',\n        email: 'maria.oliveira@empresa.com',\n        department: 'RH'\n      }, {\n        id: 3,\n        name: 'Carlos Pereira',\n        email: 'carlos.pereira@empresa.com',\n        department: 'Financeiro'\n      }, {\n        id: 4,\n        name: 'Ana Santos',\n        email: 'ana.santos@empresa.com',\n        department: 'Marketing'\n      }, {\n        id: 5,\n        name: 'Bruno Almeida',\n        email: 'bruno.almeida@empresa.com',\n        department: 'Operações'\n      }];\n      localStorage.setItem('employees', JSON.stringify(initialEmployees));\n    }\n\n    // Inicializar ausências\n    if (!localStorage.getItem('ausencias')) {\n      const initialAusencias = [{\n        id: 1,\n        employeeId: 2,\n        employeeName: 'Maria Oliveira',\n        tipo: 'atestado',\n        dataInicio: '10/03/2025',\n        dataFim: '12/03/2025',\n        motivo: 'Atestado médico - consulta',\n        anexo: 'atestado_maria.pdf',\n        status: 'aprovado',\n        notified: true,\n        dataConfirmacao: '09/03/2025',\n        confirmacaoMotivo: 'Aprovado conforme política de atestados médicos'\n      }, {\n        id: 2,\n        employeeId: 1,\n        employeeName: 'João Silva',\n        tipo: 'falta',\n        dataInicio: '15/03/2025',\n        dataFim: '15/03/2025',\n        motivo: 'Problema familiar',\n        anexo: null,\n        status: 'pendente',\n        notified: false\n      }, {\n        id: 3,\n        employeeId: 5,\n        employeeName: 'Bruno Almeida',\n        tipo: 'atestado',\n        dataInicio: '18/03/2025',\n        dataFim: '20/03/2025',\n        motivo: 'Atestado médico - tratamento',\n        anexo: 'atestado_bruno.pdf',\n        status: 'pendente',\n        notified: false\n      }, {\n        id: 4,\n        employeeId: 3,\n        employeeName: 'Carlos Pereira',\n        tipo: 'licença',\n        dataInicio: '05/04/2025',\n        dataFim: '15/04/2025',\n        motivo: 'Licença paternidade',\n        anexo: 'declaracao_paternidade.pdf',\n        status: 'aprovado',\n        notified: true,\n        dataConfirmacao: '01/04/2025',\n        confirmacaoMotivo: 'Aprovado conforme lei de licença paternidade'\n      }, {\n        id: 5,\n        employeeId: 4,\n        employeeName: 'Ana Santos',\n        tipo: 'falta',\n        dataInicio: '08/03/2025',\n        dataFim: '08/03/2025',\n        motivo: 'Transporte público em greve',\n        anexo: null,\n        status: 'rejeitado',\n        notified: true,\n        dataConfirmacao: '09/03/2025',\n        confirmacaoMotivo: 'Solicitação negada, houve opções alternativas de transporte'\n      }];\n      localStorage.setItem('ausencias', JSON.stringify(initialAusencias));\n    }\n  }, []);\n  return null;\n};\n_s(InitializeData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = InitializeData;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(UserProvider, {\n    children: /*#__PURE__*/_jsxDEV(WorkshiftProvider, {\n      children: [/*#__PURE__*/_jsxDEV(InitializeData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LoginRegisterPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"FUNCIONARIO\",\n              children: /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"ADMIN\",\n              children: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/rh/horas-extras\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"ADMIN\",\n              children: /*#__PURE__*/_jsxDEV(HorasExtrasTab, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/rh/ferias\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"ADMIN\",\n              children: /*#__PURE__*/_jsxDEV(FeriasTab, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/rh/folgas\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"ADMIN\",\n              children: /*#__PURE__*/_jsxDEV(FolgaTab, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin/ausencias\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"ADMIN\",\n              children: /*#__PURE__*/_jsxDEV(AusenciasTab, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin/colaborador/:id\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              requiredRole: \"ADMIN\",\n              children: /*#__PURE__*/_jsxDEV(DadosColaborador, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"InitializeData\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","LoginRegisterPage","UserDashboard","AdminDashboard","UserProvider","WorkshiftProvider","AusenciasTab","DadosColaborador","HorasExtrasTab","FeriasTab","FolgaTab","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_user$roles","_user$roles2","_user$roles3","user","JSON","parse","localStorage","getItem","authenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","roles","includes","_c","InitializeData","_s","useEffect","initialEmployees","id","name","email","department","setItem","stringify","initialAusencias","employeeId","employeeName","tipo","dataInicio","dataFim","motivo","anexo","status","notified","dataConfirmacao","confirmacaoMotivo","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["C:/Users/Carlos/Desktop/API SOZINHO 2/alone-front/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport LoginRegisterPage from \"./pages/LoginRegisterPage\";\r\nimport UserDashboard from \"./pages/UserDashboard\";\r\nimport AdminDashboard from \"./pages/AdminDashboard\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport WorkshiftProvider from \"./context/WorkshiftContext\";\r\nimport AusenciasTab from \"./components/AusenciasTab\";\r\nimport DadosColaborador from \"./components/DadosColaborador\";\r\nimport HorasExtrasTab from \"./components/HorasExtrasTab\";\r\nimport FeriasTab from \"./components/FeriasTab\";\r\nimport FolgaTab from \"./components/FolgaTab\";\r\n\r\n// Componente para proteger rotas com base no papel do usuário\r\nconst ProtectedRoute = ({ children, requiredRole }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n\r\n  // Verificar se o usuário está autenticado\r\n  if (!user?.authenticated) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Se for uma rota que requer ADMIN, verificar se o usuário é admin\r\n  if (requiredRole === \"ADMIN\" && !user.roles?.includes(\"ADMIN\")) {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  // Se for uma rota que requer FUNCIONARIO, permitir também ADMIN (pois admin pode acessar tudo)\r\n  if (requiredRole === \"FUNCIONARIO\" && \r\n      !user.roles?.includes(\"FUNCIONARIO\") && \r\n      !user.roles?.includes(\"ADMIN\")) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\n// Componente para inicializar dados de exemplo para o sistema de ausências\r\nconst InitializeData = () => {\r\n  React.useEffect(() => {\r\n    // Verificar se já existem dados no localStorage\r\n    if (!localStorage.getItem('employees')) {\r\n      // Inicializar funcionários apenas se não existirem\r\n      const initialEmployees = [\r\n        { id: 1, name: 'João Silva', email: 'joao.silva@empresa.com', department: 'TI' },\r\n        { id: 2, name: 'Maria Oliveira', email: 'maria.oliveira@empresa.com', department: 'RH' },\r\n        { id: 3, name: 'Carlos Pereira', email: 'carlos.pereira@empresa.com', department: 'Financeiro' },\r\n        { id: 4, name: 'Ana Santos', email: 'ana.santos@empresa.com', department: 'Marketing' },\r\n        { id: 5, name: 'Bruno Almeida', email: 'bruno.almeida@empresa.com', department: 'Operações' }\r\n      ];\r\n      localStorage.setItem('employees', JSON.stringify(initialEmployees));\r\n    }\r\n    \r\n    // Inicializar ausências\r\n    if (!localStorage.getItem('ausencias')) {\r\n      const initialAusencias = [\r\n        { \r\n          id: 1, \r\n          employeeId: 2, \r\n          employeeName: 'Maria Oliveira', \r\n          tipo: 'atestado', \r\n          dataInicio: '10/03/2025',\r\n          dataFim: '12/03/2025',\r\n          motivo: 'Atestado médico - consulta',\r\n          anexo: 'atestado_maria.pdf',\r\n          status: 'aprovado',\r\n          notified: true,\r\n          dataConfirmacao: '09/03/2025',\r\n          confirmacaoMotivo: 'Aprovado conforme política de atestados médicos'\r\n        },\r\n        { \r\n          id: 2, \r\n          employeeId: 1, \r\n          employeeName: 'João Silva', \r\n          tipo: 'falta', \r\n          dataInicio: '15/03/2025',\r\n          dataFim: '15/03/2025',\r\n          motivo: 'Problema familiar',\r\n          anexo: null,\r\n          status: 'pendente',\r\n          notified: false\r\n        },\r\n        { \r\n          id: 3, \r\n          employeeId: 5, \r\n          employeeName: 'Bruno Almeida', \r\n          tipo: 'atestado', \r\n          dataInicio: '18/03/2025',\r\n          dataFim: '20/03/2025',\r\n          motivo: 'Atestado médico - tratamento',\r\n          anexo: 'atestado_bruno.pdf',\r\n          status: 'pendente',\r\n          notified: false\r\n        },\r\n        { \r\n          id: 4, \r\n          employeeId: 3, \r\n          employeeName: 'Carlos Pereira', \r\n          tipo: 'licença', \r\n          dataInicio: '05/04/2025',\r\n          dataFim: '15/04/2025',\r\n          motivo: 'Licença paternidade',\r\n          anexo: 'declaracao_paternidade.pdf',\r\n          status: 'aprovado',\r\n          notified: true,\r\n          dataConfirmacao: '01/04/2025',\r\n          confirmacaoMotivo: 'Aprovado conforme lei de licença paternidade'\r\n        },\r\n        { \r\n          id: 5, \r\n          employeeId: 4, \r\n          employeeName: 'Ana Santos', \r\n          tipo: 'falta', \r\n          dataInicio: '08/03/2025',\r\n          dataFim: '08/03/2025',\r\n          motivo: 'Transporte público em greve',\r\n          anexo: null,\r\n          status: 'rejeitado',\r\n          notified: true,\r\n          dataConfirmacao: '09/03/2025',\r\n          confirmacaoMotivo: 'Solicitação negada, houve opções alternativas de transporte'\r\n        }\r\n      ];\r\n      localStorage.setItem('ausencias', JSON.stringify(initialAusencias));\r\n    }\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nconst App = () => {\r\n  return (\r\n    <UserProvider>\r\n      <WorkshiftProvider>\r\n        <InitializeData />\r\n        <Router>\r\n          <Routes>\r\n            {/* Página inicial (login e registro) */}\r\n            <Route path=\"/\" element={<LoginRegisterPage />} />\r\n\r\n            {/* Rota protegida do Dashboard para funcionários */}\r\n            <Route\r\n              path=\"/dashboard\"\r\n              element={\r\n                <ProtectedRoute requiredRole=\"FUNCIONARIO\">\r\n                  <UserDashboard />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n\r\n            {/* Rota protegida da Administração apenas para admins */}\r\n            <Route\r\n              path=\"/admin\"\r\n              element={\r\n                <ProtectedRoute requiredRole=\"ADMIN\">\r\n                  <AdminDashboard />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n\r\n            {/* Rotas protegidas para sistema de RH - apenas para admins */}\r\n            <Route\r\n              path=\"/rh/horas-extras\"\r\n              element={\r\n                <ProtectedRoute requiredRole=\"ADMIN\">\r\n                  <HorasExtrasTab />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            \r\n            <Route\r\n              path=\"/rh/ferias\"\r\n              element={\r\n                <ProtectedRoute requiredRole=\"ADMIN\">\r\n                  <FeriasTab />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            \r\n            <Route\r\n              path=\"/rh/folgas\"\r\n              element={\r\n                <ProtectedRoute requiredRole=\"ADMIN\">\r\n                  <FolgaTab />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n\r\n            {/* Rotas para o sistema de ausências */}\r\n            <Route\r\n              path=\"/admin/ausencias\"\r\n              element={\r\n                <ProtectedRoute requiredRole=\"ADMIN\">\r\n                  <AusenciasTab />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path=\"/admin/colaborador/:id\"\r\n              element={\r\n                <ProtectedRoute requiredRole=\"ADMIN\">\r\n                  <DadosColaborador />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n\r\n            {/* Redirecionamento para a página inicial caso a rota não exista */}\r\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n          </Routes>\r\n        </Router>\r\n      </WorkshiftProvider>\r\n    </UserProvider>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}